--------------------------------------------------------
--  File created - Wednesday-March-13-2024   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for DB Link ADBM_DEPCSP
--------------------------------------------------------

  CREATE DATABASE LINK "ADBM_DEPCSP"
   CONNECT TO "ADBM" IDENTIFIED BY VALUES ':1'
   USING 'DEPCSP';
--------------------------------------------------------
--  DDL for DB Link INFOPOOL_VFD2REPO.WORLD
--------------------------------------------------------

  CREATE DATABASE LINK "INFOPOOL_VFD2REPO.WORLD"
   CONNECT TO "INFOPOOL" IDENTIFIED BY VALUES ':1'
   USING 'VFD2REPO';
--------------------------------------------------------
--  DDL for Type T_PWCONNECT
--------------------------------------------------------

  CREATE OR REPLACE TYPE "TOAKDBI"."T_PWCONNECT" AS TABLE OF t_role;

/
--------------------------------------------------------
--  DDL for Type T_ROLE
--------------------------------------------------------

  CREATE OR REPLACE TYPE "TOAKDBI"."T_ROLE" as object (
  pwc_name varchar2(100),
  pwc_user varchar2(100),
  pwc_pw varchar2(1000),
  pwc_write char(1),
  pwc_cat varchar2(3),
  pwc_typ varchar2(10),
  pwc_group varchar2(30));

/
--------------------------------------------------------
--  DDL for Sequence DBCHECKLOG_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "TOAKDBI"."DBCHECKLOG_SEQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 474 NOCACHE  NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence DBI_CONTACTS_1SQ
--------------------------------------------------------

   CREATE SEQUENCE  "TOAKDBI"."DBI_CONTACTS_1SQ"  MINVALUE 1 MAXVALUE 99999 INCREMENT BY 1 START WITH 1211 NOCACHE  NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence DBI_LOGS_1SQ
--------------------------------------------------------

   CREATE SEQUENCE  "TOAKDBI"."DBI_LOGS_1SQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 4422051 NOCACHE  NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence DBI_REQUEST_1SQ
--------------------------------------------------------

   CREATE SEQUENCE  "TOAKDBI"."DBI_REQUEST_1SQ"  MINVALUE 1 MAXVALUE 99999 INCREMENT BY 1 START WITH 26625 NOCACHE  ORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence DBI_SCRIPTS_1SQ
--------------------------------------------------------

   CREATE SEQUENCE  "TOAKDBI"."DBI_SCRIPTS_1SQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 23093 NOCACHE  NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence GENERAL_PROPERTIES_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "TOAKDBI"."GENERAL_PROPERTIES_SEQ"  MINVALUE 0 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 5769 NOCACHE  NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence MAIN_MENU_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "TOAKDBI"."MAIN_MENU_SEQ"  MINVALUE 1 MAXVALUE 1000000000000000000000000000 INCREMENT BY 1 START WITH 151 NOCACHE  NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence PWCONNECTS_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "TOAKDBI"."PWCONNECTS_SEQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 12006 NOCACHE  NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence PWGRANTS_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "TOAKDBI"."PWGRANTS_SEQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 16207 NOCACHE  NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence PWGROUPS_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "TOAKDBI"."PWGROUPS_SEQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 118 NOCACHE  NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence PWLINKS_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "TOAKDBI"."PWLINKS_SEQ"  MINVALUE 0 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 0 NOCACHE  NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence PWREQUESTS_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "TOAKDBI"."PWREQUESTS_SEQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 7462 NOCACHE  NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence PWROLES_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "TOAKDBI"."PWROLES_SEQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 141 NOCACHE  NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence PWUSERS_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "TOAKDBI"."PWUSERS_SEQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 700 NOCACHE  NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_DBI
--------------------------------------------------------

   CREATE SEQUENCE  "TOAKDBI"."SEQ_DBI"  MINVALUE 1 MAXVALUE 999999999999999 INCREMENT BY 1 START WITH 21152 NOCACHE  NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_DBI_NUMBER_FBA
--------------------------------------------------------

   CREATE SEQUENCE  "TOAKDBI"."SEQ_DBI_NUMBER_FBA"  MINVALUE 1 MAXVALUE 9999 INCREMENT BY 1 START WITH 120 NOCACHE  ORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_DBI_NUMBER_TOAR
--------------------------------------------------------

   CREATE SEQUENCE  "TOAKDBI"."SEQ_DBI_NUMBER_TOAR"  MINVALUE 1 MAXVALUE 9999 INCREMENT BY 1 START WITH 401 NOCACHE  NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SUB_MENU_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "TOAKDBI"."SUB_MENU_SEQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 661 NOCACHE  NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Table BLACKLIST
--------------------------------------------------------

  CREATE TABLE "TOAKDBI"."BLACKLIST" 
   (	"OWNER" VARCHAR2(40 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA" ;
--------------------------------------------------------
--  DDL for Table CONNECT_USER_PASSWORDS
--------------------------------------------------------

  CREATE TABLE "TOAKDBI"."CONNECT_USER_PASSWORDS" 
   (	"PWC_USER" VARCHAR2(100 BYTE), 
	"PWC_NAME" VARCHAR2(100 BYTE), 
	"PASSWORD" VARCHAR2(8 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA" ;
--------------------------------------------------------
--  DDL for Table DBCHECKLOG
--------------------------------------------------------

  CREATE TABLE "TOAKDBI"."DBCHECKLOG" 
   (	"LOGID" NUMBER(*,0), 
	"DB" VARCHAR2(30 BYTE), 
	"DBHOST" VARCHAR2(50 BYTE), 
	"CREATED" DATE DEFAULT sysdate, 
	"CLEARED" DATE, 
	"TICKET" VARCHAR2(20 BYTE), 
	"REASON" VARCHAR2(1000 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA" ;
  GRANT SELECT ON "TOAKDBI"."DBCHECKLOG" TO "PMC3I_O";
  GRANT SELECT ON "TOAKDBI"."DBCHECKLOG" TO "PMC3I_C";
--------------------------------------------------------
--  DDL for Table DBI_AVAILABLE_TABLES
--------------------------------------------------------

  CREATE TABLE "TOAKDBI"."DBI_AVAILABLE_TABLES" 
   (	"DB_INSTANCE" VARCHAR2(10 BYTE), 
	"TABLE_NAME" VARCHAR2(30 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA" ;

   COMMENT ON COLUMN "TOAKDBI"."DBI_AVAILABLE_TABLES"."DB_INSTANCE" IS 'The DB instance on which the table resides';
   COMMENT ON COLUMN "TOAKDBI"."DBI_AVAILABLE_TABLES"."TABLE_NAME" IS 'The KIAS2000 table name';
--------------------------------------------------------
--  DDL for Table DBI_CLEANUP_INSTANCES
--------------------------------------------------------

  CREATE TABLE "TOAKDBI"."DBI_CLEANUP_INSTANCES" 
   (	"DB_INSTANCE" VARCHAR2(32 BYTE), 
	"CATALOG_USER" VARCHAR2(32 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA" ;
--------------------------------------------------------
--  DDL for Table DBI_CONTACTS
--------------------------------------------------------

  CREATE TABLE "TOAKDBI"."DBI_CONTACTS" 
   (	"CONTACT_ID" NUMBER, 
	"CONTACT_LAST_NAME" VARCHAR2(25 BYTE), 
	"CONTACT_FIRST_NAME" VARCHAR2(25 BYTE), 
	"CONTACT_DEPT" VARCHAR2(15 BYTE), 
	"CONTACT_POSITION" VARCHAR2(40 BYTE), 
	"CONTACT_PHONE" VARCHAR2(20 BYTE), 
	"CONTACT_MOBILE" VARCHAR2(20 BYTE), 
	"CONTACT_EMAIL" VARCHAR2(40 BYTE), 
	"CONTACT_COMPANY" VARCHAR2(15 BYTE), 
	"LEVEL_IND" VARCHAR2(3 BYTE), 
	"USERNAME" VARCHAR2(20 BYTE), 
	"PASSWORD" VARCHAR2(25 BYTE), 
	"LOGON_ATTEMPTS" NUMBER(1,0) DEFAULT 0, 
	"SUBAREA_ID" VARCHAR2(5 BYTE), 
	"ACTIVE_IND" CHAR(1 BYTE) DEFAULT 'Y'
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA" ;

   COMMENT ON COLUMN "TOAKDBI"."DBI_CONTACTS"."CONTACT_ID" IS 'Unique ID assigned to the contact.';
   COMMENT ON COLUMN "TOAKDBI"."DBI_CONTACTS"."CONTACT_LAST_NAME" IS 'The last name of the contact person.';
   COMMENT ON COLUMN "TOAKDBI"."DBI_CONTACTS"."CONTACT_FIRST_NAME" IS 'The first name of the contact person.';
   COMMENT ON COLUMN "TOAKDBI"."DBI_CONTACTS"."CONTACT_DEPT" IS 'The department the contact person works for.';
   COMMENT ON COLUMN "TOAKDBI"."DBI_CONTACTS"."CONTACT_POSITION" IS 'Contact person''s job title.';
   COMMENT ON COLUMN "TOAKDBI"."DBI_CONTACTS"."CONTACT_PHONE" IS 'The Vodafone D2 4 digit phone number';
   COMMENT ON COLUMN "TOAKDBI"."DBI_CONTACTS"."CONTACT_MOBILE" IS 'Mobile phone number.';
   COMMENT ON COLUMN "TOAKDBI"."DBI_CONTACTS"."CONTACT_EMAIL" IS 'The Vodafone inhouse email address to send notifications to.';
   COMMENT ON COLUMN "TOAKDBI"."DBI_CONTACTS"."CONTACT_COMPANY" IS 'The indvidual''s company. This may be Vodafone or an external company.';
   COMMENT ON COLUMN "TOAKDBI"."DBI_CONTACTS"."LEVEL_IND" IS 'Foreign key to DBI_OPER_SHORT in the DBI_OPERATOR Table. Indicates the level of the individual in the DBI flow.';
   COMMENT ON COLUMN "TOAKDBI"."DBI_CONTACTS"."USERNAME" IS 'The chosen username of this indviudal.';
   COMMENT ON COLUMN "TOAKDBI"."DBI_CONTACTS"."PASSWORD" IS 'Encrypted user password.';
   COMMENT ON COLUMN "TOAKDBI"."DBI_CONTACTS"."LOGON_ATTEMPTS" IS 'Number of times the user attempted to log in using the wrong password. Once this counter reaches 3 the user can no longer log in to the DBI Tool.';
   COMMENT ON TABLE "TOAKDBI"."DBI_CONTACTS"  IS 'Table with user and authentisation data for all users of DBI Tool.';
  GRANT SELECT ON "TOAKDBI"."DBI_CONTACTS" TO "DATDI";
  GRANT UPDATE ON "TOAKDBI"."DBI_CONTACTS" TO "TOAKADM";
  GRANT SELECT ON "TOAKDBI"."DBI_CONTACTS" TO "TOAKADM";
  GRANT INSERT ON "TOAKDBI"."DBI_CONTACTS" TO "TOAKADM";
  GRANT DELETE ON "TOAKDBI"."DBI_CONTACTS" TO "TOAKADM";
--------------------------------------------------------
--  DDL for Table DBI_DOCUMENTATION
--------------------------------------------------------

  CREATE TABLE "TOAKDBI"."DBI_DOCUMENTATION" 
   (	"REQUEST_ID" VARCHAR2(6 BYTE), 
	"DOC_ID" VARCHAR2(10 BYTE), 
	"DOC_CREATION_DATE" DATE, 
	"DOC_COMMENTS" VARCHAR2(1000 BYTE), 
	"DOC_LINK" VARCHAR2(200 BYTE), 
	"DOC_NAME" VARCHAR2(100 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA" ;
--------------------------------------------------------
--  DDL for Table DBI_DWH_TABLES
--------------------------------------------------------

  CREATE TABLE "TOAKDBI"."DBI_DWH_TABLES" 
   (	"DB_INSTANCE" VARCHAR2(10 BYTE), 
	"DWH_TABLE_NAME" VARCHAR2(30 BYTE), 
	"DWH_THRESHOLD" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA" ;

   COMMENT ON COLUMN "TOAKDBI"."DBI_DWH_TABLES"."DB_INSTANCE" IS 'The DB instance on which the Table resides';
   COMMENT ON COLUMN "TOAKDBI"."DBI_DWH_TABLES"."DWH_TABLE_NAME" IS 'The KIAS2000 table name';
   COMMENT ON COLUMN "TOAKDBI"."DBI_DWH_TABLES"."DWH_THRESHOLD" IS 'The number of rows beyond which the DWH team should be informed of updates in this table';
--------------------------------------------------------
--  DDL for Table DBI_EXCEPTION
--------------------------------------------------------

  CREATE TABLE "TOAKDBI"."DBI_EXCEPTION" 
   (	"REQUEST_ID" VARCHAR2(6 BYTE), 
	"OPERATOR_ID" NUMBER, 
	"REASON" VARCHAR2(1024 BYTE), 
	"CREATION_DATE" DATE DEFAULT sysdate, 
	"LAST_UPDATE_DATE" DATE DEFAULT sysdate
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA" ;
--------------------------------------------------------
--  DDL for Table DBI_EXECUTION
--------------------------------------------------------

  CREATE TABLE "TOAKDBI"."DBI_EXECUTION" 
   (	"REQUEST_ID" VARCHAR2(6 BYTE), 
	"EXECUTION_STAGE" VARCHAR2(4 BYTE), 
	"DB_INSTANCE" VARCHAR2(10 BYTE), 
	"EXECUTION_ID" NUMBER, 
	"DB_USER" VARCHAR2(15 BYTE), 
	"OPERATOR_ID" NUMBER, 
	"EXECUTION_DATE" DATE, 
	"RUN_TIME_MINUTES" NUMBER, 
	"EXECUTION_COMMENTS" VARCHAR2(1000 BYTE), 
	"UPDATE_DATE" DATE, 
	"MASCHINE" VARCHAR2(30 BYTE), 
	"PROCNAME" VARCHAR2(32 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA" ;

   COMMENT ON COLUMN "TOAKDBI"."DBI_EXECUTION"."REQUEST_ID" IS 'Unique DBI number assigned automatically in format ''dbXXXX'' Where XXXX is a 4-digit number.';
   COMMENT ON COLUMN "TOAKDBI"."DBI_EXECUTION"."EXECUTION_STAGE" IS 'Stage may be PROD or TEST.';
   COMMENT ON COLUMN "TOAKDBI"."DBI_EXECUTION"."DB_INSTANCE" IS 'Database instance on which the SQL script will be executed.';
   COMMENT ON COLUMN "TOAKDBI"."DBI_EXECUTION"."EXECUTION_ID" IS 'This number is incremented with each test or production execution.';
   COMMENT ON COLUMN "TOAKDBI"."DBI_EXECUTION"."DB_USER" IS 'Database user that will be used to execute SQL script.';
   COMMENT ON COLUMN "TOAKDBI"."DBI_EXECUTION"."OPERATOR_ID" IS 'The ID of the operator that ran the execution. Related to the field DBI_CONTACTS.CONTACT_ID';
   COMMENT ON COLUMN "TOAKDBI"."DBI_EXECUTION"."EXECUTION_DATE" IS 'Date an time when DBI was last executed.';
   COMMENT ON COLUMN "TOAKDBI"."DBI_EXECUTION"."RUN_TIME_MINUTES" IS 'Elapsed time during DBI execution.';
   COMMENT ON COLUMN "TOAKDBI"."DBI_EXECUTION"."EXECUTION_COMMENTS" IS 'Any comments related to the particular executuion';
   COMMENT ON TABLE "TOAKDBI"."DBI_EXECUTION"  IS 'Table to store information on a DBI''s test or production executions. The test stage may be "test" or "prod".';
--------------------------------------------------------
--  DDL for Table DBI_EXECUTION_RESULTS
--------------------------------------------------------

  CREATE TABLE "TOAKDBI"."DBI_EXECUTION_RESULTS" 
   (	"REQUEST_ID" VARCHAR2(6 BYTE), 
	"EXECUTION_STAGE" VARCHAR2(4 BYTE), 
	"DB_INSTANCE" VARCHAR2(10 BYTE), 
	"EXECUTION_ID" NUMBER, 
	"TABLE_NAME" VARCHAR2(30 BYTE), 
	"SQL_ACTION" CHAR(1 BYTE), 
	"EXP_ROWS" NUMBER, 
	"ACT_ROWS" NUMBER, 
	"ROW_ID" NUMBER(4,0), 
	"DB_USER" VARCHAR2(15 BYTE), 
	"OPERATOR_ID" NUMBER, 
	"UPDATE_DATE" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA" ;

   COMMENT ON COLUMN "TOAKDBI"."DBI_EXECUTION_RESULTS"."REQUEST_ID" IS 'Unique DBI number assigned automatically in format ''dbXXXX'' Where XXXX is a 4-digit number.';
   COMMENT ON COLUMN "TOAKDBI"."DBI_EXECUTION_RESULTS"."EXECUTION_STAGE" IS 'Stage may be TEST or PROD.';
   COMMENT ON COLUMN "TOAKDBI"."DBI_EXECUTION_RESULTS"."DB_INSTANCE" IS 'Database instance on which SQL script was or will be executed.';
   COMMENT ON COLUMN "TOAKDBI"."DBI_EXECUTION_RESULTS"."EXECUTION_ID" IS 'This number is incremented with each test or production run.';
   COMMENT ON COLUMN "TOAKDBI"."DBI_EXECUTION_RESULTS"."TABLE_NAME" IS 'Name of the object to be manipulated.';
   COMMENT ON COLUMN "TOAKDBI"."DBI_EXECUTION_RESULTS"."SQL_ACTION" IS 'Delete, insert, update or PL/SQL.';
   COMMENT ON COLUMN "TOAKDBI"."DBI_EXECUTION_RESULTS"."EXP_ROWS" IS 'Rows that are expected to be changed.';
   COMMENT ON COLUMN "TOAKDBI"."DBI_EXECUTION_RESULTS"."ACT_ROWS" IS 'Rows that were changed by this particular test or production run.';
   COMMENT ON COLUMN "TOAKDBI"."DBI_EXECUTION_RESULTS"."DB_USER" IS 'The DB User that was used for this execution';
   COMMENT ON TABLE "TOAKDBI"."DBI_EXECUTION_RESULTS"  IS 'Expected and real result of a DBI execution.';
--------------------------------------------------------
--  DDL for Table DBI_EXECUTION_SELECTS
--------------------------------------------------------

  CREATE TABLE "TOAKDBI"."DBI_EXECUTION_SELECTS" 
   (	"REQUEST_ID" VARCHAR2(6 BYTE), 
	"TABLE_NAME" VARCHAR2(60 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA" ;
--------------------------------------------------------
--  DDL for Table DBI_IMPORT
--------------------------------------------------------

  CREATE TABLE "TOAKDBI"."DBI_IMPORT" 
   (	"REQUEST_ID" VARCHAR2(6 BYTE), 
	"REQUESTOR" VARCHAR2(56 BYTE), 
	"SDE" VARCHAR2(69 BYTE), 
	"KOMMENTAR" VARCHAR2(61 BYTE), 
	"VON" VARCHAR2(2 BYTE), 
	"STATUS" VARCHAR2(2 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA" ;
--------------------------------------------------------
--  DDL for Table DBI_INSTANCES
--------------------------------------------------------

  CREATE TABLE "TOAKDBI"."DBI_INSTANCES" 
   (	"PROD_INSTANCE" VARCHAR2(10 BYTE), 
	"MARKET" VARCHAR2(6 BYTE), 
	"TEST_INSTANCE" VARCHAR2(10 BYTE), 
	"DOWNTIME_BEGIN" DATE, 
	"DOWNTIME_END" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA" ;

   COMMENT ON COLUMN "TOAKDBI"."DBI_INSTANCES"."PROD_INSTANCE" IS 'The name of the DB production instance';
   COMMENT ON COLUMN "TOAKDBI"."DBI_INSTANCES"."MARKET" IS 'The market to which the production instance belongs (either credit or debit)';
   COMMENT ON COLUMN "TOAKDBI"."DBI_INSTANCES"."TEST_INSTANCE" IS 'Indicates the related testable instance. Only relevant for OL* and CMAX';
   COMMENT ON COLUMN "TOAKDBI"."DBI_INSTANCES"."DOWNTIME_BEGIN" IS 'Indicates the time from when the testable instance will not be avaliable';
   COMMENT ON COLUMN "TOAKDBI"."DBI_INSTANCES"."DOWNTIME_END" IS 'Indicates the time from when the testable instance will be avaliable again';
--------------------------------------------------------
--  DDL for Table DBI_INSTANCES_PP
--------------------------------------------------------

  CREATE TABLE "TOAKDBI"."DBI_INSTANCES_PP" 
   (	"PROD_INSTANCE" VARCHAR2(10 BYTE), 
	"PREPROD_INSTANCE" VARCHAR2(10 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA" ;
--------------------------------------------------------
--  DDL for Table DBI_K2K_OWNERSHIP
--------------------------------------------------------

  CREATE TABLE "TOAKDBI"."DBI_K2K_OWNERSHIP" 
   (	"AREA" VARCHAR2(32 BYTE), 
	"SUB_AREA" VARCHAR2(32 BYTE), 
	"SW_VERSION" VARCHAR2(7 BYTE), 
	"OBJ_NAME_GDD" VARCHAR2(32 BYTE), 
	"OBJ_NAME_PRD" VARCHAR2(32 BYTE), 
	"OBJECT_AREA_GDD" VARCHAR2(10 BYTE), 
	"IN_USE" VARCHAR2(2 BYTE), 
	"REVIEWED" VARCHAR2(32 BYTE), 
	"NEW_OWNER" VARCHAR2(32 BYTE), 
	"TMP" VARCHAR2(32 BYTE), 
	"OBJECT_TYPE" VARCHAR2(32 BYTE), 
	"CC_FILE_NAME" VARCHAR2(50 BYTE), 
	"UPDATE_DATE" DATE, 
	"OPERATOR_ID" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA" ;
--------------------------------------------------------
--  DDL for Table DBI_KO11_REJECTIONS
--------------------------------------------------------

  CREATE TABLE "TOAKDBI"."DBI_KO11_REJECTIONS" 
   (	"REQUEST_ID" VARCHAR2(6 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA" ;
--------------------------------------------------------
--  DDL for Table DBI_LOCKS
--------------------------------------------------------

  CREATE TABLE "TOAKDBI"."DBI_LOCKS" 
   (	"CONTACT_ID" NUMBER, 
	"REQUEST_ID" VARCHAR2(6 BYTE), 
	"LAST_CONTACT" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA" ;
--------------------------------------------------------
--  DDL for Table DBI_LOGS
--------------------------------------------------------

  CREATE TABLE "TOAKDBI"."DBI_LOGS" 
   (	"LOG_ID" NUMBER(*,0), 
	"REQUEST_ID" VARCHAR2(6 BYTE), 
	"EXECUTER_ID" NUMBER(*,0), 
	"NAME" VARCHAR2(255 BYTE), 
	"PATH" VARCHAR2(255 BYTE), 
	"UPDATE_DATE" DATE DEFAULT sysdate
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 0 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA" ;
--------------------------------------------------------
--  DDL for Table DBI_LOGS_TEXT
--------------------------------------------------------

  CREATE TABLE "TOAKDBI"."DBI_LOGS_TEXT" 
   (	"LOG_ID" NUMBER(*,0), 
	"BFILELOC" BFILE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 0 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA" ;
--------------------------------------------------------
--  DDL for Table DBI_LOV_CONTROL
--------------------------------------------------------

  CREATE TABLE "TOAKDBI"."DBI_LOV_CONTROL" 
   (	"DEPARTMENT" VARCHAR2(15 BYTE), 
	"SQL_ACTION" VARCHAR2(1 BYTE), 
	"SQL_ACTION_DESC" VARCHAR2(10 BYTE), 
	"EXECUTION_STAGE" VARCHAR2(4 BYTE), 
	"TEMP_TYPE" VARCHAR2(3 BYTE), 
	"TEMP_TYPE_DESC" VARCHAR2(10 BYTE), 
	"DBI_TYPE" VARCHAR2(1 BYTE), 
	"DBI_TYPE_DESC" VARCHAR2(15 BYTE), 
	"REJECTION_REASON" VARCHAR2(2 BYTE), 
	"REJECTION_REASON_DESC" VARCHAR2(200 BYTE), 
	"CANCELLATION_REASON" VARCHAR2(2 BYTE), 
	"CANCELLATION_REASON_DESC" VARCHAR2(200 BYTE), 
	"USER_NOT_ALLOWED" VARCHAR2(35 BYTE), 
	"SCRIPTTYP" VARCHAR2(10 BYTE), 
	"SCRIPTEXT" VARCHAR2(4 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA" ;

   COMMENT ON COLUMN "TOAKDBI"."DBI_LOV_CONTROL"."EXECUTION_STAGE" IS 'Stage is TEST or PROD.';
   COMMENT ON COLUMN "TOAKDBI"."DBI_LOV_CONTROL"."DBI_TYPE" IS 'The type of DBI: ''O'' - One-Time, ''R'' - Recurring, ''T'' - Template';
   COMMENT ON COLUMN "TOAKDBI"."DBI_LOV_CONTROL"."REJECTION_REASON" IS 'Code why this DBI was rejected.';
   COMMENT ON COLUMN "TOAKDBI"."DBI_LOV_CONTROL"."REJECTION_REASON_DESC" IS 'Text description why this DBI was rejected.';
   COMMENT ON COLUMN "TOAKDBI"."DBI_LOV_CONTROL"."CANCELLATION_REASON" IS 'Code why this DBI was cancelled.';
   COMMENT ON COLUMN "TOAKDBI"."DBI_LOV_CONTROL"."CANCELLATION_REASON_DESC" IS 'Text description why this DBI was cancelled.';
   COMMENT ON TABLE "TOAKDBI"."DBI_LOV_CONTROL"  IS 'Table with values and settings for list boxes.';
--------------------------------------------------------
--  DDL for Table DBI_MIG_EXCEPTION
--------------------------------------------------------

  CREATE TABLE "TOAKDBI"."DBI_MIG_EXCEPTION" 
   (	"REQUEST_ID" VARCHAR2(6 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA" ;
--------------------------------------------------------
--  DDL for Table DBI_MV_OVERVIEW
--------------------------------------------------------

  CREATE TABLE "TOAKDBI"."DBI_MV_OVERVIEW" 
   (	"REQUEST_ID" VARCHAR2(6 BYTE), 
	"DBI_STATUS" VARCHAR2(2 BYTE), 
	"REQUESTOR_ID" NUMBER, 
	"SDE_ID" NUMBER, 
	"ADBA_ID" NUMBER, 
	"SW_VERSION" VARCHAR2(7 BYTE), 
	"PRIORITY_ID" NUMBER(1,0), 
	"DBI_TYPE_DESC" VARCHAR2(15 BYTE), 
	"BRIEF_DESC" VARCHAR2(200 BYTE), 
	"TT_ID" VARCHAR2(10 BYTE), 
	"SERF_CR_ID" VARCHAR2(20 BYTE), 
	"REQ_LAST" VARCHAR2(25 BYTE), 
	"REQ_FIRST" VARCHAR2(25 BYTE), 
	"REQUEST_DATE" DATE, 
	"DBI_STATUS_DESC" VARCHAR2(25 BYTE), 
	"PRIORITY" VARCHAR2(15 BYTE), 
	"MARKET" VARCHAR2(6 BYTE), 
	"ON_HOLD_FLAG" NUMBER(2,0), 
	"DBI_INSTRUCTIONS" VARCHAR2(1000 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA" ;

   COMMENT ON TABLE "TOAKDBI"."DBI_MV_OVERVIEW"  IS 'snapshot table for snapshot TOAKDBI.DBI_MV_OVERVIEW';
--------------------------------------------------------
--  DDL for Table DBI_NEXT_STATUS
--------------------------------------------------------

  CREATE TABLE "TOAKDBI"."DBI_NEXT_STATUS" 
   (	"DBI_CURR_STATUS" VARCHAR2(2 BYTE), 
	"DBI_NEXT_STATUS" VARCHAR2(2 BYTE), 
	"DBI_OPERATOR_ALLOWED" VARCHAR2(3 BYTE), 
	"DBI_TYPE" VARCHAR2(1 BYTE), 
	"DBI_FLAG" CHAR(1 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 0 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA" ;

   COMMENT ON COLUMN "TOAKDBI"."DBI_NEXT_STATUS"."DBI_CURR_STATUS" IS 'Starting point of the status transition.';
   COMMENT ON COLUMN "TOAKDBI"."DBI_NEXT_STATUS"."DBI_NEXT_STATUS" IS 'End point of the status transition.';
   COMMENT ON COLUMN "TOAKDBI"."DBI_NEXT_STATUS"."DBI_OPERATOR_ALLOWED" IS 'User role that is granted the right to apply this transition.';
   COMMENT ON COLUMN "TOAKDBI"."DBI_NEXT_STATUS"."DBI_TYPE" IS 'Type of DBI for which this transition is possible.';
   COMMENT ON TABLE "TOAKDBI"."DBI_NEXT_STATUS"  IS 'Table to specify possible status transitions for DBIs. Note that the DBI Tool implements some implicit transitions that are not part of this table.';
--------------------------------------------------------
--  DDL for Table DBI_NOTIFICATIONS
--------------------------------------------------------

  CREATE TABLE "TOAKDBI"."DBI_NOTIFICATIONS" 
   (	"REQUEST_ID" VARCHAR2(6 BYTE), 
	"OPERATOR_ID" NUMBER, 
	"NOTIFY" VARCHAR2(1 BYTE) DEFAULT 'Y'
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA" ;
--------------------------------------------------------
--  DDL for Table DBI_OPERATOR
--------------------------------------------------------

  CREATE TABLE "TOAKDBI"."DBI_OPERATOR" 
   (	"DBI_OPER_SHORT" VARCHAR2(3 BYTE), 
	"DBI_OPER_LONG" VARCHAR2(30 BYTE), 
	"DBI_OPER_WEBAPP" CHAR(1 BYTE) DEFAULT 'Y'
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA" ;

   COMMENT ON COLUMN "TOAKDBI"."DBI_OPERATOR"."DBI_OPER_SHORT" IS 'The 3 letter abbreviation of the operator type';
   COMMENT ON COLUMN "TOAKDBI"."DBI_OPERATOR"."DBI_OPER_LONG" IS 'The long description of the operator type.';
   COMMENT ON COLUMN "TOAKDBI"."DBI_OPERATOR"."DBI_OPER_WEBAPP" IS 'used by Webapp';
   COMMENT ON TABLE "TOAKDBI"."DBI_OPERATOR"  IS 'Table with all possible user levels. Normally these will be SDE, DAT or REQ. Other roles are for internal use of DBI Tool.';
--------------------------------------------------------
--  DDL for Table DBI_PRIORITY
--------------------------------------------------------

  CREATE TABLE "TOAKDBI"."DBI_PRIORITY" 
   (	"PRIORITY_ID" NUMBER(1,0), 
	"PRIORITY" VARCHAR2(15 BYTE), 
	"DEF_DUE_DAYS" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA" ;

   COMMENT ON COLUMN "TOAKDBI"."DBI_PRIORITY"."PRIORITY_ID" IS 'The numeric priority of the DBI. Valid values are 1, 2, 3.';
   COMMENT ON COLUMN "TOAKDBI"."DBI_PRIORITY"."PRIORITY" IS 'The written description of the priority level.';
   COMMENT ON COLUMN "TOAKDBI"."DBI_PRIORITY"."DEF_DUE_DAYS" IS 'The default number of hours within a DBI of the corresponding priority should be resolved.';
   COMMENT ON TABLE "TOAKDBI"."DBI_PRIORITY"  IS 'Table to define possible priorities of a DBI. The priority in DBI_REQUEST is an FK to this table.';
--------------------------------------------------------
--  DDL for Table DBI_REJECT_REASON_XX
--------------------------------------------------------

  CREATE TABLE "TOAKDBI"."DBI_REJECT_REASON_XX" 
   (	"SHORTTERM" VARCHAR2(2 BYTE), 
	"LONGTERM" VARCHAR2(80 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA" ;
--------------------------------------------------------
--  DDL for Table DBI_REQUEST
--------------------------------------------------------

  CREATE TABLE "TOAKDBI"."DBI_REQUEST" 
   (	"REQUEST_ID" VARCHAR2(6 BYTE), 
	"DBI_STATUS" VARCHAR2(2 BYTE), 
	"REQUESTOR_ID" NUMBER, 
	"SDE_ID" NUMBER, 
	"ADBA_ID" NUMBER, 
	"SUB_AREA_ID" VARCHAR2(5 BYTE), 
	"SW_VERSION" VARCHAR2(7 BYTE), 
	"PRIORITY_ID" NUMBER(1,0), 
	"REQUEST_DATE" DATE, 
	"STATUS_DATE" DATE, 
	"BRIEF_DESC" VARCHAR2(200 BYTE), 
	"PROBLEM_DESC" VARCHAR2(1000 BYTE), 
	"BUSINESS_IMPACT" VARCHAR2(1000 BYTE), 
	"TT_ID" VARCHAR2(20 BYTE), 
	"SERF_CR_ID" VARCHAR2(20 BYTE), 
	"DBI_EXPIRATION_DATE" DATE, 
	"DBI_INSTRUCTIONS" VARCHAR2(1000 BYTE), 
	"REFERENCE_DBI" VARCHAR2(6 BYTE), 
	"REJECTION_REASON" VARCHAR2(2 BYTE), 
	"ON_HOLD_FLAG" NUMBER(2,0) DEFAULT 0, 
	"APPROVED_OPERATOR" VARCHAR2(3 BYTE), 
	"DBI_TYPE" VARCHAR2(1 BYTE), 
	"CANCELLATION_REASON" VARCHAR2(2 BYTE), 
	"OPERATOR_ID" NUMBER, 
	"UPDATE_DATE" DATE, 
	"REQUEST_COMMENTS" VARCHAR2(1000 BYTE), 
	"DBI_FLAG" CHAR(1 BYTE), 
	"START_SCRIPT" NUMBER(*,0), 
	"TEAM_ID" VARCHAR2(64 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA" ;

   COMMENT ON COLUMN "TOAKDBI"."DBI_REQUEST"."REQUEST_ID" IS 'Unique DBI number assigned automatically in format ''dbXXXX'' Where XXXX is a 4-digit number.';
   COMMENT ON COLUMN "TOAKDBI"."DBI_REQUEST"."DBI_STATUS" IS 'The value in this field maps to the field DBI_STATUS in the DBI_STATUSES table. It shows the current status of the particular DBI.';
   COMMENT ON COLUMN "TOAKDBI"."DBI_REQUEST"."REQUESTOR_ID" IS 'ID of requestor. The details of the requestor can be found in the DBI_CONTACTS table.';
   COMMENT ON COLUMN "TOAKDBI"."DBI_REQUEST"."SDE_ID" IS 'ID of SDE. The details of the SDE can be found in the DBI_CONTACTS table.';
   COMMENT ON COLUMN "TOAKDBI"."DBI_REQUEST"."ADBA_ID" IS 'ID of DA team member. The details of the DA Team member can be found in the DBI_CONTACTS table.';
   COMMENT ON COLUMN "TOAKDBI"."DBI_REQUEST"."SUB_AREA_ID" IS 'ID of DBI subarea.';
   COMMENT ON COLUMN "TOAKDBI"."DBI_REQUEST"."SW_VERSION" IS 'KIAS2000 software version that the DBI should run on at the time of creation.';
   COMMENT ON COLUMN "TOAKDBI"."DBI_REQUEST"."PRIORITY_ID" IS 'Priority from DBI_PRIORITIES table.';
   COMMENT ON COLUMN "TOAKDBI"."DBI_REQUEST"."REQUEST_DATE" IS 'Date when DBI request was opened by requestor.';
   COMMENT ON COLUMN "TOAKDBI"."DBI_REQUEST"."STATUS_DATE" IS 'Date when the DBI changed the status the last time. For a complete overview of the status history look in the DBI_REQUEST_HISTORY table.';
   COMMENT ON COLUMN "TOAKDBI"."DBI_REQUEST"."BRIEF_DESC" IS 'Brief description of the problem the DBI is supposed to solve.';
   COMMENT ON COLUMN "TOAKDBI"."DBI_REQUEST"."PROBLEM_DESC" IS 'Detailed description of the problem and long term solution.';
   COMMENT ON COLUMN "TOAKDBI"."DBI_REQUEST"."BUSINESS_IMPACT" IS 'Impact on business from an overal Vodafone perspective.';
   COMMENT ON COLUMN "TOAKDBI"."DBI_REQUEST"."TT_ID" IS 'Related trouble ticket number if applicable.';
   COMMENT ON COLUMN "TOAKDBI"."DBI_REQUEST"."SERF_CR_ID" IS 'Related SERF or CR number if relevant.';
   COMMENT ON COLUMN "TOAKDBI"."DBI_REQUEST"."DBI_EXPIRATION_DATE" IS 'Expiration date of recurring DBIs.';
   COMMENT ON COLUMN "TOAKDBI"."DBI_REQUEST"."DBI_INSTRUCTIONS" IS 'Instructions for executor. When this field is filled the DBI cannot be run by the DAT.';
   COMMENT ON COLUMN "TOAKDBI"."DBI_REQUEST"."REFERENCE_DBI" IS 'The number of another DBI that is related to the current DBI.';
   COMMENT ON COLUMN "TOAKDBI"."DBI_REQUEST"."REJECTION_REASON" IS 'Two letter code for the rejection reason. Related to DBI_LOV_CONTROL.REJECTION_REASON.';
   COMMENT ON COLUMN "TOAKDBI"."DBI_REQUEST"."ON_HOLD_FLAG" IS 'Indicates if the DBI is on hold or not.';
   COMMENT ON COLUMN "TOAKDBI"."DBI_REQUEST"."APPROVED_OPERATOR" IS 'Provides the level indicator of the operator that has been approved to run the DBI. This is set by the DA team member.';
   COMMENT ON COLUMN "TOAKDBI"."DBI_REQUEST"."DBI_TYPE" IS 'The type of DBI: ''O'' - One-Time, ''R'' - Recurring, ''T'' - Template. Related to DBI_LOV_CONTROL.DBI_TYPE.';
   COMMENT ON COLUMN "TOAKDBI"."DBI_REQUEST"."CANCELLATION_REASON" IS 'Two letter code for the cancellation reason. Related to DBI_LOV_CONTROL.CANCELLATION_REASON.';
   COMMENT ON COLUMN "TOAKDBI"."DBI_REQUEST"."OPERATOR_ID" IS 'ID of the last operator to save changes.';
   COMMENT ON COLUMN "TOAKDBI"."DBI_REQUEST"."UPDATE_DATE" IS 'Date when the last update was made to the current version of the DBI request.';
   COMMENT ON COLUMN "TOAKDBI"."DBI_REQUEST"."REQUEST_COMMENTS" IS 'Contains comments related to the DBI. May also contain the detailed cancellation or rejection reason when reason "other" is chosen.';
   COMMENT ON TABLE "TOAKDBI"."DBI_REQUEST"  IS 'Table to describe DBIs, their status and involved contacts.';
--------------------------------------------------------
--  DDL for Table DBI_REQUEST_HISTORY
--------------------------------------------------------

  CREATE TABLE "TOAKDBI"."DBI_REQUEST_HISTORY" 
   (	"REQUEST_ID" VARCHAR2(6 BYTE), 
	"EFFECTIVE_DATE" DATE, 
	"DBI_STATUS" VARCHAR2(2 BYTE), 
	"REQUESTOR_ID" NUMBER, 
	"SDE_ID" NUMBER, 
	"ADBA_ID" NUMBER, 
	"SUB_AREA_ID" VARCHAR2(5 BYTE), 
	"SW_VERSION" VARCHAR2(7 BYTE), 
	"PRIORITY_ID" NUMBER(1,0), 
	"REQUEST_DATE" DATE, 
	"STATUS_DATE" DATE, 
	"DBI_TYPE" VARCHAR2(1 BYTE), 
	"PROBLEM_DESC" VARCHAR2(1000 BYTE), 
	"BUSINESS_IMPACT" VARCHAR2(1000 BYTE), 
	"TT_ID" VARCHAR2(20 BYTE), 
	"SERF_CR_ID" VARCHAR2(20 BYTE), 
	"DBI_EXPIRATION_DATE" DATE, 
	"DBI_INSTRUCTIONS" VARCHAR2(1000 BYTE), 
	"REFERENCE_DBI" VARCHAR2(6 BYTE), 
	"REJECTION_REASON" VARCHAR2(2 BYTE), 
	"ON_HOLD_FLAG" NUMBER(2,0), 
	"APPROVED_OPERATOR" VARCHAR2(3 BYTE), 
	"BRIEF_DESC" VARCHAR2(200 BYTE), 
	"CANCELLATION_REASON" VARCHAR2(2 BYTE), 
	"OPERATOR_ID" NUMBER, 
	"UPDATE_DATE" DATE, 
	"REQUEST_COMMENTS" VARCHAR2(1000 BYTE), 
	"DBI_FLAG" CHAR(1 BYTE), 
	"START_SCRIPT" NUMBER(*,0), 
	"TEAM_ID" VARCHAR2(64 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA" ;

   COMMENT ON COLUMN "TOAKDBI"."DBI_REQUEST_HISTORY"."REQUEST_ID" IS 'Unique DBI number assigned automatically in format ''dbXXXX'' Where XXXX is a 4-digit number.';
   COMMENT ON COLUMN "TOAKDBI"."DBI_REQUEST_HISTORY"."DBI_STATUS" IS 'The value in this field maps to the field DBI_STATUS in the DBI_STATUSES table.';
   COMMENT ON COLUMN "TOAKDBI"."DBI_REQUEST_HISTORY"."REQUESTOR_ID" IS 'User id of person who requested the DBI.';
   COMMENT ON COLUMN "TOAKDBI"."DBI_REQUEST_HISTORY"."SDE_ID" IS 'User id of SDE who approved the DBI.';
   COMMENT ON COLUMN "TOAKDBI"."DBI_REQUEST_HISTORY"."ADBA_ID" IS 'User id of DAT who approved the DBI.';
   COMMENT ON COLUMN "TOAKDBI"."DBI_REQUEST_HISTORY"."DBI_TYPE" IS 'The type of DBI: ''O'' - One-Time, ''R'' - Recurring, ''T'' - Template';
   COMMENT ON COLUMN "TOAKDBI"."DBI_REQUEST_HISTORY"."PROBLEM_DESC" IS 'Problem that caused requestor to create this DBI.';
   COMMENT ON COLUMN "TOAKDBI"."DBI_REQUEST_HISTORY"."BUSINESS_IMPACT" IS 'Business impact of the problem that should be solved by this DBI.';
   COMMENT ON COLUMN "TOAKDBI"."DBI_REQUEST_HISTORY"."TT_ID" IS 'Trouble ticket id in Remedy if any.';
   COMMENT ON COLUMN "TOAKDBI"."DBI_REQUEST_HISTORY"."SERF_CR_ID" IS 'SERF id if any.';
   COMMENT ON COLUMN "TOAKDBI"."DBI_REQUEST_HISTORY"."DBI_EXPIRATION_DATE" IS 'Expiration date of DBI for recurring and template DBIs.';
   COMMENT ON COLUMN "TOAKDBI"."DBI_REQUEST_HISTORY"."REFERENCE_DBI" IS 'DBI id of a preceding DBI.';
   COMMENT ON COLUMN "TOAKDBI"."DBI_REQUEST_HISTORY"."REJECTION_REASON" IS 'Two letter code for the rejection reason. Related to DBI_LOV_CONTROL.REJECTION_REASON.';
   COMMENT ON COLUMN "TOAKDBI"."DBI_REQUEST_HISTORY"."ON_HOLD_FLAG" IS 'Flag to set a DBI on hold.';
   COMMENT ON COLUMN "TOAKDBI"."DBI_REQUEST_HISTORY"."CANCELLATION_REASON" IS 'Two letter code for the cancellation reason. Related to DBI_LOV_CONTROL.CANCELLATION_REASON.';
   COMMENT ON COLUMN "TOAKDBI"."DBI_REQUEST_HISTORY"."OPERATOR_ID" IS 'User id of the last operator to save changes.';
   COMMENT ON COLUMN "TOAKDBI"."DBI_REQUEST_HISTORY"."REQUEST_COMMENTS" IS 'Contains comments related to the DBI. May also contain the detailed cancellation or rejection reason when reason "other" is chosen.';
   COMMENT ON TABLE "TOAKDBI"."DBI_REQUEST_HISTORY"  IS 'History table allows tracing back the DBIs workflow events like approvals, rejections, test history etc. Populated by trigger DBI_REQUEST_TR when the status is changed.';
  GRANT SELECT ON "TOAKDBI"."DBI_REQUEST_HISTORY" TO "ADBM";
--------------------------------------------------------
--  DDL for Table DBI_SCRIPTS
--------------------------------------------------------

  CREATE TABLE "TOAKDBI"."DBI_SCRIPTS" 
   (	"SCRIPT_ID" NUMBER(*,0), 
	"REQUEST_ID" VARCHAR2(6 BYTE), 
	"PATH" VARCHAR2(255 BYTE), 
	"NAME" VARCHAR2(255 BYTE), 
	"SCRIPTTYP" VARCHAR2(10 BYTE), 
	"KEY" VARCHAR2(32 BYTE), 
	"APPROVED" CHAR(3 BYTE) DEFAULT NULL, 
	"RUNABLE" CHAR(1 BYTE), 
	"OPERATOR_ID" NUMBER(*,0), 
	"UPDATE_DATE" DATE DEFAULT sysdate
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 0 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA" ;
--------------------------------------------------------
--  DDL for Table DBI_SCRIPTS_TEXT
--------------------------------------------------------

  CREATE TABLE "TOAKDBI"."DBI_SCRIPTS_TEXT" 
   (	"SCRIPT_ID" NUMBER(*,0), 
	"BFILELOC" BFILE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 0 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA" ;
--------------------------------------------------------
--  DDL for Table DBI_SLA_STATS
--------------------------------------------------------

  CREATE TABLE "TOAKDBI"."DBI_SLA_STATS" 
   (	"REQUEST_ID" VARCHAR2(6 BYTE), 
	"PRIORITY_ID" NUMBER, 
	"REQUEST_DATE" DATE, 
	"TS_DATE" DATE, 
	"SDE_DATE" DATE, 
	"DA_DATE" DATE, 
	"MIN_SDE_APPROVAL" NUMBER, 
	"MIN_DAT_APPROVAL" NUMBER, 
	"MIN_FINAL_APPROVAL" NUMBER, 
	"SLA_TIME" NUMBER, 
	"SLA_RESULT" VARCHAR2(100 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA" ;
--------------------------------------------------------
--  DDL for Table DBI_SLA_STATS2
--------------------------------------------------------

  CREATE TABLE "TOAKDBI"."DBI_SLA_STATS2" 
   (	"REQUEST_ID" VARCHAR2(6 BYTE), 
	"PRIORITY_ID" NUMBER, 
	"REQUEST_DATE" DATE, 
	"TS_DATE" DATE, 
	"SDE_DATE" DATE, 
	"DA_DATE" DATE, 
	"MIN_SDE_APPROVAL" NUMBER, 
	"MIN_DAT_APPROVAL" NUMBER, 
	"MIN_FINAL_APPROVAL" NUMBER, 
	"SLA_TIME" NUMBER, 
	"SLA_RESULT" VARCHAR2(100 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA" ;
--------------------------------------------------------
--  DDL for Table DBI_STATUSES
--------------------------------------------------------

  CREATE TABLE "TOAKDBI"."DBI_STATUSES" 
   (	"DBI_STATUS" VARCHAR2(2 BYTE), 
	"DBI_STATUS_DESC" VARCHAR2(25 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 0 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA" ;

   COMMENT ON COLUMN "TOAKDBI"."DBI_STATUSES"."DBI_STATUS" IS 'The value in this field maps to the field DBI_STATUS in the DBI_STATUSES table.';
   COMMENT ON TABLE "TOAKDBI"."DBI_STATUSES"  IS 'Table with possible statuses of DBIs. DBI_REQUEST has a FK to this table.';
--------------------------------------------------------
--  DDL for Table DBI_STAT_CFG
--------------------------------------------------------

  CREATE TABLE "TOAKDBI"."DBI_STAT_CFG" 
   (	"MINVALUE" VARCHAR2(20 BYTE), 
	"MAXVALUE" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA" ;
--------------------------------------------------------
--  DDL for Table DBI_SW_VERSIONS
--------------------------------------------------------

  CREATE TABLE "TOAKDBI"."DBI_SW_VERSIONS" 
   (	"SW_VERSION" VARCHAR2(7 BYTE), 
	"MARKET" VARCHAR2(6 BYTE), 
	"CURRENT_IND" CHAR(1 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA" ;

   COMMENT ON COLUMN "TOAKDBI"."DBI_SW_VERSIONS"."SW_VERSION" IS 'The KIAS2000 software version number.';
   COMMENT ON COLUMN "TOAKDBI"."DBI_SW_VERSIONS"."MARKET" IS 'The market in which this version is used.';
   COMMENT ON COLUMN "TOAKDBI"."DBI_SW_VERSIONS"."CURRENT_IND" IS 'Indicates if this is the current version for the market. Y = current version, N = not current version';
   COMMENT ON TABLE "TOAKDBI"."DBI_SW_VERSIONS"  IS 'Table to hold possible software versions for DBIs. DBI_REQUEST has a FK to this table. Really the SW version indicates if the DBI is for a debit or credit market.';
--------------------------------------------------------
--  DDL for Table DBI_TEAMS
--------------------------------------------------------

  CREATE TABLE "TOAKDBI"."DBI_TEAMS" 
   (	"TEAM_ID" VARCHAR2(64 BYTE), 
	"TEAM_NAME" VARCHAR2(255 BYTE), 
	"TEAM_GROUP" VARCHAR2(6 BYTE), 
	"UPDATE_DATE" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA" ;
--------------------------------------------------------
--  DDL for Table DBI_TEMPLATE
--------------------------------------------------------

  CREATE TABLE "TOAKDBI"."DBI_TEMPLATE" 
   (	"REQUEST_ID" VARCHAR2(6 BYTE), 
	"TABLE_NAME" VARCHAR2(30 BYTE), 
	"POSITION_ID" NUMBER, 
	"ALIAS_NAME" VARCHAR2(30 BYTE), 
	"CREATION_DATE" DATE, 
	"OPERATOR_ID" NUMBER, 
	"UPDATE_DATE" DATE, 
	"TEMP_TABLE_DRIVEN" NUMBER DEFAULT 0, 
	"FORM_DIRTY" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA" ;

   COMMENT ON COLUMN "TOAKDBI"."DBI_TEMPLATE"."REQUEST_ID" IS 'Unique DBI number assigned automatically in format ''dbXXXX'' Where XXXX is a 4-digit number.';
   COMMENT ON COLUMN "TOAKDBI"."DBI_TEMPLATE"."POSITION_ID" IS 'Postion of this parameter in the parameter list. Starting with 1.';
   COMMENT ON COLUMN "TOAKDBI"."DBI_TEMPLATE"."ALIAS_NAME" IS 'Alias name for parameter.';
   COMMENT ON TABLE "TOAKDBI"."DBI_TEMPLATE"  IS 'This table stores parameter mappings for template DBIs. DBIs with  a type Template may be created, submitted, approved, and run more than one time. It stores tablenames and parameters per DBI.';
--------------------------------------------------------
--  DDL for Table DBI_TEMP_TABLES
--------------------------------------------------------

  CREATE TABLE "TOAKDBI"."DBI_TEMP_TABLES" 
   (	"REQUEST_ID" VARCHAR2(6 BYTE), 
	"DB_INSTANCE" VARCHAR2(10 BYTE), 
	"TEMP_TABLE_NAME" VARCHAR2(30 BYTE), 
	"DB_USER" VARCHAR2(15 BYTE), 
	"TEMP_TYPE" VARCHAR2(3 BYTE), 
	"TEMP_SQL" VARCHAR2(2000 BYTE), 
	"DROP_DATE" DATE, 
	"OPERATOR_ID" NUMBER, 
	"UPDATE_DATE" DATE, 
	"TEMP_TABLE_STATUS" VARCHAR2(10 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA" ;

   COMMENT ON COLUMN "TOAKDBI"."DBI_TEMP_TABLES"."REQUEST_ID" IS 'Unique DBI number assigned automatically in format ''dbXXXX'' Where XXXX is a 4-digit number.';
   COMMENT ON COLUMN "TOAKDBI"."DBI_TEMP_TABLES"."DB_INSTANCE" IS 'Database instance in which the temp table was or will be created.';
   COMMENT ON COLUMN "TOAKDBI"."DBI_TEMP_TABLES"."TEMP_TABLE_NAME" IS 'Name of the temp table to be created.';
   COMMENT ON COLUMN "TOAKDBI"."DBI_TEMP_TABLES"."DROP_DATE" IS 'Date by which temp table will be dropped.';
   COMMENT ON TABLE "TOAKDBI"."DBI_TEMP_TABLES"  IS 'Table to keep track of temporrary tables used for processing a DBI. Despite of the naming the table is not a temporrary table itself.';
--------------------------------------------------------
--  DDL for Table EXP_JAN14
--------------------------------------------------------

  CREATE TABLE "TOAKDBI"."EXP_JAN14" 
   (	"ORG" VARCHAR2(4 BYTE), 
	"TEAM" VARCHAR2(26 BYTE), 
	"REQUEST_ID" VARCHAR2(6 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA" ;
--------------------------------------------------------
--  DDL for Table GENERAL_PROPERTIES
--------------------------------------------------------

  CREATE TABLE "TOAKDBI"."GENERAL_PROPERTIES" 
   (	"GEN_PROP_ID" NUMBER, 
	"PROPERTY_ID" NUMBER, 
	"PARENT_ID" NUMBER, 
	"PROPERTY" VARCHAR2(255 BYTE), 
	"PROP_VALUE" VARCHAR2(1000 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA" ;
--------------------------------------------------------
--  DDL for Table JOB_EXEC_DML
--------------------------------------------------------

  CREATE TABLE "TOAKDBI"."JOB_EXEC_DML" 
   (	"EXECUTABLE_NAME" VARCHAR2(30 BYTE), 
	"DML_MODE" CHAR(1 BYTE), 
	"TABLE_NAME" VARCHAR2(300 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA" ;
--------------------------------------------------------
--  DDL for Table K2K_TABLE_OWNERSHIP
--------------------------------------------------------

  CREATE TABLE "TOAKDBI"."K2K_TABLE_OWNERSHIP" 
   (	"AREA" VARCHAR2(32 BYTE), 
	"SUB_AREA" VARCHAR2(32 BYTE), 
	"SW_VERSION" VARCHAR2(7 BYTE), 
	"OBJ_NAME_GDD" VARCHAR2(32 BYTE), 
	"OBJ_NAME_PRD" VARCHAR2(32 BYTE), 
	"OBJECT_AREA_GDD" VARCHAR2(10 BYTE), 
	"IN_USE" VARCHAR2(2 BYTE), 
	"REVIEWED" VARCHAR2(32 BYTE), 
	"NEW_OWNER" VARCHAR2(32 BYTE), 
	"NEW_SECONDARY_PROCESS" VARCHAR2(32 BYTE), 
	"OLD_OWNER" VARCHAR2(32 BYTE), 
	"SECONDARY_PROCESS" VARCHAR2(32 BYTE), 
	"UF" VARCHAR2(32 BYTE), 
	"UPDATED" VARCHAR2(32 BYTE), 
	"TMP" VARCHAR2(32 BYTE), 
	"OBJECT_TYPE" VARCHAR2(32 BYTE), 
	"CC_FILE_NAME" VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA" ;

   COMMENT ON COLUMN "TOAKDBI"."K2K_TABLE_OWNERSHIP"."AREA" IS 'Name of department.';
   COMMENT ON TABLE "TOAKDBI"."K2K_TABLE_OWNERSHIP"  IS 'Table to specify which area owns a certain table. This is used to determine which reviewers should be involved for a particular DBI.';
--------------------------------------------------------
--  DDL for Table MAIN_MENU
--------------------------------------------------------

  CREATE TABLE "TOAKDBI"."MAIN_MENU" 
   (	"MAIN_MENU_ID" NUMBER, 
	"SHORT_NAME" VARCHAR2(25 BYTE), 
	"LONG_NAME" VARCHAR2(255 BYTE), 
	"SHORT_CUT" VARCHAR2(20 BYTE), 
	"URL" VARCHAR2(255 BYTE), 
	"MAIN_MENU_SEQ_ID" NUMBER, 
	"ENABLED" CHAR(1 BYTE) DEFAULT 1
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 0 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA" ;

   COMMENT ON COLUMN "TOAKDBI"."MAIN_MENU"."MAIN_MENU_ID" IS 'The PK for MainMenu';
   COMMENT ON COLUMN "TOAKDBI"."MAIN_MENU"."SHORT_NAME" IS 'The short string to display in the website';
   COMMENT ON COLUMN "TOAKDBI"."MAIN_MENU"."LONG_NAME" IS 'The long string to display as tooltip in the website';
   COMMENT ON COLUMN "TOAKDBI"."MAIN_MENU"."URL" IS 'The URL for the link in the website';
   COMMENT ON COLUMN "TOAKDBI"."MAIN_MENU"."MAIN_MENU_SEQ_ID" IS 'The order of menu entries';
   COMMENT ON COLUMN "TOAKDBI"."MAIN_MENU"."ENABLED" IS 'enable or diesable menu entry';
   COMMENT ON TABLE "TOAKDBI"."MAIN_MENU"  IS 'This table stores the structure of the MainMenu';
--------------------------------------------------------
--  DDL for Table ORG_TEAM_MAP
--------------------------------------------------------

  CREATE TABLE "TOAKDBI"."ORG_TEAM_MAP" 
   (	"ORG_ID" NUMBER(*,0), 
	"ORG_PARENT_ID" NUMBER(*,0), 
	"TICAM_TEAM_ID" VARCHAR2(25 BYTE), 
	"ORG_NAME" VARCHAR2(70 BYTE), 
	"SYS_UPDATE_DATE" DATE, 
	"SYS_EXPIRE_DATE" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA" ;
--------------------------------------------------------
--  DDL for Table ORG_USER_MAP
--------------------------------------------------------

  CREATE TABLE "TOAKDBI"."ORG_USER_MAP" 
   (	"LAST_NAME" VARCHAR2(50 BYTE), 
	"FIRST_NAME" VARCHAR2(50 BYTE), 
	"AS_STAFFID" NUMBER(*,0), 
	"AS_ORGID" NUMBER(*,0), 
	"MANAGER_ID" NUMBER(*,0), 
	"TICAM_TEAMID" VARCHAR2(64 BYTE), 
	"LDAP_UID" VARCHAR2(25 BYTE), 
	"LDAP_CN" VARCHAR2(250 BYTE), 
	"VCDS_UID" VARCHAR2(16 BYTE), 
	"VCDS_CN" VARCHAR2(250 BYTE), 
	"EMAIL" VARCHAR2(70 BYTE), 
	"VFNT_UID" VARCHAR2(70 BYTE), 
	"EPN" NUMBER(*,0), 
	"SYS_UPDATE_DATE" DATE, 
	"SYS_EXPIRE_DATE" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA" ;
--------------------------------------------------------
--  DDL for Table PWCAT
--------------------------------------------------------

  CREATE TABLE "TOAKDBI"."PWCAT" 
   (	"CAT" VARCHAR2(3 BYTE), 
	"SHORTDESC" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA" ;
--------------------------------------------------------
--  DDL for Table PWCERTS
--------------------------------------------------------

  CREATE TABLE "TOAKDBI"."PWCERTS" 
   (	"PWCE_UID" VARCHAR2(16 BYTE), 
	"PWCE_PWU_ID" NUMBER, 
	"PWCE_FULLNAME" VARCHAR2(255 BYTE), 
	"PWCE_GROUP" VARCHAR2(255 BYTE), 
	"PWCE_EMAIL" VARCHAR2(100 BYTE), 
	"PWCE_HASH" VARCHAR2(32 BYTE), 
	"PWCE_SUBJECT" VARCHAR2(512 BYTE), 
	"PWCE_ENDDATE" DATE, 
	"PWCE_REV_IND" CHAR(1 BYTE) DEFAULT 'N', 
	"PWCE_PP" VARCHAR2(15 BYTE), 
	"UPDATE_DATE" DATE, 
	"PWCE_P12_DATA" BLOB
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA" 
 LOB ("PWCE_P12_DATA") STORE AS BASICFILE (
  TABLESPACE "TBS_DATA" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table PWCONNECTS
--------------------------------------------------------

  CREATE TABLE "TOAKDBI"."PWCONNECTS" 
   (	"PWC_ID" NUMBER(*,0), 
	"PWC_NAME" VARCHAR2(100 BYTE), 
	"PWC_USER" VARCHAR2(100 BYTE), 
	"PWC_PW" VARCHAR2(1000 BYTE), 
	"PWC_WRITE" CHAR(1 BYTE), 
	"UPDATE_DATE" DATE, 
	"PWC_CAT" VARCHAR2(3 BYTE), 
	"PWC_TYP" VARCHAR2(10 BYTE), 
	"PWC_GROUP" VARCHAR2(30 BYTE), 
	"PWC_ACTIVE_IND" CHAR(1 BYTE) DEFAULT 'Y', 
	"PWC_CHANGE_TYP" CHAR(1 BYTE) DEFAULT 'Y', 
	"PWC_CHANGE_COND" VARCHAR2(255 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA" ;
--------------------------------------------------------
--  DDL for Table PWC_DBINFO
--------------------------------------------------------

  CREATE TABLE "TOAKDBI"."PWC_DBINFO" 
   (	"PWC_NAME" VARCHAR2(100 BYTE), 
	"UPDATE_DATE" DATE, 
	"LAST_STATUS" VARCHAR2(100 BYTE), 
	"LAST_SUCCESS" DATE, 
	"ENABLED" CHAR(1 BYTE) DEFAULT 'Y', 
	"DB_GLOBAL_NAME" VARCHAR2(4000 BYTE), 
	"INSTANCE_NAME" VARCHAR2(16 BYTE), 
	"INSTANCE_NUMBER" NUMBER, 
	"VERSION" VARCHAR2(17 BYTE), 
	"INSTANCE_ROLE" VARCHAR2(18 BYTE), 
	"DB_NAME" VARCHAR2(9 BYTE), 
	"DB_UNIQUE_NAME" VARCHAR2(30 BYTE), 
	"DBID" NUMBER, 
	"DATABASE_ROLE" VARCHAR2(16 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA" ;
--------------------------------------------------------
--  DDL for Table PWC_SYSTEM_GRP
--------------------------------------------------------

  CREATE TABLE "TOAKDBI"."PWC_SYSTEM_GRP" 
   (	"PWC_NAME" VARCHAR2(100 BYTE), 
	"UPDATE_DATE" DATE, 
	"SYSTEM_UID" VARCHAR2(255 BYTE), 
	"SYSTEM_UID_HASH" NUMBER, 
	"SYSTEM_DESC" VARCHAR2(255 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA" ;
--------------------------------------------------------
--  DDL for Table PWDBLINKS
--------------------------------------------------------

  CREATE TABLE "TOAKDBI"."PWDBLINKS" 
   (	"INSTANCE" VARCHAR2(20 BYTE), 
	"OWNER" VARCHAR2(30 BYTE), 
	"DB_LINK" VARCHAR2(128 BYTE), 
	"USERNAME" VARCHAR2(30 BYTE), 
	"HOST" VARCHAR2(2000 BYTE), 
	"CREATED" DATE, 
	"UPDATE_DATE" DATE DEFAULT sysdate, 
	"STATUS" NUMBER(*,0) DEFAULT 0
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA" ;
  GRANT SELECT ON "TOAKDBI"."PWDBLINKS" TO "WEBTEST";
--------------------------------------------------------
--  DDL for Table PWGRANTS
--------------------------------------------------------

  CREATE TABLE "TOAKDBI"."PWGRANTS" 
   (	"PWG_ID" NUMBER(*,0), 
	"PWR_ID" NUMBER(*,0), 
	"PWU_ID" NUMBER(*,0), 
	"PWC_ID" NUMBER(*,0), 
	"PWRG_ID" NUMBER(*,0), 
	"UPDATE_DATE" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA" ;
--------------------------------------------------------
--  DDL for Table PWGROUPS
--------------------------------------------------------

  CREATE TABLE "TOAKDBI"."PWGROUPS" 
   (	"PWGROUP_ID" NUMBER(3,0), 
	"PWGROUP_NAME" VARCHAR2(20 BYTE), 
	"PWGROUP_DESC" VARCHAR2(255 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA" ;
--------------------------------------------------------
--  DDL for Table PWREQUESTS
--------------------------------------------------------

  CREATE TABLE "TOAKDBI"."PWREQUESTS" 
   (	"PWREQ_ID" NUMBER(*,0), 
	"REQUEST_DATE" DATE, 
	"PWC_CAT" VARCHAR2(3 BYTE), 
	"PWGROUP_ID" NUMBER(*,0), 
	"PWC_ID" NUMBER(*,0), 
	"OLD_PASSWORD" VARCHAR2(1000 BYTE), 
	"NEW_PASSWORD" VARCHAR2(1000 BYTE), 
	"STATUS" VARCHAR2(12 BYTE), 
	"LAST_UPDATE_DATE" DATE, 
	"UPDATE_AT" VARCHAR2(2 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA" ;
  GRANT SELECT ON "TOAKDBI"."PWREQUESTS" TO "WEBTEST";
--------------------------------------------------------
--  DDL for Table PWROLES
--------------------------------------------------------

  CREATE TABLE "TOAKDBI"."PWROLES" 
   (	"PWR_ID" NUMBER(*,0), 
	"PWR_NAME" VARCHAR2(100 BYTE), 
	"UPDATE_DATE" DATE, 
	"PWR_DESC" VARCHAR2(1000 BYTE), 
	"PWC_GROUP" NUMBER(*,0), 
	"PWR_TYP" VARCHAR2(10 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA" ;
--------------------------------------------------------
--  DDL for Table PWUSERS
--------------------------------------------------------

  CREATE TABLE "TOAKDBI"."PWUSERS" 
   (	"PWU_ID" NUMBER(*,0), 
	"PWU_NAME" VARCHAR2(100 BYTE), 
	"PWU_EMAIL" VARCHAR2(100 BYTE), 
	"PWU_KEY" VARCHAR2(10 BYTE), 
	"PWU_CONTACTID" NUMBER(*,0), 
	"PWU_ACTIVEIND" CHAR(1 BYTE) DEFAULT 'Y', 
	"UPDATE_DATE" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA" ;
--------------------------------------------------------
--  DDL for Table QUEST_SL_TEMP_EXPLAIN1
--------------------------------------------------------

  CREATE GLOBAL TEMPORARY TABLE "TOAKDBI"."QUEST_SL_TEMP_EXPLAIN1" 
   (	"STATEMENT_ID" VARCHAR2(30 BYTE), 
	"PLAN_ID" NUMBER, 
	"TIMESTAMP" DATE, 
	"REMARKS" VARCHAR2(80 BYTE), 
	"OPERATION" VARCHAR2(30 BYTE), 
	"OPTIONS" VARCHAR2(255 BYTE), 
	"OBJECT_NODE" VARCHAR2(128 BYTE), 
	"OBJECT_OWNER" VARCHAR2(30 BYTE), 
	"OBJECT_NAME" VARCHAR2(30 BYTE), 
	"OBJECT_ALIAS" VARCHAR2(65 BYTE), 
	"OBJECT_INSTANCE" NUMBER, 
	"OBJECT_TYPE" VARCHAR2(30 BYTE), 
	"OPTIMIZER" VARCHAR2(255 BYTE), 
	"SEARCH_COLUMNS" NUMBER, 
	"ID" NUMBER, 
	"PARENT_ID" NUMBER, 
	"DEPTH" NUMBER, 
	"POSITION" NUMBER, 
	"COST" NUMBER, 
	"CARDINALITY" NUMBER, 
	"BYTES" NUMBER, 
	"OTHER_TAG" VARCHAR2(255 BYTE), 
	"PARTITION_START" VARCHAR2(255 BYTE), 
	"PARTITION_STOP" VARCHAR2(255 BYTE), 
	"PARTITION_ID" NUMBER, 
	"OTHER" LONG, 
	"DISTRIBUTION" VARCHAR2(30 BYTE), 
	"CPU_COST" NUMBER(38,0), 
	"IO_COST" NUMBER(38,0), 
	"TEMP_SPACE" NUMBER(38,0), 
	"ACCESS_PREDICATES" VARCHAR2(4000 BYTE), 
	"FILTER_PREDICATES" VARCHAR2(4000 BYTE)
   ) ON COMMIT PRESERVE ROWS ;
--------------------------------------------------------
--  DDL for Table SDE_AREA
--------------------------------------------------------

  CREATE TABLE "TOAKDBI"."SDE_AREA" 
   (	"DEPARTMENT" VARCHAR2(10 BYTE), 
	"SUB_AREA" VARCHAR2(20 BYTE), 
	"SDE" VARCHAR2(30 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA" ;
--------------------------------------------------------
--  DDL for Table SESSIONS
--------------------------------------------------------

  CREATE TABLE "TOAKDBI"."SESSIONS" 
   (	"SID" VARCHAR2(50 BYTE), 
	"LOGIN" VARCHAR2(25 BYTE), 
	"APPLICATION" VARCHAR2(25 BYTE), 
	"ACTION" VARCHAR2(25 BYTE), 
	"URL" VARCHAR2(512 BYTE), 
	"TIMESTAMP" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA" ;

   COMMENT ON COLUMN "TOAKDBI"."SESSIONS"."SID" IS 'The PK for MainMenu containing PHP SessionID';
   COMMENT ON COLUMN "TOAKDBI"."SESSIONS"."LOGIN" IS 'Login name for this SessionID';
   COMMENT ON COLUMN "TOAKDBI"."SESSIONS"."APPLICATION" IS 'Application short name using this SessionID';
   COMMENT ON COLUMN "TOAKDBI"."SESSIONS"."ACTION" IS 'Action within Application, if defined';
   COMMENT ON COLUMN "TOAKDBI"."SESSIONS"."URL" IS 'PHP Request-URI';
   COMMENT ON TABLE "TOAKDBI"."SESSIONS"  IS 'This table stores active sessions';
--------------------------------------------------------
--  DDL for Table SUB_MENU
--------------------------------------------------------

  CREATE TABLE "TOAKDBI"."SUB_MENU" 
   (	"SUB_MENU_ID" NUMBER, 
	"MAIN_MENU_ID" NUMBER, 
	"SHORT_NAME" VARCHAR2(25 BYTE), 
	"LONG_NAME" VARCHAR2(255 BYTE), 
	"SHORT_CUT" VARCHAR2(20 BYTE), 
	"URL" VARCHAR2(255 BYTE), 
	"ENABLED" CHAR(1 BYTE) DEFAULT 1, 
	"PARENT_SUB_MENU_ID" NUMBER, 
	"SUB_MENU_SEQ_ID" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 0 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA" ;

   COMMENT ON COLUMN "TOAKDBI"."SUB_MENU"."SUB_MENU_ID" IS 'The PK for SubMenu';
   COMMENT ON COLUMN "TOAKDBI"."SUB_MENU"."MAIN_MENU_ID" IS 'The FK to the corresponding MainMenu entry';
   COMMENT ON COLUMN "TOAKDBI"."SUB_MENU"."SHORT_NAME" IS 'The short string to display in the website';
   COMMENT ON COLUMN "TOAKDBI"."SUB_MENU"."LONG_NAME" IS 'The long string to display as tooltip in the website';
   COMMENT ON COLUMN "TOAKDBI"."SUB_MENU"."URL" IS 'The URL for the link in the website';
   COMMENT ON COLUMN "TOAKDBI"."SUB_MENU"."ENABLED" IS 'enable or diesable menu entry';
   COMMENT ON COLUMN "TOAKDBI"."SUB_MENU"."PARENT_SUB_MENU_ID" IS 'the parent SubMenu entry';
   COMMENT ON COLUMN "TOAKDBI"."SUB_MENU"."SUB_MENU_SEQ_ID" IS 'The order of menu entries';
   COMMENT ON TABLE "TOAKDBI"."SUB_MENU"  IS 'This table stores the structure of the SubMenu';
--------------------------------------------------------
--  DDL for Table TOAD_PLAN_TABLE
--------------------------------------------------------

  CREATE TABLE "TOAKDBI"."TOAD_PLAN_TABLE" 
   (	"STATEMENT_ID" VARCHAR2(30 BYTE), 
	"TIMESTAMP" DATE, 
	"REMARKS" VARCHAR2(80 BYTE), 
	"OPERATION" VARCHAR2(30 BYTE), 
	"OPTIONS" VARCHAR2(30 BYTE), 
	"OBJECT_NODE" VARCHAR2(128 BYTE), 
	"OBJECT_OWNER" VARCHAR2(30 BYTE), 
	"OBJECT_NAME" VARCHAR2(30 BYTE), 
	"OBJECT_INSTANCE" NUMBER(*,0), 
	"OBJECT_TYPE" VARCHAR2(30 BYTE), 
	"OPTIMIZER" VARCHAR2(255 BYTE), 
	"SEARCH_COLUMNS" NUMBER, 
	"ID" NUMBER(*,0), 
	"PARENT_ID" NUMBER(*,0), 
	"POSITION" NUMBER(*,0), 
	"COST" NUMBER(*,0), 
	"CARDINALITY" NUMBER(*,0), 
	"BYTES" NUMBER(*,0), 
	"OTHER_TAG" VARCHAR2(255 BYTE), 
	"PARTITION_START" VARCHAR2(255 BYTE), 
	"PARTITION_STOP" VARCHAR2(255 BYTE), 
	"PARTITION_ID" NUMBER(*,0), 
	"OTHER" LONG, 
	"DISTRIBUTION" VARCHAR2(30 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA" ;
--------------------------------------------------------
--  DDL for Table USER_ORG_DETAILS
--------------------------------------------------------

  CREATE TABLE "TOAKDBI"."USER_ORG_DETAILS" 
   (	"USER_ID" VARCHAR2(100 BYTE), 
	"USER_VCDS_UID" VARCHAR2(64 BYTE), 
	"LDAP_UID" VARCHAR2(25 BYTE), 
	"USER_FIRSTNAME" VARCHAR2(100 BYTE), 
	"USER_LASTNAME" VARCHAR2(100 BYTE), 
	"EMAIL" VARCHAR2(120 BYTE), 
	"TEL" VARCHAR2(32 BYTE), 
	"VCDS_DELETE" DATE, 
	"USER_FUNCTION" VARCHAR2(100 BYTE), 
	"USER_CONTRACTOR" VARCHAR2(1 BYTE), 
	"USER_UPDATED" DATE, 
	"TEAM_ID" VARCHAR2(64 BYTE), 
	"TEAM_NAME" VARCHAR2(255 BYTE), 
	"TEAM_GROUP" VARCHAR2(6 BYTE), 
	"USER_DEPARTMENT" VARCHAR2(3 BYTE), 
	"TL" VARCHAR2(100 BYTE), 
	"GL" VARCHAR2(100 BYTE), 
	"AL" VARCHAR2(100 BYTE), 
	"UPDATE_DATE" DATE DEFAULT sysdate
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA" ;
--------------------------------------------------------
--  DDL for Table VFD2_MITARBEITER
--------------------------------------------------------

  CREATE TABLE "TOAKDBI"."VFD2_MITARBEITER" 
   (	"LDAP_UID" VARCHAR2(25 BYTE), 
	"NACHNAME" VARCHAR2(50 BYTE), 
	"VORNAME" VARCHAR2(50 BYTE), 
	"STANDORT" VARCHAR2(25 BYTE), 
	"ABTEILUNG" VARCHAR2(15 BYTE), 
	"USER_ID" VARCHAR2(50 BYTE), 
	"EMAIL" VARCHAR2(64 BYTE), 
	"COMMON_NAME" VARCHAR2(255 BYTE), 
	"NAME_GESAMT" VARCHAR2(255 BYTE), 
	"TEL" VARCHAR2(50 BYTE), 
	"RAUM" VARCHAR2(255 BYTE), 
	"EPN" VARCHAR2(32 BYTE), 
	"SYS_UPDATE_DATE" DATE DEFAULT SYSDATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA" ;
--------------------------------------------------------
--  DDL for View CONVERTED_DBI
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "TOAKDBI"."CONVERTED_DBI" ("REQUEST_ID", "SW_VERSION", "DBI_TYPE", "DBI_STATUS", "REQUEST_DATE", "STATUS_DATE", "REQUESTOR") AS 
  select r.request_id, r.sw_version, r.dbi_type, r.dbi_status, r.request_date, r.status_date, contact_last_name||' '||contact_first_name requestor
from dbi_request r, dbi_contacts c
where requestor_id = contact_id
and r.request_comments like 'Conversion of Active%'

;
--------------------------------------------------------
--  DDL for View DBI_ANALYSIS_FOR_TICC
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "TOAKDBI"."DBI_ANALYSIS_FOR_TICC" ("REQUEST_ID", "DBI_STATUS_DESC", "DBI_TYPE", "REQUESTOR_ID", "REQUEST_DATE", "OPERATOR_ID", "OPERATOR", "CONTACT_DEPT", "EXECUTION_ID", "TABLE_NAME", "SQL_ACTION", "ACT_ROWS") AS 
  select req.request_id, dbi_status_desc, dbi_type, req.requestor_id, request_date, nvl(req.operator_id, req.requestor_id) operator_id, con.CONTACT_FIRST_NAME||' '||con.CONTACT_LAST_NAME OPERATOR,
con.CONTACT_DEPT, exe.EXECUTION_ID, exe.TABLE_NAME, exe.SQL_ACTION, exe.ACT_ROWS
from toakdbi.dbi_request    req,
     toakdbi.dbi_contacts   con,
     toakdbi.dbi_execution_results exe,
     toakdbi.dbi_statuses sta
where nvl(req.operator_id, requestor_id) = con.CONTACT_ID
and   con.CONTACT_DEPT = 'TICC'
--and   req.DBI_TYPE = 'O'
and   req.REQUEST_ID = exe.REQUEST_ID
and   exe.EXECUTION_STAGE = 'Prod'
and   req.DBI_STATUS = sta.DBI_STATUS
order by req.request_id 
;
  GRANT SELECT ON "TOAKDBI"."DBI_ANALYSIS_FOR_TICC" TO "TMAIM";
--------------------------------------------------------
--  DDL for View DBI_ANALYSIS_FOR_TICO
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "TOAKDBI"."DBI_ANALYSIS_FOR_TICO" ("REQUEST_ID", "DBI_STATUS_DESC", "DBI_TYPE", "REQUESTOR_ID", "REQUEST_DATE", "OPERATOR_ID", "OPERATOR", "CONTACT_DEPT", "EXECUTION_ID", "TABLE_NAME", "SQL_ACTION", "ACT_ROWS") AS 
  select req.request_id, dbi_status_desc, dbi_type, req.requestor_id, request_date, nvl(req.operator_id, req.requestor_id) operator_id, con.CONTACT_FIRST_NAME||' '||con.CONTACT_LAST_NAME OPERATOR,
con.CONTACT_DEPT, exe.EXECUTION_ID, exe.TABLE_NAME, exe.SQL_ACTION, exe.ACT_ROWS
from toakdbi.dbi_request    req,
     toakdbi.dbi_contacts   con,
     toakdbi.dbi_execution_results exe,
     toakdbi.dbi_statuses sta
where nvl(req.operator_id, requestor_id) = con.CONTACT_ID
and   con.CONTACT_DEPT in ( 'TICO', 'TIPO', 'TICR' )
--and   req.DBI_TYPE = 'O'
and   req.REQUEST_ID = exe.REQUEST_ID
and   exe.EXECUTION_STAGE = 'Prod'
and   req.DBI_STATUS = sta.DBI_STATUS
order by req.request_id 
;
  GRANT SELECT ON "TOAKDBI"."DBI_ANALYSIS_FOR_TICO" TO "TMAIM";
--------------------------------------------------------
--  DDL for View DBI_ANALYSIS_HISTORY
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "TOAKDBI"."DBI_ANALYSIS_HISTORY" ("REQUEST_ID", "EFFECTIVE_DATE") AS 
  select request_id, effective_date from toakdbi.dbi_request_history where dbi_status='EX'
and nvl(operator_id, requestor_id) in (select contact_id from toakdbi.dbi_contacts where CONTACT_DEPT = 'TICC') 
;
--------------------------------------------------------
--  DDL for View DBI_REQ_SDE
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "TOAKDBI"."DBI_REQ_SDE" ("REQUEST_ID", "REQUESTOR_ID", "DBI_TYPE", "REQ_NAME", "SDE_NAME") AS 
  select request_id, requestor_id, r.DBI_TYPE, req.CONTACT_FIRST_NAME||' '||req.CONTACT_LAST_NAME req_name, 
                                    sde.CONTACT_FIRST_NAME||' '||sde.CONTACT_LAST_NAME sde_name
                                    from dbi_request r,
                 dbi_contacts req,
                 dbi_contacts sde
where req.CONTACT_ID = r.REQUESTOR_ID
and   sde.CONTACT_ID = r.SDE_ID 
;
--------------------------------------------------------
--  DDL for View KO11U
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "TOAKDBI"."KO11U" ("DBI", "DBI_TYPE", "Prio", "CATEGORY", "REQUESTOR", "SDE", "REQUEST_DATE", "STATUS_DATE", "UPDATE_DATE", "BRIEF_DESC") AS 
  SELECT   request_id dbi,
            DECODE (dbi_type, 'T', 'Template', 'R', 'Recurring') dbi_type, 
            priority_id "Prio",
            decode (dbi_flag, 'E', 'External', 'D', 'DBI', 'P', 'Procedure') Category,
            cr.contact_last_name || ', ' || cr.contact_first_name requestor,
            cs.contact_last_name || ', ' || cs.contact_first_name sde,
            request_date, status_date, update_date, brief_desc
       FROM dbi_request r, dbi_contacts cr, dbi_contacts cs
      WHERE dbi_type != 'O'
        AND dbi_status NOT IN ('CL', 'CA', 'FA')
        AND request_id IN (SELECT request_id
                             FROM dbi_logs
                            WHERE update_date > SYSDATE - 360)
        AND r.requestor_id = cr.contact_id
        AND r.sde_id = cs.contact_id
   ORDER BY 1 
;
--------------------------------------------------------
--  DDL for View PWCHANGABLE_DBLINKS
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "TOAKDBI"."PWCHANGABLE_DBLINKS" ("INSTANCE", "OWNER", "DB_LINK", "USERNAME", "HOST", "CREATED", "UPDATE_DATE") AS 
  select "INSTANCE","OWNER","DB_LINK","USERNAME","HOST","CREATED","UPDATE_DATE" from pwdblinks
 where ( (upper(instance),owner)  in (select pwc_name,pwc_user from pwconnects)
       or owner = 'PUBLIC')
  and (upper(instance),username) in (select pwc_name,pwc_user from pwconnects)
order by 1,2 
;
--------------------------------------------------------
--  DDL for View PWINDOUBT_DBLINKS
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "TOAKDBI"."PWINDOUBT_DBLINKS" ("INSTANCE", "OWNER", "DB_LINK", "USERNAME", "HOST", "CREATED", "UPDATE_DATE") AS 
  select "INSTANCE","OWNER","DB_LINK","USERNAME","HOST","CREATED","UPDATE_DATE" from pwdblinks
 where (upper(instance),owner) not in (select pwc_name,pwc_user from pwconnects)
  and owner != 'PUBLIC'
  and (upper(instance),username) in (select pwc_name,pwc_user from pwconnects) 
;
--------------------------------------------------------
--  DDL for View STAT_DBI_CANCELREASONS
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "TOAKDBI"."STAT_DBI_CANCELREASONS" ("TIMES_CANNCELLED", "COUNT", "CANCELLATION_REASON", "EFFECTIVE_DATE", "SORTER") AS 
  SELECT   to_char(count_status) as count_status, COUNT (count_status), cancellation_reason_desc, effective_date ,sorter
    FROM dbi_lov_control dlc, 
         (SELECT   request_id, COUNT (dbi_status) AS count_status, 
                   cancellation_reason,to_char(effective_date,'MM.YYYY') as effective_date ,
                    to_char(effective_date,'YYYYMM') sorter
              FROM dbi_request_history 
         WHERE to_char(effective_date,'YYYYMM') >=(select minvalue from dbi_stat_cfg)
               AND to_char(effective_date,'YYYYMM') <=(select maxvalue from dbi_stat_cfg)
               AND dbi_status = 'CA' 
               AND dbi_type <> 'R' 
               AND on_hold_flag = 0 
          GROUP BY request_id, dbi_status, cancellation_reason,to_char(effective_date,'MM.YYYY') ,
            to_char(effective_date,'YYYYMM')
          ORDER BY request_id) drh 
   WHERE count_status<=3 
   and dlc.cancellation_reason=drh.cancellation_reason 
GROUP BY count_status, cancellation_reason_desc, effective_date ,sorter
UNION 
SELECT   'mehr als 3' as count_status, COUNT (count_status), cancellation_reason_desc, effective_date ,sorter
    FROM dbi_lov_control dlc, 
         (SELECT   request_id, COUNT (dbi_status) AS count_status, 
                   cancellation_reason,to_char(effective_date,'MM.YYYY') as effective_date ,
                    to_char(effective_date,'YYYYMM') sorter
              FROM dbi_request_history 
         WHERE to_char(effective_date,'YYYYMM') >=(select minvalue from dbi_stat_cfg)
               AND to_char(effective_date,'YYYYMM') <=(select maxvalue from dbi_stat_cfg)
               AND dbi_status = 'CA' 
               AND dbi_type <> 'R' 
               AND on_hold_flag = 0 
          GROUP BY request_id, dbi_status, cancellation_reason,to_char(effective_date,'MM.YYYY') ,
                to_char(effective_date,'YYYYMM') 
          ORDER BY request_id) drh 
   WHERE count_status>3 
   and dlc.cancellation_reason=drh.cancellation_reason 
GROUP BY count_status, cancellation_reason_desc, effective_date, sorter
order by 5
;
--------------------------------------------------------
--  DDL for View STAT_DBI_DEPT
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "TOAKDBI"."STAT_DBI_DEPT" ("Abteilung", "Monate", "Anzahl", "Sorter") AS 
  SELECT   dc.contact_dept AS "Abteilung",
         TO_CHAR (status_date, 'MM.YYYY') AS "Monate",
         COUNT (DISTINCT dr.request_id) AS "Anzahl",
         TO_CHAR (status_date, 'YYYYMM')
    FROM dbi_request_history dr, dbi_contacts dc, dbi_execution de
   WHERE TO_CHAR (status_date, 'YYYYMM') >= (select minvalue from dbi_stat_cfg)
   AND TO_CHAR (status_date, 'YYYYMM') <= (select maxvalue from dbi_stat_cfg)
     AND dr.request_id = de.request_id
     AND de.execution_stage = 'Prod'
     AND dr.dbi_status = 'EX'
     AND dr.requestor_id = dc.contact_id
GROUP BY dc.contact_dept, TO_CHAR (status_date, 'MM.YYYY'),
TO_CHAR (status_date, 'YYYYMM')
order by 4
;
--------------------------------------------------------
--  DDL for View STAT_DBI_DEPTSQL
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "TOAKDBI"."STAT_DBI_DEPTSQL" ("Abteilung", "Monate", "Instanz", "Tabellen Name", "DDL", "Anzahl", "Sorter") AS 
  SELECT   dc.contact_dept as "Abteilung", 
         TO_CHAR (status_date, 'MM.YYYY') as "Monate", 
         db_instance as "Instanz", table_name as "Tabellen Name", 
         DECODE (sql_action, 'D', 'Delete', 'U', 'Update', 'I', 'Insert') as "DDL", 
         COUNT (1) as "Anzahl" ,
         TO_CHAR (status_date, 'YYYYMM')
    FROM dbi_request_history dr, dbi_execution_results der, dbi_contacts dc 
   WHERE TO_CHAR (status_date, 'YYYYMM') >= (select minvalue from dbi_stat_cfg)
     AND TO_CHAR (status_date, 'YYYYMM') <= (select maxvalue from dbi_stat_cfg)
     AND dr.request_id = der.request_id 
     AND der.execution_stage = 'Prod' 
     AND dr.dbi_status = 'EX' 
     AND dr.requestor_id = dc.contact_id 
     AND sql_action IN ('D', 'U', 'I') 
GROUP BY dc.contact_dept,TO_CHAR (status_date, 'MM.YYYY'), db_instance, table_name, 
         sql_action,TO_CHAR (status_date, 'YYYYMM')
order by 7
;
--------------------------------------------------------
--  DDL for View STAT_DBI_INSTANCETYPE
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "TOAKDBI"."STAT_DBI_INSTANCETYPE" ("Instanz", "DBI-Typ", "Monate", "Anzahl", "Sorter") AS 
  SELECT   db_instance,
         DECODE (dr.dbi_type,
                 'O', 'One-Time',
                 'R', 'Recurring',
                 'T', 'Template',
                 dr.dbi_type
                ) AS "DBI-Typ",
         TO_CHAR (dr.status_date, 'MM.YYYY') AS "Monate",
         COUNT (DISTINCT dr.request_id) AS "Anzahl",
         TO_CHAR (dr.status_date, 'YYYYMM')
    FROM dbi_request_history dr, dbi_execution de
   WHERE TO_CHAR (dr.status_date, 'YYYYMM') >= (select minvalue from dbi_stat_cfg)
     AND TO_CHAR (dr.status_date, 'YYYYMM') <= (select maxvalue from dbi_stat_cfg)
     AND dr.request_id = de.request_id
     AND de.execution_stage = 'Prod'
     AND dr.dbi_status = 'EX'
     AND db_instance NOT LIKE 'US%'
GROUP BY db_instance, dbi_type, TO_CHAR (dr.status_date, 'MM.YYYY'),
TO_CHAR (dr.status_date, 'YYYYMM')
UNION
SELECT   'USxx',
         DECODE (dbi_type,
                 'O', 'One-Time',
                 'R', 'Recurring',
                 'T', 'Template',
                 dbi_type
                ) AS "DBI-Typ",
         TO_CHAR (dr.status_date, 'MM.YYYY') AS "Monate",
         COUNT (DISTINCT dr.request_id) AS "Anzahl",
         TO_CHAR (dr.status_date, 'YYYYMM')
    FROM dbi_request_history dr, dbi_execution de
   WHERE TO_CHAR (dr.status_date, 'YYYYMM') >= (select minvalue from dbi_stat_cfg)
     AND TO_CHAR (dr.status_date, 'YYYYMM') <= (select maxvalue from dbi_stat_cfg)
     AND dr.request_id = de.request_id
     AND de.execution_stage = 'Prod'
     AND dr.dbi_status = 'EX'
     AND db_instance LIKE 'US%'
GROUP BY db_instance, dbi_type, TO_CHAR (dr.status_date, 'MM.YYYY'),
TO_CHAR (dr.status_date, 'YYYYMM')
order by 5
;
--------------------------------------------------------
--  DDL for View STAT_DBI_PRIOTYPE
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "TOAKDBI"."STAT_DBI_PRIOTYPE" ("Priorität", "DBI-Typ", "Monate", "Anzahl", "Sorter") AS 
  SELECT   DECODE (priority_id, 
                 1, '(1) Emergency', 
                 2, '(2) Critical', 
                 3, '(3) Normal', 
                 '(4) Not Available' 
                ) AS "Priorität", 
         DECODE (dbi_type, 
                 'O', 'One-Time', 
                 'R', 'Recurring', 
                 'T', 'Template', 
                 dbi_type 
                ) AS "DBI-Typ", 
         TO_CHAR (status_date, 'MM.YYYY') AS "Monate", 
         COUNT (DISTINCT dr.request_id) AS "Anzahl" ,
         TO_CHAR (status_date, 'YYYYMM')
    FROM dbi_request_history dr, dbi_execution de 
   WHERE TO_CHAR (dr.status_date, 'YYYYMM') >= (select minvalue from dbi_stat_cfg)
     AND TO_CHAR (dr.status_date, 'YYYYMM') <= (select maxvalue from dbi_stat_cfg)
     AND dr.request_id = de.request_id 
     AND de.execution_stage = 'Prod' 
     AND dr.dbi_status = 'EX' 
GROUP BY priority_id, dbi_type, TO_CHAR (status_date, 'MM.YYYY') ,
TO_CHAR (status_date, 'YYYYMM')
ORDER BY 5,3, 1, 2
;
--------------------------------------------------------
--  DDL for View STAT_DBI_RECURRING
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "TOAKDBI"."STAT_DBI_RECURRING" ("Header", "Monate", "Anzahl", "Sorter") AS 
  SELECT   'Absolute  Number of Recurring DBIs in Production', 
         TO_CHAR (drh.status_date, 'MM.YYYY') AS "Monate", 
         COUNT (DISTINCT request_id) AS "Anzahl", 
         TO_CHAR (drh.status_date, 'YYYYMM') 
    FROM dbi_request_history drh 
   WHERE drh.dbi_status = 'EX' 
     AND TO_CHAR (drh.status_date, 'YYYYMM') >= (select minvalue from dbi_stat_cfg)
     AND TO_CHAR (drh.status_date, 'YYYYMM') <= (select maxvalue from dbi_stat_cfg)
     AND dbi_type IN ('R') 
GROUP BY TO_CHAR (drh.status_date, 'MM.YYYY'),
 TO_CHAR (drh.status_date, 'YYYYMM')
UNION 
SELECT   'Total Number of Executions', 
         TO_CHAR (drh.status_date, 'MM.YYYY') AS "Monate", 
         COUNT (1) AS "Anzahl" ,
         TO_CHAR (drh.status_date, 'YYYYMM')
    FROM dbi_request_history drh 
   WHERE drh.dbi_status = 'EX' 
     AND TO_CHAR (drh.status_date, 'YYYYMM') >= (select minvalue from dbi_stat_cfg)
     AND TO_CHAR (drh.status_date, 'YYYYMM') <= (select maxvalue from dbi_stat_cfg)
     AND dbi_type IN ('R') 
GROUP BY TO_CHAR (drh.status_date, 'MM.YYYY'),
TO_CHAR (drh.status_date, 'YYYYMM')
order by 4
;
--------------------------------------------------------
--  DDL for View STAT_DBI_REJECTREASONS
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "TOAKDBI"."STAT_DBI_REJECTREASONS" ("TIMES_REJECTED", "COUNT", "REJECTION_REASON", "EFFECTIVE_DATE", "SORTER") AS 
  SELECT   to_char(count_status) as count_status, COUNT (count_status), REJECTION_reason_desc, effective_date ,sorter
    FROM dbi_lov_control dlc, 
         (SELECT   request_id, COUNT (dbi_status) AS count_status, 
                   rejection_reason,to_char(effective_date,'MM.YYYY') as effective_date ,
                    to_char(effective_date,'YYYYMM') sorter
              FROM dbi_request_history 
         WHERE to_char(effective_date,'YYYYMM') >=(select minvalue from dbi_stat_cfg)
               AND to_char(effective_date,'YYYYMM') <=(select maxvalue from dbi_stat_cfg)
               AND dbi_status = 'RJ' 
               AND dbi_type <> 'R' 
               AND on_hold_flag = 0 
          GROUP BY request_id, dbi_status, rejection_reason,to_char(effective_date,'MM.YYYY') ,
            to_char(effective_date,'YYYYMM')
          ORDER BY request_id) drh 
   WHERE count_status<=3 
   and dlc.rejection_reason=drh.rejection_reason 
GROUP BY count_status, REJECTION_reason_desc, effective_date ,sorter
UNION 
SELECT   'mehr als 3' as count_status, COUNT (count_status), rejection_reason_desc, effective_date ,sorter
    FROM dbi_lov_control dlc, 
         (SELECT   request_id, COUNT (dbi_status) AS count_status, 
                   rejection_reason,to_char(effective_date,'MM.YYYY') as effective_date ,
                    to_char(effective_date,'YYYYMM') sorter
              FROM dbi_request_history 
         WHERE to_char(effective_date,'YYYYMM') >=(select minvalue from dbi_stat_cfg)
               AND to_char(effective_date,'YYYYMM') <=(select maxvalue from dbi_stat_cfg)
               AND dbi_status = 'RJ' 
               AND dbi_type <> 'R' 
               AND on_hold_flag = 0 
          GROUP BY request_id, dbi_status, rejection_reason,to_char(effective_date,'MM.YYYY') ,
                to_char(effective_date,'YYYYMM') 
          ORDER BY request_id) drh 
   WHERE count_status>3 
   and dlc.rejection_reason=drh.rejection_reason 
GROUP BY count_status, rejection_reason_desc, effective_date, sorter
order by 5
;
--------------------------------------------------------
--  DDL for View STAT_DBI_REJECTREASONS2
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "TOAKDBI"."STAT_DBI_REJECTREASONS2" ("TIMES_REJECTED", "COUNT", "REJECTION_REASON", "EFFECTIVE_DATE", "SORTER") AS 
  SELECT   to_char(count_status) as count_status, COUNT (count_status), REJECTION_reason_desc, effective_date ,sorter
    FROM dbi_lov_control dlc, 
         (SELECT   request_id, COUNT (dbi_status) AS count_status, 
                   rejection_reason,to_char(effective_date,'MM.YYYY') as effective_date ,
                    to_char(effective_date,'YYYYMM') sorter
              FROM dbi_request_history 
	     WHERE to_char(effective_date,'YYYYMM') >='200603'
               AND to_char(effective_date,'YYYYMM') <='200703'
               AND dbi_status = 'RJ' 
               AND dbi_type <> 'R' 
               AND on_hold_flag = 0 
          GROUP BY request_id, dbi_status, rejection_reason,to_char(effective_date,'MM.YYYY') ,
            to_char(effective_date,'YYYYMM')
          ORDER BY request_id) drh 
   WHERE count_status<=3 
   and dlc.rejection_reason=drh.rejection_reason 
GROUP BY count_status, REJECTION_reason_desc, effective_date ,sorter
UNION 
SELECT   'mehr als 3' as count_status, COUNT (count_status), rejection_reason_desc, effective_date ,sorter
    FROM dbi_lov_control dlc, 
         (SELECT   request_id, COUNT (dbi_status) AS count_status, 
                   rejection_reason,to_char(effective_date,'MM.YYYY') as effective_date ,
                    to_char(effective_date,'YYYYMM') sorter
              FROM dbi_request_history 
         WHERE to_char(effective_date,'YYYYMM') >='200603'
               AND to_char(effective_date,'YYYYMM') <='200703'
               AND dbi_status = 'RJ' 
               AND dbi_type <> 'R' 
               AND on_hold_flag = 0 
          GROUP BY request_id, dbi_status, rejection_reason,to_char(effective_date,'MM.YYYY') ,
                to_char(effective_date,'YYYYMM') 
          ORDER BY request_id) drh 
   WHERE count_status>3 
   and dlc.rejection_reason=drh.rejection_reason 
GROUP BY count_status, rejection_reason_desc, effective_date, sorter
order by 5 
;
--------------------------------------------------------
--  DDL for View STAT_DBI_SERFTT
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "TOAKDBI"."STAT_DBI_SERFTT" ("Text", "Monate", "Anzahl", "Sorter") AS 
  SELECT   'TT/Serf nicht gefüllt' as "Text", 
         TO_CHAR (drh.status_date, 'MM.YYYY') AS "Monate", 
         COUNT (DISTINCT request_id) AS "Anzahl" ,
         TO_CHAR (drh.status_date, 'YYYYMM')
    FROM dbi_request_history drh 
   WHERE drh.dbi_status = 'EX' 
     AND tt_id IS NULL AND serf_cr_id IS NULL 
     AND TO_CHAR (drh.status_date, 'YYYYMM') >= (select minvalue from dbi_stat_cfg)
     AND TO_CHAR (drh.status_date, 'YYYYMM') <= (select maxvalue from dbi_stat_cfg)
GROUP BY TO_CHAR (drh.status_date, 'MM.YYYY') ,
TO_CHAR (drh.status_date, 'YYYYMM')
union 
SELECT   'TT/Serf gefüllt' as "Text", 
         TO_CHAR (drh.status_date, 'MM.YYYY') AS "Monate", 
         COUNT (DISTINCT request_id) AS "Anzahl" ,
         TO_CHAR (drh.status_date, 'YYYYMM')
    FROM dbi_request_history drh 
   WHERE drh.dbi_status = 'EX' 
     AND (tt_id IS NOT NULL OR serf_cr_id IS NOT NULL) 
     AND TO_CHAR (drh.status_date, 'YYYYMM') >= (select minvalue from dbi_stat_cfg)
     AND TO_CHAR (drh.status_date, 'YYYYMM') <= (select maxvalue from dbi_stat_cfg)
GROUP BY TO_CHAR (drh.status_date, 'MM.YYYY'),
TO_CHAR (drh.status_date, 'YYYYMM')
order by 4
;
--------------------------------------------------------
--  DDL for View STAT_DBI_TEMPLATES
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "TOAKDBI"."STAT_DBI_TEMPLATES" ("Header", "Monate", "Anzahl", "Sorter") AS 
  SELECT   'Absolute  Number of Template DBIs in Production', 
         TO_CHAR (drh.status_date, 'MM.YYYY') AS "Monate", 
         COUNT (DISTINCT request_id) AS "Anzahl" ,
         TO_CHAR (drh.status_date, 'YYYYMM')
    FROM dbi_request_history drh 
   WHERE drh.dbi_status = 'EX' 
     AND TO_CHAR (drh.status_date, 'YYYYMM') >= (select minvalue from dbi_stat_cfg)
     AND TO_CHAR (drh.status_date, 'YYYYMM') <= (select maxvalue from dbi_stat_cfg)
     AND dbi_type IN ('T') 
GROUP BY TO_CHAR (drh.status_date, 'MM.YYYY') ,
TO_CHAR (drh.status_date, 'YYYYMM')
UNION 
SELECT   'Total Number of Executions', 
         TO_CHAR (drh.status_date, 'MM.YYYY') AS "Monate", 
         COUNT (1) AS "Anzahl" ,
         TO_CHAR (drh.status_date, 'YYYYMM')
    FROM dbi_request_history drh 
   WHERE drh.dbi_status = 'EX' 
     AND TO_CHAR (drh.status_date, 'YYYYMM') >= (select minvalue from dbi_stat_cfg)
     AND TO_CHAR (drh.status_date, 'YYYYMM') <= (select maxvalue from dbi_stat_cfg)
     AND dbi_type IN ('T') 
GROUP BY TO_CHAR (drh.status_date, 'MM.YYYY'),
TO_CHAR (drh.status_date, 'YYYYMM')
order by 4
;
--------------------------------------------------------
--  DDL for View STAT_DBI_TOPSQL
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "TOAKDBI"."STAT_DBI_TOPSQL" ("Monate", "Instanz", "Tabellen Name", "DDL", "Anzahl", "Sorter") AS 
  SELECT   TO_CHAR (status_date, 'MM.YYYY') as "Monate", 
   db_instance as "Instanz", table_name as "Tabellen Name",
         DECODE (sql_action, 'D', 'Delete', 'U', 'Update', 'I', 'Insert') as "DDL",
         COUNT (1) as "Anzahl",
         TO_CHAR (status_date, 'YYYYMM')
    FROM dbi_request_history dr, dbi_execution_results der
   WHERE TO_CHAR (status_date, 'YYYYMM') >= (select minvalue from dbi_stat_cfg)
     AND TO_CHAR (status_date, 'YYYYMM') <= (select maxvalue from dbi_stat_cfg)
     AND dr.request_id = der.request_id
     AND der.execution_stage = 'Prod'
     AND dr.dbi_status = 'EX'
     AND sql_action IN ('D', 'U', 'I')
GROUP BY TO_CHAR (status_date, 'MM.YYYY'), db_instance, table_name,
         sql_action, TO_CHAR (status_date, 'YYYYMM')
  HAVING COUNT (1) > 50
  ORDER by 6
;
--------------------------------------------------------
--  DDL for View STAT_DBI_TOTALBYTYPE
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "TOAKDBI"."STAT_DBI_TOTALBYTYPE" ("Monate", "DBI-Typ", "Anzahl", "Sorter") AS 
  SELECT   TO_CHAR (drh.status_date, 'MM.YYYY') as "Monate", 
         DECODE (dbi_type, 
                 'O', 'One-Time', 
                 'R', 'Recurring', 
                 'T', 'Template', 
                 dbi_type 
                ) as "DBI-Typ", 
         COUNT (distinct request_id) as "Anzahl" ,
         TO_CHAR (drh.status_date, 'YYYYMM')
    FROM dbi_request_history drh 
   WHERE drh.dbi_status = 'EX' 
     AND TO_CHAR (drh.status_date, 'YYYYMM') >= (select minvalue from dbi_stat_cfg)
     AND TO_CHAR (drh.status_date, 'YYYYMM') <= (select maxvalue from dbi_stat_cfg)
GROUP BY TO_CHAR (drh.status_date, 'MM.YYYY'), dbi_type,
TO_CHAR (drh.status_date, 'YYYYMM')
order by 4
;
--------------------------------------------------------
--  DDL for View STAT_DBI_TOTALONETIME
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "TOAKDBI"."STAT_DBI_TOTALONETIME" ("Header", "Monate", "Anzahl", "Sorter") AS 
  SELECT   'Total One-Time DBIs in Month', 
   TO_CHAR (status_date, 'MM.YYYY') as "Monate", 
         COUNT (request_id) as "Anzahl" ,
         TO_CHAR (status_date, 'YYYYMM')
    FROM dbi_request_history 
   WHERE dbi_status = 'EX' 
     AND TO_CHAR (status_date, 'YYYYMM') >= (select minvalue from dbi_stat_cfg)
     AND TO_CHAR (status_date, 'YYYYMM') <= (select maxvalue from dbi_stat_cfg) 
     AND dbi_type IN ('O') 
GROUP BY TO_CHAR (status_date, 'MM.YYYY'),
TO_CHAR (status_date, 'YYYYMM')
order by 4
;
--------------------------------------------------------
--  DDL for View STAT_SLA_1
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "TOAKDBI"."STAT_SLA_1" ("Anzahl", "PRIORITY_ID", "Monate", "SLA_RESULT") AS 
  SELECT   COUNT (1) as "Anzahl", priority_id, 
   TO_CHAR (request_date, 'MM.YYYY') as "Monate",
         sla_result
    FROM dbi_sla_stats2
GROUP BY priority_id, TO_CHAR (request_date, 'MM.YYYY'), sla_result
;
--------------------------------------------------------
--  DDL for View STAT_SLA_2
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "TOAKDBI"."STAT_SLA_2" ("DBI No.", "Priority", "Tested Successfully", "SDE Approved", "DA Approved", "Actual Approval Time, min.", "Agreed SLA Time, min.", "Bottleneck") AS 
  SELECT DISTINCT request_id "DBI No.", 
       priority_id "Priority",
                ts_date "Tested Successfully", sde_date "SDE Approved",
                da_date "DA Approved",
                min_final_approval "Actual Approval Time, min.",
                sla_time "Agreed SLA Time, min.",
                DECODE (min_sde_approval,
                        NULL, 'Waiting on Either',
                        DECODE (GREATEST (min_sde_approval, min_dat_approval),
                                min_sde_approval, 'Waiting for SDE',
                                'Waiting for DA'
                               )
                       ) "Bottleneck"
           FROM dbi_sla_stats2
          WHERE sla_result = 'Exceeds SLA'
       ORDER BY 2, 3
;
--------------------------------------------------------
--  DDL for View VERTEILER_DBITOOL
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "TOAKDBI"."VERTEILER_DBITOOL" ("CONTACT_EMAIL") AS 
  SELECT distinct CONTACT_EMAIL
FROM TOAKDBI.DBI_CONTACTS Tbl
where active_ind = 'Y'
and level_ind = 'REQ'
OR level_ind = 'SDE'
ORDER BY CONTACT_EMAIL ASC
;
--------------------------------------------------------
--  DDL for View VERTEILER_GESAMT
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "TOAKDBI"."VERTEILER_GESAMT" ("MAIL_ADDRESS") AS 
  select distinct mail_address from (select lower(contact_email) mail_address from Verteiler_DBITOOL
	   						  	    UNION
								    select lower(pwu_email) mail_address from Verteiler_PWS)
order by mail_address
;
--------------------------------------------------------
--  DDL for View VERTEILER_PWS
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "TOAKDBI"."VERTEILER_PWS" ("PWU_EMAIL") AS 
  SELECT distinct PWU_EMAIL
FROM TOAKDBI.PWUSERS Tbl
where pwu_activeind = 'Y'
ORDER BY PWU_EMAIL ASC
;
--------------------------------------------------------
--  DDL for View V_PWC_PWG
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "TOAKDBI"."V_PWC_PWG" ("PWC_ID", "PWC_NAME", "PWC_USER", "UPDATE_DATE", "PWGROUP_ID", "PWGROUP_NAME", "PWGROUP_DESC") AS 
  select pwc_id, pwc_name, pwc_user, update_date, pwgroup_id, pwgroup_name, pwgroup_desc
from pwconnects c left outer join pwgroups g on c.pwc_group=g.pwgroup_id
;
--------------------------------------------------------
--  DDL for View WRONG_DBLINKS
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "TOAKDBI"."WRONG_DBLINKS" ("SUM", "OWNER", "INSTANCE") AS 
  select count(1) sum,owner,instance from (
select instance, owner
from pwdblinks
where status in (1,3)
union
select host as instance,username as owner
from pwdblinks
where status in (2,3)) v
group by owner, instance
order by 1,2,3
;
--------------------------------------------------------
--  DDL for Index USER_ORG_DETAILS_IX3
--------------------------------------------------------

  CREATE INDEX "TOAKDBI"."USER_ORG_DETAILS_IX3" ON "TOAKDBI"."USER_ORG_DETAILS" ("TEAM_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA" ;
--------------------------------------------------------
--  DDL for Index DBI_K2K_OWNERSHIP_PK1
--------------------------------------------------------

  CREATE UNIQUE INDEX "TOAKDBI"."DBI_K2K_OWNERSHIP_PK1" ON "TOAKDBI"."DBI_K2K_OWNERSHIP" ("SW_VERSION", "OBJ_NAME_PRD", "NEW_OWNER") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX" ;
--------------------------------------------------------
--  DDL for Index DBI_LOGS_TEXT_CTX1
--------------------------------------------------------

  CREATE INDEX "TOAKDBI"."DBI_LOGS_TEXT_CTX1" ON "TOAKDBI"."DBI_LOGS_TEXT" ("BFILELOC") 
   INDEXTYPE IS "CTXSYS"."CONTEXT" 
  PARALLEL 16 ;
--------------------------------------------------------
--  DDL for Index DBI_DWH_TABLES_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "TOAKDBI"."DBI_DWH_TABLES_PK" ON "TOAKDBI"."DBI_DWH_TABLES" ("DB_INSTANCE", "DWH_TABLE_NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX" ;
--------------------------------------------------------
--  DDL for Index USER_ORG_DETAILS_IX2
--------------------------------------------------------

  CREATE INDEX "TOAKDBI"."USER_ORG_DETAILS_IX2" ON "TOAKDBI"."USER_ORG_DETAILS" ("EMAIL") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA" ;
--------------------------------------------------------
--  DDL for Index SUB_MENU_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "TOAKDBI"."SUB_MENU_PK" ON "TOAKDBI"."SUB_MENU" ("SUB_MENU_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX" ;
--------------------------------------------------------
--  DDL for Index PWROLES_NAME_UNIQ
--------------------------------------------------------

  CREATE UNIQUE INDEX "TOAKDBI"."PWROLES_NAME_UNIQ" ON "TOAKDBI"."PWROLES" ("PWR_NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX" ;
--------------------------------------------------------
--  DDL for Index PWGROUPS_IX1
--------------------------------------------------------

  CREATE UNIQUE INDEX "TOAKDBI"."PWGROUPS_IX1" ON "TOAKDBI"."PWGROUPS" ("PWGROUP_NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX" ;
--------------------------------------------------------
--  DDL for Index USER_ORG_DETAILS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "TOAKDBI"."USER_ORG_DETAILS_PK" ON "TOAKDBI"."USER_ORG_DETAILS" ("USER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA" ;
--------------------------------------------------------
--  DDL for Index MAIN_MENU_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "TOAKDBI"."MAIN_MENU_PK" ON "TOAKDBI"."MAIN_MENU" ("MAIN_MENU_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX" ;
--------------------------------------------------------
--  DDL for Index VFD2_MA_NACHNAME_IDX
--------------------------------------------------------

  CREATE INDEX "TOAKDBI"."VFD2_MA_NACHNAME_IDX" ON "TOAKDBI"."VFD2_MITARBEITER" ("NACHNAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA" ;
--------------------------------------------------------
--  DDL for Index DBI_LOGS_UNQ
--------------------------------------------------------

  CREATE INDEX "TOAKDBI"."DBI_LOGS_UNQ" ON "TOAKDBI"."DBI_LOGS" ("REQUEST_ID", "NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX" ;
--------------------------------------------------------
--  DDL for Index VFD2_MA_UID_IDX
--------------------------------------------------------

  CREATE INDEX "TOAKDBI"."VFD2_MA_UID_IDX" ON "TOAKDBI"."VFD2_MITARBEITER" ("LDAP_UID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA" ;
--------------------------------------------------------
--  DDL for Index PWGRANTS_4IX
--------------------------------------------------------

  CREATE INDEX "TOAKDBI"."PWGRANTS_4IX" ON "TOAKDBI"."PWGRANTS" ("PWRG_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX" ;
--------------------------------------------------------
--  DDL for Index DBI_TEMP_TABLES_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "TOAKDBI"."DBI_TEMP_TABLES_PK" ON "TOAKDBI"."DBI_TEMP_TABLES" ("REQUEST_ID", "DB_INSTANCE", "TEMP_TABLE_NAME", "DB_USER") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX" ;
--------------------------------------------------------
--  DDL for Index DBI_TEMPLATE_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "TOAKDBI"."DBI_TEMPLATE_PK" ON "TOAKDBI"."DBI_TEMPLATE" ("REQUEST_ID", "TABLE_NAME", "POSITION_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX" ;
--------------------------------------------------------
--  DDL for Index DBI_DOCUMENTATION_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "TOAKDBI"."DBI_DOCUMENTATION_PK" ON "TOAKDBI"."DBI_DOCUMENTATION" ("REQUEST_ID", "DOC_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX" ;
--------------------------------------------------------
--  DDL for Index PWGROUPS_IPK
--------------------------------------------------------

  CREATE UNIQUE INDEX "TOAKDBI"."PWGROUPS_IPK" ON "TOAKDBI"."PWGROUPS" ("PWGROUP_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX" ;
--------------------------------------------------------
--  DDL for Index PWCONNECTS_UNIQ
--------------------------------------------------------

  CREATE UNIQUE INDEX "TOAKDBI"."PWCONNECTS_UNIQ" ON "TOAKDBI"."PWCONNECTS" ("PWC_NAME", "PWC_USER", "PWC_CAT") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX" ;
--------------------------------------------------------
--  DDL for Index VFD2_MA_NAME_GES_IDX
--------------------------------------------------------

  CREATE INDEX "TOAKDBI"."VFD2_MA_NAME_GES_IDX" ON "TOAKDBI"."VFD2_MITARBEITER" ("NAME_GESAMT") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA" ;
--------------------------------------------------------
--  DDL for Index ORG_TEAM_MAP_IX2
--------------------------------------------------------

  CREATE INDEX "TOAKDBI"."ORG_TEAM_MAP_IX2" ON "TOAKDBI"."ORG_TEAM_MAP" ("TICAM_TEAM_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA" ;
--------------------------------------------------------
--  DDL for Index GENERAL_PROPERTIES_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "TOAKDBI"."GENERAL_PROPERTIES_PK" ON "TOAKDBI"."GENERAL_PROPERTIES" ("GEN_PROP_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX" ;
--------------------------------------------------------
--  DDL for Index PWREQUESTS_IX2
--------------------------------------------------------

  CREATE INDEX "TOAKDBI"."PWREQUESTS_IX2" ON "TOAKDBI"."PWREQUESTS" ("PWC_ID", "REQUEST_DATE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA" ;
--------------------------------------------------------
--  DDL for Index SUB_MENU_SHORTNAME_IX
--------------------------------------------------------

  CREATE INDEX "TOAKDBI"."SUB_MENU_SHORTNAME_IX" ON "TOAKDBI"."SUB_MENU" ("SHORT_NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA" ;
--------------------------------------------------------
--  DDL for Index DBI_LOGS_TEXT_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "TOAKDBI"."DBI_LOGS_TEXT_PK" ON "TOAKDBI"."DBI_LOGS_TEXT" ("LOG_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX" ;
--------------------------------------------------------
--  DDL for Index VFD2_MA_EMAIL_IDX
--------------------------------------------------------

  CREATE INDEX "TOAKDBI"."VFD2_MA_EMAIL_IDX" ON "TOAKDBI"."VFD2_MITARBEITER" (LOWER("EMAIL")) 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA" ;
--------------------------------------------------------
--  DDL for Index DBI_INSTANCES_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "TOAKDBI"."DBI_INSTANCES_PK" ON "TOAKDBI"."DBI_INSTANCES" ("PROD_INSTANCE", "MARKET") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX" ;
--------------------------------------------------------
--  DDL for Index PWC_DBINFO_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "TOAKDBI"."PWC_DBINFO_PK" ON "TOAKDBI"."PWC_DBINFO" ("PWC_NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX" ;
--------------------------------------------------------
--  DDL for Index DR$DBI_LOGS_TEXT_CTX1$X
--------------------------------------------------------

  CREATE INDEX "TOAKDBI"."DR$DBI_LOGS_TEXT_CTX1$X" ON "TOAKDBI"."DR$DBI_LOGS_TEXT_CTX1$I" ("TOKEN_TEXT", "TOKEN_TYPE", "TOKEN_FIRST", "TOKEN_LAST", "TOKEN_COUNT") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS COMPRESS 2 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA" ;
--------------------------------------------------------
--  DDL for Index DBI_CONTACTS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "TOAKDBI"."DBI_CONTACTS_PK" ON "TOAKDBI"."DBI_CONTACTS" ("CONTACT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX" ;
--------------------------------------------------------
--  DDL for Index DBI_OPERATOR_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "TOAKDBI"."DBI_OPERATOR_PK" ON "TOAKDBI"."DBI_OPERATOR" ("DBI_OPER_SHORT") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX" ;
--------------------------------------------------------
--  DDL for Index ORG_USER_IX2
--------------------------------------------------------

  CREATE UNIQUE INDEX "TOAKDBI"."ORG_USER_IX2" ON "TOAKDBI"."ORG_USER_MAP" ("VFNT_UID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA" ;
--------------------------------------------------------
--  DDL for Index SESSIONS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "TOAKDBI"."SESSIONS_PK" ON "TOAKDBI"."SESSIONS" ("SID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX" ;
--------------------------------------------------------
--  DDL for Index DBI_EXECUTION_RESULTS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "TOAKDBI"."DBI_EXECUTION_RESULTS_PK" ON "TOAKDBI"."DBI_EXECUTION_RESULTS" ("REQUEST_ID", "DB_INSTANCE", "EXECUTION_STAGE", "EXECUTION_ID", "TABLE_NAME", "SQL_ACTION") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX" ;
--------------------------------------------------------
--  DDL for Index PWUSERS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "TOAKDBI"."PWUSERS_PK" ON "TOAKDBI"."PWUSERS" ("PWU_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX" ;
--------------------------------------------------------
--  DDL for Index DBI_EXCEPTION_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "TOAKDBI"."DBI_EXCEPTION_PK" ON "TOAKDBI"."DBI_EXCEPTION" ("REQUEST_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA" ;
--------------------------------------------------------
--  DDL for Index DRC$DBI_SCRIPTS_TEXT_CTX1$R
--------------------------------------------------------

  CREATE UNIQUE INDEX "TOAKDBI"."DRC$DBI_SCRIPTS_TEXT_CTX1$R" ON "TOAKDBI"."DR$DBI_SCRIPTS_TEXT_CTX1$R" ("ROW_NO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA" ;
--------------------------------------------------------
--  DDL for Index PWGRANTS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "TOAKDBI"."PWGRANTS_PK" ON "TOAKDBI"."PWGRANTS" ("PWG_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX" ;
--------------------------------------------------------
--  DDL for Index DBI_MIG_EXCEPTION_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "TOAKDBI"."DBI_MIG_EXCEPTION_PK" ON "TOAKDBI"."DBI_MIG_EXCEPTION" ("REQUEST_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX" ;
--------------------------------------------------------
--  DDL for Index DBI_STATUSES_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "TOAKDBI"."DBI_STATUSES_PK" ON "TOAKDBI"."DBI_STATUSES" ("DBI_STATUS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX" ;
--------------------------------------------------------
--  DDL for Index VFD2_MA_CN_IDX
--------------------------------------------------------

  CREATE INDEX "TOAKDBI"."VFD2_MA_CN_IDX" ON "TOAKDBI"."VFD2_MITARBEITER" ("COMMON_NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA" ;
--------------------------------------------------------
--  DDL for Index DBI_REQUEST_HISTORY_IX2
--------------------------------------------------------

  CREATE INDEX "TOAKDBI"."DBI_REQUEST_HISTORY_IX2" ON "TOAKDBI"."DBI_REQUEST_HISTORY" ("REQUEST_ID", "EFFECTIVE_DATE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA" ;
--------------------------------------------------------
--  DDL for Index PK_DBI_EXECUTION_SELECTS
--------------------------------------------------------

  CREATE UNIQUE INDEX "TOAKDBI"."PK_DBI_EXECUTION_SELECTS" ON "TOAKDBI"."DBI_EXECUTION_SELECTS" ("REQUEST_ID", "TABLE_NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX" ;
--------------------------------------------------------
--  DDL for Index DBI_REQUEST_TEAM_IX
--------------------------------------------------------

  CREATE INDEX "TOAKDBI"."DBI_REQUEST_TEAM_IX" ON "TOAKDBI"."DBI_REQUEST" ("TEAM_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA" ;
--------------------------------------------------------
--  DDL for Index MAIN_MENU_UK
--------------------------------------------------------

  CREATE UNIQUE INDEX "TOAKDBI"."MAIN_MENU_UK" ON "TOAKDBI"."MAIN_MENU" ("SHORT_CUT") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX" ;
--------------------------------------------------------
--  DDL for Index DBI_AVAILABLE_TABLES_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "TOAKDBI"."DBI_AVAILABLE_TABLES_PK" ON "TOAKDBI"."DBI_AVAILABLE_TABLES" ("DB_INSTANCE", "TABLE_NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX" ;
--------------------------------------------------------
--  DDL for Index DBI_SW_VERSIONS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "TOAKDBI"."DBI_SW_VERSIONS_PK" ON "TOAKDBI"."DBI_SW_VERSIONS" ("SW_VERSION") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX" ;
--------------------------------------------------------
--  DDL for Index DBI_LOV_CONTROL_1UQ
--------------------------------------------------------

  CREATE UNIQUE INDEX "TOAKDBI"."DBI_LOV_CONTROL_1UQ" ON "TOAKDBI"."DBI_LOV_CONTROL" ("DBI_TYPE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX" ;
--------------------------------------------------------
--  DDL for Index DBI_SCRIPTS_TEXT_CTX1
--------------------------------------------------------

  CREATE INDEX "TOAKDBI"."DBI_SCRIPTS_TEXT_CTX1" ON "TOAKDBI"."DBI_SCRIPTS_TEXT" ("BFILELOC") 
   INDEXTYPE IS "CTXSYS"."CONTEXT" ;
--------------------------------------------------------
--  DDL for Index PWREQUESTS_IX1
--------------------------------------------------------

  CREATE BITMAP INDEX "TOAKDBI"."PWREQUESTS_IX1" ON "TOAKDBI"."PWREQUESTS" ("STATUS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX" ;
--------------------------------------------------------
--  DDL for Index DRC$DBI_LOGS_TEXT_CTX1$R
--------------------------------------------------------

  CREATE UNIQUE INDEX "TOAKDBI"."DRC$DBI_LOGS_TEXT_CTX1$R" ON "TOAKDBI"."DR$DBI_LOGS_TEXT_CTX1$R" ("ROW_NO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA" ;
--------------------------------------------------------
--  DDL for Index ORG_TEAM_MAP_IX1
--------------------------------------------------------

  CREATE INDEX "TOAKDBI"."ORG_TEAM_MAP_IX1" ON "TOAKDBI"."ORG_TEAM_MAP" ("ORG_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA" ;
--------------------------------------------------------
--  DDL for Index PWCAT_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "TOAKDBI"."PWCAT_PK" ON "TOAKDBI"."PWCAT" ("CAT") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA" ;
--------------------------------------------------------
--  DDL for Index DBI_SCRIPTS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "TOAKDBI"."DBI_SCRIPTS_PK" ON "TOAKDBI"."DBI_SCRIPTS" ("SCRIPT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX" ;
--------------------------------------------------------
--  DDL for Index PWUSERS_KEY_UNIQ
--------------------------------------------------------

  CREATE UNIQUE INDEX "TOAKDBI"."PWUSERS_KEY_UNIQ" ON "TOAKDBI"."PWUSERS" ("PWU_KEY") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX" ;
--------------------------------------------------------
--  DDL for Index VFD2_MA_ABT_IDX
--------------------------------------------------------

  CREATE INDEX "TOAKDBI"."VFD2_MA_ABT_IDX" ON "TOAKDBI"."VFD2_MITARBEITER" ("ABTEILUNG") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA" ;
--------------------------------------------------------
--  DDL for Index DBCHECKLOG_IX2
--------------------------------------------------------

  CREATE INDEX "TOAKDBI"."DBCHECKLOG_IX2" ON "TOAKDBI"."DBCHECKLOG" ("DB", "CLEARED") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA" ;
--------------------------------------------------------
--  DDL for Index DBI_CLEANUP_INSTANCES_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "TOAKDBI"."DBI_CLEANUP_INSTANCES_PK" ON "TOAKDBI"."DBI_CLEANUP_INSTANCES" ("DB_INSTANCE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA" ;
--------------------------------------------------------
--  DDL for Index USER_ORG_DETAILS_IX1
--------------------------------------------------------

  CREATE INDEX "TOAKDBI"."USER_ORG_DETAILS_IX1" ON "TOAKDBI"."USER_ORG_DETAILS" ("LDAP_UID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA" ;
--------------------------------------------------------
--  DDL for Index DBI_STATUSES_1UQ
--------------------------------------------------------

  CREATE UNIQUE INDEX "TOAKDBI"."DBI_STATUSES_1UQ" ON "TOAKDBI"."DBI_STATUSES" ("DBI_STATUS_DESC") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX" ;
--------------------------------------------------------
--  DDL for Index DBI_PRIORITY_1UQ
--------------------------------------------------------

  CREATE UNIQUE INDEX "TOAKDBI"."DBI_PRIORITY_1UQ" ON "TOAKDBI"."DBI_PRIORITY" ("PRIORITY") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX" ;
--------------------------------------------------------
--  DDL for Index DBI_REQUEST_HISTORY_IX1
--------------------------------------------------------

  CREATE INDEX "TOAKDBI"."DBI_REQUEST_HISTORY_IX1" ON "TOAKDBI"."DBI_REQUEST_HISTORY" ("UPDATE_DATE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX" ;
--------------------------------------------------------
--  DDL for Index DBI_PRIORITY_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "TOAKDBI"."DBI_PRIORITY_PK" ON "TOAKDBI"."DBI_PRIORITY" ("PRIORITY_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX" ;
--------------------------------------------------------
--  DDL for Index DBI_SCRIPTS_TEXT_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "TOAKDBI"."DBI_SCRIPTS_TEXT_PK" ON "TOAKDBI"."DBI_SCRIPTS_TEXT" ("SCRIPT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX" ;
--------------------------------------------------------
--  DDL for Index PWC_SYSTEM_GRP_1IX
--------------------------------------------------------

  CREATE INDEX "TOAKDBI"."PWC_SYSTEM_GRP_1IX" ON "TOAKDBI"."PWC_SYSTEM_GRP" ("SYSTEM_UID", "PWC_NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA" ;
--------------------------------------------------------
--  DDL for Index PWCONNECTS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "TOAKDBI"."PWCONNECTS_PK" ON "TOAKDBI"."PWCONNECTS" ("PWC_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX" ;
--------------------------------------------------------
--  DDL for Index DBI_CONTACTS_1UQ
--------------------------------------------------------

  CREATE UNIQUE INDEX "TOAKDBI"."DBI_CONTACTS_1UQ" ON "TOAKDBI"."DBI_CONTACTS" ("CONTACT_LAST_NAME", "CONTACT_FIRST_NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX" ;
--------------------------------------------------------
--  DDL for Index DBI_LOGS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "TOAKDBI"."DBI_LOGS_PK" ON "TOAKDBI"."DBI_LOGS" ("LOG_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX" ;
--------------------------------------------------------
--  DDL for Index DBI_INSTANCES_1UQ
--------------------------------------------------------

  CREATE UNIQUE INDEX "TOAKDBI"."DBI_INSTANCES_1UQ" ON "TOAKDBI"."DBI_INSTANCES" ("PROD_INSTANCE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX" ;
--------------------------------------------------------
--  DDL for Index PWC_SYSTEM_GRP_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "TOAKDBI"."PWC_SYSTEM_GRP_PK" ON "TOAKDBI"."PWC_SYSTEM_GRP" ("PWC_NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX" ;
--------------------------------------------------------
--  DDL for Index PWDBLINKS_REMOTE_IDX
--------------------------------------------------------

  CREATE INDEX "TOAKDBI"."PWDBLINKS_REMOTE_IDX" ON "TOAKDBI"."PWDBLINKS" ("USERNAME", "HOST") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX" ;
--------------------------------------------------------
--  DDL for Index PWCERTS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "TOAKDBI"."PWCERTS_PK" ON "TOAKDBI"."PWCERTS" ("PWCE_UID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA" ;
--------------------------------------------------------
--  DDL for Index PWGRANTS_3IX
--------------------------------------------------------

  CREATE INDEX "TOAKDBI"."PWGRANTS_3IX" ON "TOAKDBI"."PWGRANTS" ("PWC_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX" ;
--------------------------------------------------------
--  DDL for Index GENERAL_PROPERTIES_1IX
--------------------------------------------------------

  CREATE INDEX "TOAKDBI"."GENERAL_PROPERTIES_1IX" ON "TOAKDBI"."GENERAL_PROPERTIES" ("PROPERTY", "PROP_VALUE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA" ;
--------------------------------------------------------
--  DDL for Index PWUSERS_NAME_UNIQ
--------------------------------------------------------

  CREATE UNIQUE INDEX "TOAKDBI"."PWUSERS_NAME_UNIQ" ON "TOAKDBI"."PWUSERS" ("PWU_NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX" ;
--------------------------------------------------------
--  DDL for Index DBI_EXECUTION_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "TOAKDBI"."DBI_EXECUTION_PK" ON "TOAKDBI"."DBI_EXECUTION" ("REQUEST_ID", "EXECUTION_STAGE", "DB_INSTANCE", "EXECUTION_ID", "DB_USER") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX" ;
--------------------------------------------------------
--  DDL for Index ORG_USER_IX1
--------------------------------------------------------

  CREATE UNIQUE INDEX "TOAKDBI"."ORG_USER_IX1" ON "TOAKDBI"."ORG_USER_MAP" ("LDAP_UID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA" ;
--------------------------------------------------------
--  DDL for Index PWDBLINKS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "TOAKDBI"."PWDBLINKS_PK" ON "TOAKDBI"."PWDBLINKS" ("INSTANCE", "OWNER", "DB_LINK") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX" ;
--------------------------------------------------------
--  DDL for Index K2K_TABLE_OWNERSHIP_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "TOAKDBI"."K2K_TABLE_OWNERSHIP_PK" ON "TOAKDBI"."K2K_TABLE_OWNERSHIP" ("OBJ_NAME_PRD") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX" ;
--------------------------------------------------------
--  DDL for Index DBI_TEMPLATE_1UQ
--------------------------------------------------------

  CREATE UNIQUE INDEX "TOAKDBI"."DBI_TEMPLATE_1UQ" ON "TOAKDBI"."DBI_TEMPLATE" ("REQUEST_ID", "TABLE_NAME", "ALIAS_NAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX" ;
--------------------------------------------------------
--  DDL for Index PK_DBI_NOTIFICATIONS
--------------------------------------------------------

  CREATE UNIQUE INDEX "TOAKDBI"."PK_DBI_NOTIFICATIONS" ON "TOAKDBI"."DBI_NOTIFICATIONS" ("REQUEST_ID", "OPERATOR_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX" ;
--------------------------------------------------------
--  DDL for Index DBI_EXECUTION_RESULTS_IX1
--------------------------------------------------------

  CREATE INDEX "TOAKDBI"."DBI_EXECUTION_RESULTS_IX1" ON "TOAKDBI"."DBI_EXECUTION_RESULTS" ("TABLE_NAME", "DB_INSTANCE", "REQUEST_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX" ;
--------------------------------------------------------
--  DDL for Index VFD2_MA_STANDORT_IDX
--------------------------------------------------------

  CREATE INDEX "TOAKDBI"."VFD2_MA_STANDORT_IDX" ON "TOAKDBI"."VFD2_MITARBEITER" ("STANDORT") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA" ;
--------------------------------------------------------
--  DDL for Index DBI_NEXT_STATUS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "TOAKDBI"."DBI_NEXT_STATUS_PK" ON "TOAKDBI"."DBI_NEXT_STATUS" ("DBI_CURR_STATUS", "DBI_NEXT_STATUS", "DBI_OPERATOR_ALLOWED", "DBI_TYPE", "DBI_FLAG") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX" ;
--------------------------------------------------------
--  DDL for Index DR$DBI_SCRIPTS_TEXT_CTX1$X
--------------------------------------------------------

  CREATE INDEX "TOAKDBI"."DR$DBI_SCRIPTS_TEXT_CTX1$X" ON "TOAKDBI"."DR$DBI_SCRIPTS_TEXT_CTX1$I" ("TOKEN_TEXT", "TOKEN_TYPE", "TOKEN_FIRST", "TOKEN_LAST", "TOKEN_COUNT") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS COMPRESS 2 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA" ;
--------------------------------------------------------
--  DDL for Index PWGRANTS_5IX
--------------------------------------------------------

  CREATE INDEX "TOAKDBI"."PWGRANTS_5IX" ON "TOAKDBI"."PWGRANTS" ("PWU_ID", "PWR_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX" ;
--------------------------------------------------------
--  DDL for Index DBI_MV_OVERVIEW_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "TOAKDBI"."DBI_MV_OVERVIEW_PK" ON "TOAKDBI"."DBI_MV_OVERVIEW" ("REQUEST_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX" ;
--------------------------------------------------------
--  DDL for Index DBCHECKLOG_IX1
--------------------------------------------------------

  CREATE INDEX "TOAKDBI"."DBCHECKLOG_IX1" ON "TOAKDBI"."DBCHECKLOG" ("CREATED") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA" ;
--------------------------------------------------------
--  DDL for Index DBI_REQUEST_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "TOAKDBI"."DBI_REQUEST_PK" ON "TOAKDBI"."DBI_REQUEST" ("REQUEST_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX" ;
--------------------------------------------------------
--  DDL for Index SESSIONS_TIMSTAMP_IX
--------------------------------------------------------

  CREATE INDEX "TOAKDBI"."SESSIONS_TIMSTAMP_IX" ON "TOAKDBI"."SESSIONS" ("TIMESTAMP") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX" ;
--------------------------------------------------------
--  DDL for Index PWGRANTS_2IX
--------------------------------------------------------

  CREATE INDEX "TOAKDBI"."PWGRANTS_2IX" ON "TOAKDBI"."PWGRANTS" ("PWU_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX" ;
--------------------------------------------------------
--  DDL for Index DBI_CONTACTS_2UQ
--------------------------------------------------------

  CREATE UNIQUE INDEX "TOAKDBI"."DBI_CONTACTS_2UQ" ON "TOAKDBI"."DBI_CONTACTS" ("USERNAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX" ;
--------------------------------------------------------
--  DDL for Index PWROLES_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "TOAKDBI"."PWROLES_PK" ON "TOAKDBI"."PWROLES" ("PWR_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX" ;
--------------------------------------------------------
--  DDL for Index DBI_EXECUTION_IX1
--------------------------------------------------------

  CREATE INDEX "TOAKDBI"."DBI_EXECUTION_IX1" ON "TOAKDBI"."DBI_EXECUTION" ("DB_INSTANCE", "DB_USER", "REQUEST_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX" ;
--------------------------------------------------------
--  DDL for Index PWREQUESTS_IPK
--------------------------------------------------------

  CREATE UNIQUE INDEX "TOAKDBI"."PWREQUESTS_IPK" ON "TOAKDBI"."PWREQUESTS" ("PWREQ_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX" ;
--------------------------------------------------------
--  DDL for Index DBI_TEAMS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "TOAKDBI"."DBI_TEAMS_PK" ON "TOAKDBI"."DBI_TEAMS" ("TEAM_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA" ;
--------------------------------------------------------
--  DDL for Index PWGRANTS_1IX
--------------------------------------------------------

  CREATE INDEX "TOAKDBI"."PWGRANTS_1IX" ON "TOAKDBI"."PWGRANTS" ("PWR_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX" ;
--------------------------------------------------------
--  DDL for Index DBCHECKLOG_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "TOAKDBI"."DBCHECKLOG_PK" ON "TOAKDBI"."DBCHECKLOG" ("LOGID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA" ;
--------------------------------------------------------
--  DDL for Trigger DBI_REQUEST_DEL_TR
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "TOAKDBI"."DBI_REQUEST_DEL_TR" 
BEFORE DELETE
ON DBI_REQUEST
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW

DECLARE
req_id varchar2(6);
/******************************************************************************
   NAME:       DBI_Request_del_tr
   PURPOSE:

   REVISIONS:
   Ver        Date        Author           Description
   ---------  ----------  ---------------  ------------------------------------
   1.0        23.05.2005             1. Created this trigger.

   NOTES:

   Automatically available Auto Replace Keywords:
      Object Name:     DBI_Request_del_tr
      Sysdate:         23.05.2005
      Date and Time:   23.05.2005, 14:30:07, and 23.05.2005 14:30:07
      Username:         (set in TOAD Options, Proc Templates)
      Table Name:      DBI_REQUEST (set in the "New PL/SQL Object" dialog)
      Trigger Options:  (set in the "New PL/SQL Object" dialog)
******************************************************************************/
BEGIN
   req_id := :old.request_id;
   delete from dbi_execution where request_id=req_id;
   delete from dbi_execution_results where request_id=req_id;
   delete from dbi_execution_selects where request_id=req_id;
   delete from dbi_request_history where request_id=req_id;
   delete from dbi_template where request_id=req_id;
   delete from dbi_temp_tables where request_id=req_id;
   EXCEPTION
     WHEN OTHERS THEN
       -- Consider logging the error and then re-raise
       RAISE;
END DBI_Request_del_tr;

/
ALTER TRIGGER "TOAKDBI"."DBI_REQUEST_DEL_TR" ENABLE;
--------------------------------------------------------
--  DDL for Trigger DBI_REQUEST_TR
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "TOAKDBI"."DBI_REQUEST_TR" 
after insert or update or delete
on dbi_request for each row
begin
  IF INSERTING THEN
    INSERT INTO DBI_REQUEST_HISTORY
 (REQUEST_ID,EFFECTIVE_DATE,DBI_STATUS,
 REQUESTOR_ID,SDE_ID,ADBA_ID,
 SUB_AREA_ID,SW_VERSION,PRIORITY_ID,
 REQUEST_DATE, STATUS_DATE,DBI_TYPE,
    PROBLEM_DESC, BUSINESS_IMPACT,
    TT_ID, SERF_CR_ID, DBI_EXPIRATION_DATE,
    DBI_INSTRUCTIONS, REFERENCE_DBI,
    REJECTION_REASON, ON_HOLD_FLAG,
    APPROVED_OPERATOR, BRIEF_DESC,
    CANCELLATION_REASON, OPERATOR_ID, UPDATE_DATE, REQUEST_COMMENTS,
 DBI_Flag,start_script) 
 VALUES
     (:NEW.REQUEST_ID, SYSDATE, :NEW.DBI_STATUS,
      :NEW.REQUESTOR_ID, :NEW.SDE_ID, :NEW.ADBA_ID,
      :NEW.SUB_AREA_ID, :NEW.SW_VERSION, :NEW.PRIORITY_ID,
      :NEW.REQUEST_DATE, :NEW.STATUS_DATE, :NEW.DBI_TYPE,
      :NEW.PROBLEM_DESC, :NEW.BUSINESS_IMPACT,
      :NEW.TT_ID, :NEW.SERF_CR_ID, :NEW.DBI_EXPIRATION_DATE,
      :NEW.DBI_INSTRUCTIONS, :NEW.REFERENCE_DBI,
      :NEW.REJECTION_REASON, :NEW.ON_HOLD_FLAG,
      :NEW.APPROVED_OPERATOR, :NEW.BRIEF_DESC,
      :NEW.CANCELLATION_REASON, :NEW.OPERATOR_ID, :NEW.UPDATE_DATE, :NEW.REQUEST_COMMENTS,
   :NEW.DBI_FLAG,:NEW.START_SCRIPT);
  ELSIF UPDATING THEN
      INSERT INTO DBI_REQUEST_HISTORY
   (REQUEST_ID,EFFECTIVE_DATE,DBI_STATUS,
  REQUESTOR_ID,SDE_ID,ADBA_ID,
  SUB_AREA_ID,SW_VERSION,PRIORITY_ID,
  REQUEST_DATE, STATUS_DATE,DBI_TYPE,
     PROBLEM_DESC, BUSINESS_IMPACT,
     TT_ID, SERF_CR_ID, DBI_EXPIRATION_DATE,
     DBI_INSTRUCTIONS, REFERENCE_DBI,
     REJECTION_REASON, ON_HOLD_FLAG,
     APPROVED_OPERATOR, BRIEF_DESC,
     CANCELLATION_REASON, OPERATOR_ID, UPDATE_DATE, REQUEST_COMMENTS,
  DBI_FLAG,START_SCRIPT)  
   VALUES
       (:NEW.REQUEST_ID, SYSDATE, :NEW.DBI_STATUS,
        :NEW.REQUESTOR_ID, :NEW.SDE_ID, :NEW.ADBA_ID,
        :NEW.SUB_AREA_ID, :NEW.SW_VERSION, :NEW.PRIORITY_ID,
        :NEW.REQUEST_DATE, :NEW.STATUS_DATE, :NEW.DBI_TYPE,
        :NEW.PROBLEM_DESC, :NEW.BUSINESS_IMPACT,
        :NEW.TT_ID, :NEW.SERF_CR_ID, :NEW.DBI_EXPIRATION_DATE,
        :NEW.DBI_INSTRUCTIONS, :NEW.REFERENCE_DBI,
        :NEW.REJECTION_REASON, :NEW.ON_HOLD_FLAG,
        :NEW.APPROVED_OPERATOR, :NEW.BRIEF_DESC,
        :NEW.CANCELLATION_REASON, :NEW.OPERATOR_ID, :NEW.UPDATE_DATE, :NEW.REQUEST_COMMENTS,
     :NEW.DBI_FLAG,:NEW.START_SCRIPT);
  ELSIF DELETING THEN
    raise_application_error (-20001, 'Delete from DBI_REQUEST is not allowed');
  END IF;
end; 
/
ALTER TRIGGER "TOAKDBI"."DBI_REQUEST_TR" ENABLE;
--------------------------------------------------------
--  DDL for Trigger PWCE_CHANGE_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "TOAKDBI"."PWCE_CHANGE_TRG" 
BEFORE INSERT OR UPDATE
ON PWCERTS 
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
v_pwu_id NUMBER;
v_pwu_act char(1);
BEGIN
   :NEW.update_date := SYSDATE;
  if ((not (:NEW.PWCE_UID is null)) and  ((:NEW.PWCE_PWU_ID is null) or (:NEW.PWCE_UID != :OLD.PWCE_UID ))) then
    select pwu_id,PWU_ACTIVEIND into v_pwu_id,v_pwu_act from pwusers  where pwu_name=:NEW.PWCE_UID;
    :NEW.PWCE_PWU_ID:=v_pwu_id;
    if (not (v_pwu_act='Y')) then
      raise_application_error (-20002, :NEW.PWCE_UID ||' not active');
    end if;
  end if;

EXCEPTION
     WHEN NO_DATA_FOUND then
      raise_application_error (-20001, :NEW.PWCE_UID ||' not in PWUSER Table');
     WHEN OTHERS THEN
     raise;
       -- Consider logging the error and then re-raise
    
END; 
/
ALTER TRIGGER "TOAKDBI"."PWCE_CHANGE_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger PWCONNECTS_ALL_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "TOAKDBI"."PWCONNECTS_ALL_TRG" 
after insert on pwconnects
for each row
declare
role_id integer;
begin
	select pwr_id into role_id from pwroles where pwr_name='ALL';
	insert into pwgrants (pwr_id,pwc_id) values (role_id,:new.pwc_id);
exception
	when others then
		null;
end; 
/
ALTER TRIGGER "TOAKDBI"."PWCONNECTS_ALL_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger PWCONNECTS_CHANGE_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "TOAKDBI"."PWCONNECTS_CHANGE_TRG" 
BEFORE INSERT OR UPDATE
ON TOAKDBI.PWCONNECTS 
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
tmpVar NUMBER;
BEGIN
  tmpvar:=0;

   :NEW.update_date := SYSDATE;
   :NEW.pwc_name := upper(:new.pwc_name);
   
   if (:NEW.pwc_cat is null) then
    :NEW.pwc_cat:='DB';
   end if;    
   
   if :NEW.pwc_cat='DB' then
    :NEW.pwc_user := upper(:new.pwc_user);
   end if;
 if inserting then
    select pwconnects_seq.nextval into tmpvar from dual;
    :NEW.pwc_id:=tmpvar;
 end if;
/*
   EXCEPTION
     WHEN OTHERS THEN
       -- Consider logging the error and then re-raise
       null;
*/
END; 
/
ALTER TRIGGER "TOAKDBI"."PWCONNECTS_CHANGE_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger PWC_SYSTEM_GRP_IU_TR
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "TOAKDBI"."PWC_SYSTEM_GRP_IU_TR" 
    before insert or update on PWC_SYSTEM_GRP
    for each row
declare
    v_hash number;
begin
    select ora_hash(:new.system_uid)
      into v_hash 
      from dual;
      
    :new.update_date     := sysdate;
    :new.system_uid_hash := v_hash;
end;
/
ALTER TRIGGER "TOAKDBI"."PWC_SYSTEM_GRP_IU_TR" ENABLE;
--------------------------------------------------------
--  DDL for Trigger PWGRANTS_CHANGE_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "TOAKDBI"."PWGRANTS_CHANGE_TRG" 
BEFORE INSERT OR UPDATE
ON PWGRANTS
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW

DECLARE
tmpVar NUMBER;
c NUMBER;
e exception;
BEGIN
  tmpvar:=0;
  c:=0;

   :NEW.update_date := SYSDATE;
 if inserting then
    select pwgrants_seq.nextval into tmpvar from dual;
    :NEW.pwg_id:=tmpvar;
 end if;
 if :new.pwr_id is null then c:=c+1; end if;
 if :new.pwc_id is null then c:=c+1; end if;
 if :new.pwu_id is null then c:=c+1; end if;
 if :new.pwrg_id is null then c:=c+1; end if;
 if c != 2 then
	dbms_output.put_line('Wrong Grant');
	raise e;
 end if;

/*
   EXCEPTION
     WHEN OTHERS THEN
       -- Consider logging the error and then re-raise
       null;
*/

END;
/
ALTER TRIGGER "TOAKDBI"."PWGRANTS_CHANGE_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger PWRGROUPS_CHANGE_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "TOAKDBI"."PWRGROUPS_CHANGE_TRG" 
BEFORE INSERT OR UPDATE
ON pwgroups
REFERENCING NEW AS New OLD AS Old
FOR EACH ROW

DECLARE
tmpVar NUMBER;
BEGIN
  tmpvar:=0;

   
   :NEW.pwgroup_name := upper(:new.pwgroup_name);
 if inserting and (:NEW.pwgroup_id is null) then
    select pwgroups_seq.nextval into tmpvar from dual;
    :NEW.pwgroup_id:=tmpvar;
 end if;
/*
   EXCEPTION
     WHEN OTHERS THEN
       -- Consider logging the error and then re-raise
       null;
*/
END;
/
ALTER TRIGGER "TOAKDBI"."PWRGROUPS_CHANGE_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger PWROLES_CHANGE_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "TOAKDBI"."PWROLES_CHANGE_TRG" 
BEFORE INSERT OR UPDATE
ON pwroles
REFERENCING NEW AS New OLD AS Old
FOR EACH ROW

DECLARE
tmpVar NUMBER;
BEGIN
  tmpvar:=0;

   :NEW.update_date := SYSDATE;
   :NEW.pwr_name := upper(:new.pwr_name);
 if inserting and (:NEW.pwr_id is null) then
    select pwroles_seq.nextval into tmpvar from dual;
    :NEW.pwr_id:=tmpvar;
 end if;
/*
   EXCEPTION
     WHEN OTHERS THEN
       -- Consider logging the error and then re-raise
       null;
*/
END;
/
ALTER TRIGGER "TOAKDBI"."PWROLES_CHANGE_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger PWUSERS_CHANGE_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "TOAKDBI"."PWUSERS_CHANGE_TRG" 
BEFORE INSERT OR UPDATE
ON TOAKDBI.PWUSERS 
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
tmpVar NUMBER;
BEGIN
  tmpvar:=0;

   :NEW.update_date := SYSDATE;
   -- :NEW.pwu_name := lower(:new.pwu_name);
 if inserting then
    select pwusers_seq.nextval into tmpvar from dual;
    :NEW.pwu_id:=tmpvar;
 end if;
/*
   EXCEPTION
     WHEN OTHERS THEN
       -- Consider logging the error and then re-raise

     null;
*/
END; 
/
ALTER TRIGGER "TOAKDBI"."PWUSERS_CHANGE_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Procedure AUTH_PWCHANGE_DBCONNECT
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "TOAKDBI"."AUTH_PWCHANGE_DBCONNECT" 
(dbuser varchar2,
vorname varchar2,
nachname varchar2
) as
  
cid number;
gpcid number;
gpnv number;
gpopid number;

cursor c(duser varchar2) is select pwc_id from pwconnects where pwc_user=duser;

begin

begin
    select contact_id into cid from dbi_contacts where contact_first_name=vorname and contact_last_name=nachname;
exception
when no_data_found then
    dbms_output.put_line(vorname||' '||nachname ||' not known');
    raise no_data_found;
end;

select gen_prop_id into gpcid from general_properties where property='CONTACT_ID' and prop_value=cid;

select gen_prop_id into gpopid from general_properties where property='RIGHT' and prop_value='PWOPERATOR'; 

select GENERAL_PROPERTIES_SEQ.nextval into gpnv from dual;
insert into general_properties values(gpnv,gpopid,gpcid ,'GRANT',null);

for c1 in c(dbuser) loop
    select GENERAL_PROPERTIES_SEQ.nextval into gpnv from dual;
    insert into general_properties values(gpnv,gpnv,gpcid ,'CONNECTCHANGEBY',c1.pwc_id);
end loop;

commit;
exception
when others then
    dbms_output.put_line(sqlerrm);
    rollback;
end;

/
--------------------------------------------------------
--  DDL for Procedure AUTH_PWCHANGE_DBCONNECT_ALL
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "TOAKDBI"."AUTH_PWCHANGE_DBCONNECT_ALL" 
(dbuser varchar2,
vorname varchar2,
nachname varchar2
) as
  
cid number;
gpcid number;
gpnv number;
gpopid number;

cursor c(duser varchar2) is select pwc_id from pwconnects where pwc_user=duser;

begin

begin
    select contact_id into cid from dbi_contacts where contact_first_name=vorname and contact_last_name=nachname;
exception
when no_data_found then
    dbms_output.put_line(vorname||' '||nachname ||' not known');
    raise no_data_found;
end;
select gen_prop_id into gpcid from general_properties where property='CONTACT_ID' and prop_value=cid;
select gen_prop_id into gpopid from general_properties where property='RIGHT' and prop_value='PWOPERATOR'; 
select GENERAL_PROPERTIES_SEQ.nextval into gpnv from dual;
insert into general_properties values(gpnv,gpopid,gpcid ,'GRANT',null);
for c1 in c(dbuser) loop
    select GENERAL_PROPERTIES_SEQ.nextval into gpnv from dual;
    insert into general_properties values(gpnv,gpnv,gpcid ,'CONNECTCHANGEBY',c1.pwc_id);
end loop;
commit;
exception
when others then
    dbms_output.put_line(sqlerrm);
    rollback;
end;

/
--------------------------------------------------------
--  DDL for Procedure AUTH_PWCHANGE_TO_USER
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "TOAKDBI"."AUTH_PWCHANGE_TO_USER" 
(
uname varchar2,
dbuser varchar2,
dbname varchar2,
cat varchar2 default 'DB'
) as
  
cid number;
gpcid number;
gpnv number;
gpopid number;
conn_id number;
mycat varchar2(15);
mydb varchar2(32);
myuser varchar2(32);

begin
mycat:=upper(cat);
if (mycat='') or (mycat is null) then
  mycat:='DB';
end if;
mydb:=upper(dbname);
if mycat='DB' then
  
  myuser:=upper(dbuser);
else
  myuser:=dbuser;
end if;

--check connection
begin
    select pwc_id into conn_id from pwconnects where pwc_name=mydb 
      and pwc_user=myuser 
      and pwc_cat=mycat;
exception
when no_data_found then
    dbms_output.put_line('Connect ' ||myuser||'@'|| mydb ||'(cat='||mycat|| ') not known');
    raise_application_error(-20110,'Parameter Error');
    --raise no_data_found;
end;

--check target user
begin
    select contact_id into cid from dbi_contacts where username=uname;
exception
when no_data_found then
    dbms_output.put_line(uname ||' not known');
    raise_application_error(-20110,'Parameter error');
    --raise no_data_found;
end;

--check operator rights
select gen_prop_id into gpcid from general_properties where property='CONTACT_ID' and prop_value=cid;
select gen_prop_id into gpopid from general_properties where property='RIGHT' and prop_value='PWOPERATOR'; 
begin
    select gen_prop_id into gpnv from general_properties where parent_id=gpcid 
      and property_id=gpopid and property='GRANT' ;
exception
when no_data_found then
    dbms_output.put_line('grant PWOPERATOR to '||uname );
    select GENERAL_PROPERTIES_SEQ.nextval into gpnv from dual;
    insert into general_properties values(gpnv,gpopid,gpcid ,'GRANT',null);    
end;

--grant right
begin
    select gen_prop_id into gpnv from general_properties 
    where parent_id=gpcid 
      and prop_value=conn_id  
      and property='CONNECTCHANGEBY' ;
      dbms_output.put_line('already granted to '||uname );
      raise_application_error(-20111,'already granted to '||uname);
exception
when no_data_found then
    dbms_output.put_line('grant PWOPERATOR to '||uname );
    select GENERAL_PROPERTIES_SEQ.nextval into gpnv from dual;
    insert into general_properties values(gpnv,gpnv,gpcid ,'CONNECTCHANGEBY',conn_id);
    dbms_output.put_line('now granted to '||uname );
end;

commit;

exception
when others then
    dbms_output.put_line('Error:'||sqlerrm);
    rollback;
    raise;
  
end;

/
--------------------------------------------------------
--  DDL for Procedure COPY_DBI
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "TOAKDBI"."COPY_DBI" 
(P_DBI_IN       IN VARCHAR2,
 P_REQUESTOR_ID IN NUMBER,
 P_DBI_OUT     OUT VARCHAR2,
 P_STATUS      OUT NUMBER, -- 1-Success, 0-Failure -1 Warning
 P_MESSAGE     OUT varchar2) AS

 v_go_on_flag      VARCHAR2(1):='Y';
 v_rollback_flag   VARCHAR2(1):='N';
 v_dbi_type        DBI_REQUEST.DBI_TYPE%TYPE;
 v_dbi_status      DBI_REQUEST.DBI_STATUS%TYPE;
 v_sw_version      DBI_REQUEST.SW_VERSION%TYPE;
 v_dummy           NUMBER;
 v_stage           DBI_EXECUTION.EXECUTION_STAGE%TYPE;
 e_sqlcode         NUMBER;
 e_sqlerrm         VARCHAR2(256);
 v_message     varchar2(512);
 
BEGIN
  v_message:='';
 
  --ONLY ONE-TIME DBIs + EX, CL and CA DBIs CAN BE COPIED
  -- this assumes, the dbi given by p_dbi_in really exists!
  SELECT dbi_type, dbi_status
  INTO   v_dbi_type, v_dbi_status
  FROM   dbi_request
  WHERE  request_id = p_dbi_in;

  
  if NOT (v_dbi_status = 'EX' OR v_dbi_status = 'CL' OR v_dbi_status = 'CA') then
    v_message := '<br>Only the DBIs with Status executed successfully, cancelled or closed can be copied.';
    v_go_on_flag:='N';
  end if;
  if v_go_on_flag = 'Y' then
  --create new entries
  select DBI_REQUEST_1SQ.NEXTVAL
  into v_dummy
  from dual;
  
  if v_dummy>99999 then
     v_message := 'DBI Number to big (>99999)';
   v_go_on_flag:='N';
    end if;
  
  if v_dummy <100000 then
   p_dbi_out:='d'||lpad(v_dummy,5,0);
  end if;
  if v_dummy <10000 then
   p_dbi_out:='db'||lpad(v_dummy,4,0);
  end if;
  end if;
  
  
  if v_go_on_flag = 'Y' then
    --retrieve the actual SW version
    select SW2.sw_version
    into v_sw_version
    from dbi_sw_versions SW1, dbi_sw_versions SW2
    where SW1.market = SW2.market and SW2.current_ind='Y'
    and SW1.sw_version =
         (select sw_version from dbi_request where request_id = P_DBI_IN);
 

  INSERT INTO DBI_REQUEST
  (REQUEST_ID, DBI_STATUS, REQUESTOR_ID, SW_VERSION, PRIORITY_ID,
   REQUEST_DATE, STATUS_DATE, BRIEF_DESC, PROBLEM_DESC, BUSINESS_IMPACT,
   SERF_CR_ID, DBI_EXPIRATION_DATE, DBI_INSTRUCTIONS,
   REFERENCE_DBI, DBI_TYPE, ON_HOLD_FLAG, OPERATOR_ID, REQUEST_COMMENTS)
  SELECT
  p_dbi_out,
  'OP',                   --> DBI_STATUS - open status
  p_requestor_id,         --> REQUESTOR_ID - current requestor logged on
  v_sw_version,
  3, sysdate, sysdate,
  BRIEF_DESC, PROBLEM_DESC, BUSINESS_IMPACT,
  SERF_CR_ID, DBI_EXPIRATION_DATE, DBI_INSTRUCTIONS,
  p_dbi_in,               --> as reference DBI number
  DBI_TYPE,
  0,
  p_requestor_id,         --> OPERATOR_ID - current requestor logged on
  REQUEST_COMMENTS
  from DBI_REQUEST
  where request_id = p_dbi_in;

  if SQL%ROWCOUNT <> 1 then
    v_rollback_flag:='Y';
    v_go_on_flag:='N';
    v_message:='<br>Cannot insert into DBI_REQUEST table.';
  end if;
        
   end if;
   if v_go_on_flag='Y' then
  
  insert into DBI_EXECUTION (REQUEST_ID, EXECUTION_STAGE, DB_INSTANCE, EXECUTION_ID,
                      DB_USER, OPERATOR_ID, EXECUTION_DATE, RUN_TIME_MINUTES, EXECUTION_COMMENTS) SELECT
  p_dbi_out,
  decode(test_instance,null,'Prod','Test'), --> Producing exec. stage based on the instance
  nvl(test_instance,prod_instance),         --> Producing proper instance - testable or not
  0,                                        --> 0 for the ready to test status
  db_user, p_requestor_id, sysdate, null, execution_comments
  from DBI_EXECUTION DE,
       DBI_INSTANCES DI
  where de.DB_INSTANCE = di.PROD_INSTANCE
  and   request_id = p_dbi_in
  and   execution_stage = 'Prod'
  and   execution_id >0;

  if SQL%ROWCOUNT < 1 then
    --v_rollback_flag:='Y';
    v_go_on_flag:='N';
    v_message:='<br>No valid production entry in DBI_EXECUTION table, need reparsing.';
  end if;
     
  end if;
  
  if v_go_on_flag='Y' then
  insert into DBI_EXECUTION_RESULTS (REQUEST_ID, EXECUTION_STAGE, DB_INSTANCE, EXECUTION_ID,
                                     TABLE_NAME, SQL_ACTION, EXP_ROWS, ACT_ROWS, ROW_ID, DB_USER,
         OPERATOR_ID) 
  SELECT
  p_dbi_out,
  decode(test_instance,null,'Test','Test'),
  nvl(test_instance,prod_instance),
  0, table_name,
  sql_action, null, null, nvl(abs(row_id),1), de.db_user,p_requestor_id
  from DBI_EXECUTION_RESULTS DR,
       DBI_INSTANCES DI,
    DBI_EXECUTION DE
  where de.DB_INSTANCE = di.PROD_INSTANCE
  and   de.request_id = p_dbi_in
  and   de.execution_stage = 'Prod'
  and   de.execution_id >0
  and   dr.REQUEST_ID=de.request_id
  and   dr.DB_INSTANCE=de.DB_INSTANCE
  and   dr.EXECUTION_STAGE=de.EXECUTION_STAGE
  and   dr.EXECUTION_ID=de.EXECUTION_ID;

  if SQL%ROWCOUNT < 1 then
    --v_rollback_flag:='Y';
    v_go_on_flag:='N';
       v_message:=v_message ||'<br>No Insert into DBI_EXECUTION_RESULTS table, need reparsing';
     end if;
   end if;
   
-- ----------------------------------------------------------------------------
   if v_go_on_flag='Y' then
  insert into DBI_EXECUTION_SELECTS (REQUEST_ID, TABLE_NAME)
  SELECT
    p_dbi_out,
    TABLE_NAME
  from DBI_EXECUTION_SELECTS
  where request_id = p_dbi_in;

  if SQL%ROWCOUNT < 1 then
       --v_rollback_flag:='Y';
       v_message:=v_message ||'<br>No Insert into DBI_EXECUTION_SELECTS table, need reparsing';
     end if;
-- --------------------
  insert into DBI_TEMP_TABLES (REQUEST_ID, DB_INSTANCE, TEMP_TABLE_NAME, DB_USER, TEMP_TYPE,
                               TEMP_SQL, DROP_DATE, OPERATOR_ID, UPDATE_DATE, TEMP_TABLE_STATUS)
  SELECT
    p_dbi_out,
    DB_INSTANCE,
    TEMP_TABLE_NAME,
    DB_USER,
    TEMP_TYPE,
    TEMP_SQL,
    sysdate+30, -- generate a new "default" drop date
    p_requestor_id,
    sysdate,
    TEMP_TABLE_STATUS
  from DBI_TEMP_TABLES
  where request_id = p_dbi_in;

  if SQL%ROWCOUNT < 1 then
       --v_rollback_flag:='Y';
       v_message:=v_message ||'<br>No Insert into DBI_TEMP_TABLES table, need reparsing';
     end if;
-- --------------------
   if v_dbi_type = 'T' then
  insert into DBI_TEMPLATE (REQUEST_ID, TABLE_NAME, POSITION_ID, ALIAS_NAME, CREATION_DATE,
                            OPERATOR_ID, UPDATE_DATE, TEMP_TABLE_DRIVEN, FORM_DIRTY)
  SELECT
    p_dbi_out,
    TABLE_NAME,
    POSITION_ID,
    ALIAS_NAME,
    sysdate,
    p_requestor_id,
    null,
    TEMP_TABLE_DRIVEN,
    FORM_DIRTY
  from DBI_TEMPLATE
  where request_id = p_dbi_in;

  if SQL%ROWCOUNT < 1 then
       --v_rollback_flag:='Y';
       v_message:=v_message ||'<br>No Insert into DBI_TEMPLATE table, need reparsing';
     end if;
   end if;
-- --------------------
  insert into DA_CRONTAB (ID, SYS_CREATION_DATE, OPERATOR_ID, SYS_UPDATE_DATE, SCHEDULED_MONTH,
                          SCHEDULED_DATE, SCHEDULED_WEEKDAY, SCHEDULED_HOUR, SCHEDULED_MINUTE,
                          SCHEDULED_STATUS, LINK_ID, KEY1, KEY2, KEY3, KEY4, KEY5, KEY6, KEY7,
                          KEY8, KEY9, KEY10, SCHEDULE_COMMENTS, ON_HOLD)
  SELECT
    DBI_CONTACTS_1SQ.nextval,
    sysdate,
    p_requestor_id,
    null,
    SCHEDULED_MONTH,
    SCHEDULED_DATE,
    SCHEDULED_WEEKDAY,
    SCHEDULED_HOUR,
    SCHEDULED_MINUTE,
    SCHEDULED_STATUS,
    LINK_ID,
    p_dbi_out,
    KEY2,
    KEY3,
    KEY4,
    KEY5,
    KEY6,
    KEY7,
    KEY8,
    KEY9,
    KEY10,
    SCHEDULE_COMMENTS,
    'Y'
  from DA_CRONTAB
  where key1 = p_dbi_in;

  if SQL%ROWCOUNT < 1 then
       --v_rollback_flag:='Y';
       v_message:=v_message ||'<br>No Insert into DA_CRONTAB table, need reschedule';
     end if;
-- ----------------------------------------------------------------------------


--dbms_output.put_line ('After DBI_EXR'||v_rollback_flag);
-- BEGIN
--   select 1 into v_dummy
--   from dbi_temp_tables
--   where request_id = p_dbi_in
--   and rownum = 1;
--   p_message := p_message||' Please fill the entries for temporary tables manually';
-- EXCEPTION
--          when no_data_found then null;
-- END;

    if v_rollback_flag = 'Y' then
      rollback;
      v_message:= v_message ||' Transaction rolled back.';
      p_status:=0;
    else
      commit;
      p_status:=1;
    end if;
  else --v_goon_flag=N since the input conditions were not met.
    if p_dbi_out='' then
       p_dbi_out:='dXXXXX';
 end if;
    if v_rollback_flag='Y' then
    p_status:=0;
    rollback;
  else
    p_status:=2;
   v_message := v_message || '<br>Only the DBIs that were at least once executed successfully in production can be fully copied.';
   
   commit;
    end if;
    p_message:=v_message;
  end if;
EXCEPTION
  when others then
    e_sqlcode := SQLCODE;
    e_sqlerrm := SQLERRM;
    p_dbi_out := 'dXXXXX';
    p_status:=0;
    v_message:= 'Failure with '||to_char(e_sqlcode)||' '||e_sqlerrm;
 p_message:=v_message;
    rollback;
END;

/
--------------------------------------------------------
--  DDL for Procedure CREATE_TEAM_PWGROUP
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "TOAKDBI"."CREATE_TEAM_PWGROUP" (teamuser varchar2) as
group_id number;
db varchar2(15);
dbuser varchar2(15);
cursor c(name varchar2) is select * from pwconnects where pwc_user=name for update of pwc_group,update_date,pwc_change_typ;

begin
dbuser:=teamuser;
select pwgroups_seq.nextval into group_id from dual;
insert into pwgroups (pwgroup_id,pwgroup_name,pwgroup_desc) values (group_id,dbuser ||'_ALL','All '||dbuser||'-User');
for c1 in c(dbuser) loop
    if  c1.pwc_group is null then
        update pwconnects set pwc_group=group_id, pwc_change_typ='Y',update_date=sysdate where current of c;
    else
        
        dbms_output.put_line(dbuser || '@' ||c1.pwc_name|| 'allready assigned to group '||c1.pwc_group);
    end if;
end loop;
commit;
exception
when others then
    dbms_output.put_line(sqlerrm);
    rollback;
end;

/
--------------------------------------------------------
--  DDL for Procedure PRINT_LOG
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "TOAKDBI"."PRINT_LOG" (id integer) as

bf bfile;
text raw(1000);
tsize binary_integer:=1000;
lsize binary_integer;
position binary_integer;
gsize binary_integer:=1000;
begin
select bfileloc into bf from dbi_logs_text where log_id=id;
position:=1;
dbms_lob.open(bf);
lsize:=dbms_lob.GETLENGTH(bf);
loop
        exit when position>lsize;
        exit when gsize<tsize;
        dbms_lob.read(bf,gsize,position,text);
        position:=position+gsize;
        dbms_output.put_line(utl_raw.cast_to_varchar2(text));
end loop;
dbms_lob.close(bf);
exception
when no_data_found then
    dbms_output.put_line('No Bfile found for Logid'||id);
end;

/
--------------------------------------------------------
--  DDL for Procedure PRINT_SQL
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "TOAKDBI"."PRINT_SQL" (id integer) as
--declare
--id integer:=15565;
bf bfile;
text raw(1000);
tsize binary_integer:=1000;
lsize binary_integer;
position binary_integer;
gsize binary_integer:=1000;

begin
select bfileloc into bf from dbi_scripts_text where script_id=id;
position:=1;
dbms_lob.open(bf);
lsize:=dbms_lob.GETLENGTH(bf);
loop
        exit when position>lsize;
        exit when gsize<tsize;
        dbms_lob.read(bf,gsize,position,text);
        position:=position+gsize;
        dbms_output.put_line(utl_raw.cast_to_varchar2(text));
end loop;
dbms_lob.close(bf);
exception
when no_data_found then
    dbms_output.put_line('No Bfile found for script id'||id);
end;

/
--------------------------------------------------------
--  DDL for Procedure REJECT_DBIS
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "TOAKDBI"."REJECT_DBIS" as
cursor c is select request_id,dbi_status from dbi_request r
    where dbi_status in ('AP','EX','SA') and not exists
        (select request_id from dbi_mig_exception e where e.request_id=r.request_id)
    order by request_id
    for update;

dbi dbi_request.request_id%type;
status dbi_request.dbi_status%type;

begin

for r in c loop
    dbi:=r.request_id;
    status:=r.dbi_status;
    dbms_output.put_line(dbi||':'||status);

    update dbi_request set
        dbi_status='RJ',
        rejection_reason='ZZ',
        request_comments='Rejected due Migration' ,
	operator_id=1,
        update_date=sysdate
    where current of c;

end loop;
end;

/
--------------------------------------------------------
--  DDL for Procedure SET_TS
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "TOAKDBI"."SET_TS" (v_dbi varchar2) as
v_prod dbi_execution.DB_INSTANCE%type;
v_c number;
begin
--get prod instance
select count(distinct db_instance) into v_c from dbi_execution where request_id=v_dbi and execution_stage='Test';
if v_c=0 then
   dbms_output.put_line ('DBI '|| v_dbi ||' unknown or without needed Test record');
elsif v_c>1 then
	 dbms_output.put_line ('More then one instance: Pls delete records in dbi_execution and dbi_execution_results first');
else
	select db_instance into v_prod from dbi_execution where request_id=v_dbi and execution_stage='Prod';
	
--update test records actrows and ex_id
		 update dbi_execution_results set exp_rows=decode(nvl(exp_rows,0),0,1,exp_rows) where request_id=v_dbi and execution_stage='Test';
		 update dbi_execution_results set execution_id=1, act_rows=exp_rows where request_id=v_dbi and execution_stage='Test';
--create new prod records
		 insert into dbi_execution_results (select request_id,'Prod',v_prod,0,table_name,sql_action,act_rows,null,row_id,db_user,operator_id,sysdate 
		 from dbi_execution_results where request_id=v_dbi and execution_stage='Test');
--finally update status
		  update dbi_request set dbi_status='TS' where request_id=v_dbi;
		  commit;
end if;
exception
when NO_DATA_FOUND then
	 dbms_output.put_line ('No production record in dbi_execution');
when others then
	 dbms_output.put_line('Failure with '||to_char(SQLCODE)||' '||SQLERRM);
end;

/
--------------------------------------------------------
--  DDL for Package PASSCRYPT
--------------------------------------------------------

  CREATE OR REPLACE PACKAGE "TOAKDBI"."PASSCRYPT" AS
  FUNCTION encrypt(password IN varchar2) RETURN varchar2;
  FUNCTION decrypt(password IN varchar2) RETURN varchar2;
END;

/

  GRANT EXECUTE ON "TOAKDBI"."PASSCRYPT" TO "ADBM";
--------------------------------------------------------
--  DDL for Package PWSERVICE
--------------------------------------------------------

  CREATE OR REPLACE PACKAGE "TOAKDBI"."PWSERVICE" AS
/******************************************************************************
   NAME:       pwservice_pkg
   PURPOSE:

   REVISIONS:
   Ver        Date        Author           Description
   ---------  ----------  ---------------  ------------------------------------
   2.0        21.09.2006             1. Created this package.
   2.1        21.11.2009             1. change cats.
******************************************************************************/
--type conn_rec is record (system_name varchar2(100),system_user varchar2(100),system_pw varchar2(1000),write_ind char(1));
type conn_cur is ref cursor;



  --FUNCTION MyFunction(Param1 IN NUMBER) RETURN NUMBER;
  PROCEDURE pws_user(uname IN varchar2,email IN varchar2:=null,team_role in varchar2:=null,contact_id IN number:=null);
  PROCEDURE grant_role_to_user(role_name in varchar2,uname in varchar2:=null,muser_id in number:=null);
  PROCEDURE grant_dbconnect_to_user(uname varchar2,dbinstance in varchar2,dbuser in varchar2,cat in varchar2);
  PROCEDURE grant_dbconnect_to_role(role_name varchar2,dbinstance in varchar2,dbuser in varchar2,cat in varchar2);
  PROCEDURE grant_role_to_role(role_getting_grant in varchar2,role_to_grant in varchar2);
  PROCEDURE revoke_role_from_user(role_name in varchar2,uname in varchar2:=null,muser_id in number:=null);
  PROCEDURE revoke_dbconnect_from_user(uname varchar2,dbinstance in varchar2,dbuser in varchar2,cat in varchar2);
  PROCEDURE revoke_dbconnect_from_role(role_name varchar2,dbinstance in varchar2,dbuser in varchar2,cat in varchar2);
  PROCEDURE revoke_role_from_role(role_having_grant in varchar2,role_to_revoke in varchar2);
  Function get_connects(uname varchar2) return conn_cur;
  Function get_connects_by_user(uname varchar2) return conn_cur;
  Function get_connects_by_role(rname varchar2) return conn_cur;

END pwservice;

/
--------------------------------------------------------
--  DDL for Package Body PASSCRYPT
--------------------------------------------------------

  CREATE OR REPLACE PACKAGE BODY "TOAKDBI"."PASSCRYPT" AS

  FUNCTION encrypt(password IN varchar2) RETURN varchar2 IS
    l_data  varchar2(1000);
    dbname varchar2(30);
  BEGIN
    l_data := rpad( password, (trunc(length(password)/8)+1)*8, chr(0) );
    SELECT sys_context('USERENV', 'DB_NAME') into dbname FROM DUAL;
    dbms_obfuscation_toolkit.DESEncrypt(input_string=>l_data, key_string=>'DBIWebKey'||dbname, encrypted_string=>l_data);

    return rawtohex(UTL_RAW.CAST_TO_RAW(l_data));
  END;

  FUNCTION decrypt(password IN varchar2) RETURN varchar2 IS
    l_data  varchar2(1000);
    dbname varchar2(30);
  BEGIN
    l_data := utl_raw.cast_to_varchar2(hextoraw(password));
    SELECT sys_context('USERENV', 'DB_NAME') into dbname FROM DUAL;
	dbms_obfuscation_toolkit.DESDecrypt(input_string=>l_data, key_string=>'DBIWebKey'||dbname, decrypted_string=>l_data);

    l_data := rtrim( l_data, chr(0) );
    return l_data;
  END;
END;

/

  GRANT EXECUTE ON "TOAKDBI"."PASSCRYPT" TO "ADBM";
--------------------------------------------------------
--  DDL for Package Body PWSERVICE
--------------------------------------------------------

  CREATE OR REPLACE PACKAGE BODY "TOAKDBI"."PWSERVICE" is
/******************************************************************************
   NAME:       pwservice
   PURPOSE:

   REVISIONS:
   Ver        Date        Author           Description
   ---------  ----------  ---------------  ------------------------------------
   1.0        14.09.2006             1. Created this package body.
   2.1        21.11.2009             1. change cats.
******************************************************************************/

  PROCEDURE pws_user(uname IN varchar2,email IN varchar2:=null,team_role in varchar2:=null,contact_id IN number:=null) IS
	user_id number;
	mcontact_id number;
	genprop_id number;
	muname varchar2(50);
	memail varchar2(100);
  BEGIN
  	muname:=uname;
	mcontact_id:=contact_id;
	memail:=lower(email);
	
	begin
   	 select pwu_id into user_id from pwusers where pwu_name=muname;
	   exception
	   when NO_DATA_FOUND then
		 user_id:=null;
	end;
	if (mcontact_id is null) then
	--no contactid given, try to find
	   begin
   		 select max(contact_id) into mcontact_id from dbi_contacts where active_ind='Y' and (username=muname or contact_email=memail);
	   exception
	   when NO_DATA_FOUND then
		 mcontact_id:=null;
	   end;
	end if;

	if (email is null and not (mcontact_id is null)) then
	-- try to find email, if not given
	   begin
		   select lower(contact_email) into memail from dbi_contacts where contact_id=mcontact_id;
		exception
		when no_data_found then
		 	memail:=null;
		end;
	end if;
	--create pwusers entry or update
	if (user_id is null) then
			 insert into pwusers(pwu_name,pwu_email,pwu_contactid) values (muname,memail,mcontact_id) returning pwu_id into user_id;
	else
		 	update pwusers set pwu_contactid=mcontact_id, pwu_email=memail,update_date=sysdate where pwu_id=user_id;
	
	end if;
	--update general property entries
	if not (mcontact_id is null) then
	   --get gen_prop_id for contact_id or insert
	   	begin
				select gen_prop_id into genprop_id from general_properties where property='CONTACT_ID' and prop_value=to_char(mcontact_id);
		exception
	   	when NO_DATA_FOUND then
					 insert into GENERAL_PROPERTIES (GEN_PROP_ID, PROPERTY_ID, PARENT_ID, PROPERTY, PROP_VALUE) VALUES (general_properties_seq.nextval, general_properties_seq.CURRVAL, 1, 'CONTACT_ID', mcontact_id) returning gen_prop_id into genprop_id;
		end;
		--try to set pwuser id in general_property
		update general_properties set prop_value=user_id where parent_id=genprop_id and  property='PWSERVICE_ID' and prop_value=to_char(user_id);
		if SQL%ROWCOUNT=0 then
			   	   insert into GENERAL_PROPERTIES (GEN_PROP_ID, PROPERTY_ID, PARENT_ID, PROPERTY, PROP_VALUE) VALUES (general_properties_seq.nextval, general_properties_seq.CURRVAL, genprop_id, 'PWSERVICE_ID', user_id);
		end if;
	end if;
	if not (team_role is null) then
	--assign teamrole, if given
	   grant_role_to_user(team_role,muname,user_id);
	end if;
	exception
		when others then
		raise_application_error(-20104,'Error adding User:'||sqlerrm);
  END;


  PROCEDURE grant_role_to_user(role_name in varchar2,uname in varchar2:=null,muser_id in number:=null) IS
    role_id NUMBER;
	t_id number;
	muname varchar2(50);
	mrole_name varchar2(200);
	user_id number;

  BEGIN
    mrole_name:=upper(role_name);
	muname:=uname;
	user_id:=muser_id;

    select pwr_id into role_id from pwroles where pwr_name=mrole_name;
	if (user_id is null) then
		select pwu_id into user_id from pwusers where pwu_name=muname;
	end if;
	begin
		 select pwg_id into t_id from pwgrants where pwu_id=user_id and pwr_id=role_id;
	exception
		when NO_DATA_FOUND then
			 t_id:=null;
	end;
	if t_id is null then
	    insert into pwgrants(pwr_id,pwu_id) values (role_id,user_id);
	end if;
	exception
		when NO_DATA_FOUND then
		raise_application_error(-20100,'Role or user unknown');
  END;

  PROCEDURE grant_dbconnect_to_user(uname varchar2,dbinstance in varchar2,dbuser in varchar2,cat in varchar2) IS
    user_id NUMBER;
	connect_id number;
	t_id number;
	muname varchar2(50);
	mdbuser varchar2(50);
	mdbinstance varchar2(200);
	mcat varchar2(3);

  BEGIN
  	
	mdbinstance:=upper(dbinstance);
	muname:=uname;
	if cat is null then
	   mcat:='DB';
	end if;
  mcat:=upper(cat);
  if cat='DB' then
     mdbuser:=upper(dbuser);
  else
        mdbuser:=dbuser;
	end if;
    select pwc_id into connect_id from pwconnects where pwc_name=mdbinstance and pwc_user=mdbuser and pwc_cat=mcat;
	select pwu_id into user_id from pwusers where pwu_name=muname;
	begin
		 select pwg_id into t_id from pwgrants where pwc_id=connect_id and pwu_id=user_id;
	exception
		when NO_DATA_FOUND then
			 t_id:=null;
	end;
	if t_id is null then
	   insert into pwgrants(pwc_id,pwu_id) values (connect_id,user_id);
	end if;
	exception
		when NO_DATA_FOUND then
		raise_application_error(-20101,'Connect or User unknown');

  END;

  PROCEDURE grant_dbconnect_to_role(role_name varchar2,dbinstance in varchar2,dbuser in varchar2,cat in varchar2) IS
    role_id NUMBER;
	connect_id number;
	t_id number;
	mrole_name varchar2(200);
	mdbuser varchar2(200);
	mdbinstance varchar2(200);
		mcat varchar2(3);

  BEGIN
  	
	mdbinstance:=upper(dbinstance);
	mrole_name:=upper(role_name);
		if cat is null then
	   mcat:='DB';
	else
		mcat:=upper(cat);
	end if;
    if mcat='DB' then
        mdbuser:=upper(dbuser);
    else
        mdbuser:=dbuser;
    end if;

    select pwc_id into connect_id from pwconnects where pwc_name=mdbinstance and pwc_user=mdbuser and pwc_cat=mcat;
	select pwr_id into role_id from pwroles where pwr_name=mrole_name;
	begin
		 select pwg_id into t_id from pwgrants where pwc_id=connect_id and pwr_id=role_id;
	exception
		when NO_DATA_FOUND then
			 t_id:=null;
	end;
	if t_id is null then
       insert into pwgrants(pwc_id,pwr_id) values (connect_id,role_id);
	end if;
	exception
		when NO_DATA_FOUND then
		raise_application_error(-20103,'Connect or Role unknown');
  END;

  PROCEDURE grant_role_to_role(role_getting_grant in varchar2,role_to_grant in varchar2) IS
    role_id NUMBER;
	grant_id number;
	t_id number;
	mrole_name varchar2(200);
	mrole_to_grant varchar2(200);
  BEGIN
  	mrole_name:=upper(role_getting_grant);
	mrole_to_grant:=upper(role_to_grant);

    select pwr_id into role_id from pwroles where pwr_name=mrole_name;
    select pwr_id into grant_id from pwroles where pwr_name=mrole_to_grant;
	begin
		 select pwg_id into t_id from pwgrants where pwrg_id=grant_id and pwr_id=role_id;
	exception
		when NO_DATA_FOUND then
			 t_id:=null;
	end;
	if t_id is null then
	   insert into pwgrants(pwr_id,pwrg_id) values (role_id,grant_id);
    end if;
	exception
		when NO_DATA_FOUND then
		raise_application_error(-20102,'Role unknown');
  END;

 PROCEDURE revoke_role_from_user(role_name in varchar2,uname in varchar2:=null,muser_id in number:=null) IS
    role_id NUMBER;
	t_id number;
	muname varchar2(50);
	mrole_name varchar2(200);
	user_id number;

  BEGIN
    mrole_name:=upper(role_name);
	muname:=uname;
	user_id:=muser_id;

    select pwr_id into role_id from pwroles where pwr_name=mrole_name;
	if (user_id is null) then
		select pwu_id into user_id from pwusers where pwu_name=muname;
	end if;
	begin
		 select pwg_id into t_id from pwgrants where pwu_id=user_id and pwr_id=role_id;
	exception
		when NO_DATA_FOUND then
			 t_id:=null;
	end;
	if not t_id is null then
	    delete from pwgrants where pwg_id=t_id;
	end if;
	exception
		when NO_DATA_FOUND then
		raise_application_error(-20100,'Role or user unknown');
  END;

  PROCEDURE revoke_dbconnect_from_user(uname varchar2,dbinstance in varchar2,dbuser in varchar2,cat in varchar2) IS
    user_id NUMBER;
	connect_id number;
	t_id number;
	muname varchar2(50);
	mdbuser varchar2(50);
	mdbinstance varchar2(200);
	mcat varchar2(3);

  BEGIN
  	
	mdbinstance:=upper(dbinstance);
	muname:=uname;
	if cat is null then
	   mcat:='DB';
	else
		mcat:=upper(cat);
	end if;
    if mcat='DB' then
        mdbuser:=upper(dbuser);
    else
        mdbuser:=dbuser;
    end if;
    select pwc_id into connect_id from pwconnects where pwc_name=mdbinstance and pwc_user=mdbuser and pwc_cat=mcat;
	select pwu_id into user_id from pwusers where pwu_name=muname;
	begin
		 select pwg_id into t_id from pwgrants where pwc_id=connect_id and pwu_id=user_id;
	exception
		when NO_DATA_FOUND then
			 t_id:=null;
	end;
	if not t_id is null then
	   delete from pwgrants where pwg_id=t_id;
	end if;
	exception
		when NO_DATA_FOUND then
		raise_application_error(-20101,'Connect or User unknown');

  END;

  PROCEDURE revoke_dbconnect_from_role(role_name varchar2,dbinstance in varchar2,dbuser in varchar2,cat in varchar2) IS
    role_id NUMBER;
	connect_id number;
	t_id number;
	mrole_name varchar2(200);
	mdbuser varchar2(200);
	mdbinstance varchar2(200);
		mcat varchar2(3);

  BEGIN
  	
	mdbinstance:=upper(dbinstance);
	mrole_name:=upper(role_name);
	if cat is null then
	   mcat:='DB';
	else
		mcat:=upper(cat);
	end if;
    if mcat='DB' then
        mdbuser:=upper(dbuser);
    else
        mdbuser:=dbuser;
    end if;

    select pwc_id into connect_id from pwconnects where pwc_name=mdbinstance and pwc_user=mdbuser and pwc_cat=mcat;
	select pwr_id into role_id from pwroles where pwr_name=mrole_name;
	begin
		 select pwg_id into t_id from pwgrants where pwc_id=connect_id and pwr_id=role_id;
	exception
		when NO_DATA_FOUND then
			 t_id:=null;
	end;
	if not t_id is null then
        delete from pwgrants where pwg_id=t_id;
       
	end if;
	exception
		when NO_DATA_FOUND then
		raise_application_error(-20103,'Connect or Role unknown');
  END;

  PROCEDURE revoke_role_from_role(role_having_grant in varchar2,role_to_revoke in varchar2) IS
    role_id NUMBER;
	grant_id number;
	t_id number;
	mrole_name varchar2(200);
	mrole_to_grant varchar2(200);
  BEGIN
  	mrole_name:=upper(role_having_grant);
	mrole_to_grant:=upper(role_to_revoke);

    select pwr_id into role_id from pwroles where pwr_name=mrole_name;
    select pwr_id into grant_id from pwroles where pwr_name=mrole_to_grant;
	begin
		 select pwg_id into t_id from pwgrants where pwrg_id=grant_id and pwr_id=role_id;
	exception
		when NO_DATA_FOUND then
			 t_id:=null;
	end;
	if not t_id is null then
        delete from pwgrants where pwg_id=t_id;
	  
    end if;
	exception
		when NO_DATA_FOUND then
		raise_application_error(-20102,'Role unknown');
  END;

 
 Function get_connects_by_user(uname varchar2) return conn_cur
 is
 c conn_cur;
 mpwu_id number;
 muname varchar2(100);
 begin
  muname:=uname;
  select pwu_id into mpwu_id from pwusers where pwu_name=muname and pwu_activeind='Y';
  dbms_output.put_line('Userid:'||mpwu_id);
  open c for
 
  	    select pwc_id,pwc_name,pwc_user,pwc_pw,pwc_cat,pwc_write from pwconnects where pwc_id in 
 		(select distinct pwc_id from pwgrants where pwr_id in
		--(select distinct (pwr_id) from pwgrants connect by prior pwrg_id=pwr_id start with pwrg_id in
		(select distinct (pwr_id) from pwgrants connect by prior pwrg_id=pwr_id start with pwr_id in
		(select pwr_id from pwgrants where pwu_id=mpwu_id)
		--)
		)
		union all
		select pwc_id from pwgrants where pwu_id=mpwu_id
 		)
		and pwc_active_ind != 'N'
		and not (pwc_id is null);

/*
SELECT pwc_id,pwc_name,pwc_user,pwc_pw,pwc_cat,pwc_write
  FROM pwconnects 
 WHERE (pwc_id IN (SELECT DISTINCT pwc_id 
                     FROM pwgrants PWGRANTS1, 
                          (SELECT DISTINCT PWGRANTS4.pwr_id COL1 
                             FROM pwgrants PWGRANTS4 
                            WHERE PWGRANTS4.pwu_id = mpwu_id) TEMP0 
        WHERE pwr_id IN (SELECT DISTINCT pwr_id 
                           FROM pwgrants PWGRANTS2 
                         CONNECT BY PRIOR pwrg_id = pwr_id 
                         START WITH pwrg_id IN (SELECT DISTINCT PWGRANTS3.pwr_id 
                                                  FROM pwgrants PWGRANTS3 
                                                CONNECT BY PRIOR PWGRANTS3.pwrg_id = PWGRANTS3.pwr_id 
                                                START WITH PWGRANTS3.pwr_id = TEMP0.COL1))) 
         OR pwc_id IN (SELECT pwc_id 
                         FROM pwgrants PWGRANTS5 
                        WHERE pwu_id = mpwu_id)) 
   AND pwc_active_ind != 'N' 
   AND pwc_id IS NOT NULL;
*/

  return c;

  exception
  when no_data_found then
  	   raise_application_error(-20105,'User unknown');
  end get_connects_by_user;

  Function get_connects_by_role(rname varchar2) return conn_cur
 is
 c conn_cur;
 mpwr_id number;
 mrole varchar2(100);
 begin
  mrole:=upper(rname);
  select pwr_id into mpwr_id from pwroles where pwr_name=mrole;
  dbms_output.put_line('Roleid:'||mpwr_id);
  open c for
   
    	    select pwc_id,pwc_name,pwc_user,pwc_pw,pwc_cat,pwc_write from pwconnects where pwc_id in 
 		(select distinct pwc_id from pwgrants where pwr_id in
		--(select distinct (pwr_id) from pwgrants connect by prior pwrg_id=pwr_id start with pwrg_id in
		(select distinct (pwr_id) from pwgrants connect by prior pwrg_id=pwr_id start with pwr_id=mpwr_id)
		--)
 		)
		and pwc_active_ind != 'N'
		and not (pwc_id is null);
	
--	SELECT /*+ INDEX_JOIN(PWCONNECTS) */ pwc_id,
/*       pwc_name,
       pwc_user,
       pwc_pw,
       pwc_cat,
       pwc_write
  FROM pwconnects
 WHERE pwc_id IN (SELECT DISTINCT pwc_id
                    FROM pwgrants PWGRANTS1
                   WHERE pwr_id IN (SELECT DISTINCT pwr_id
                                      FROM pwgrants PWGRANTS2
                                    CONNECT BY PRIOR pwrg_id = pwr_id
                                    START WITH EXISTS (SELECT 'X'
                                                         FROM pwgrants PWGRANTS3
                                                        WHERE pwr_id = PWGRANTS2.pwrg_id
                                                       CONNECT BY PRIOR pwrg_id = pwr_id
                                                       START WITH pwr_id = mpwr_id)
                                     GROUP BY pwr_id))
   AND pwc_active_ind != 'N'
   AND pwc_id IS NOT NULL;
 */  
  return c;

  exception
  when no_data_found then
  	   raise_application_error(-20102,'Role unknown');
  end get_connects_by_role;
  
  Function get_connects(uname varchar2) return conn_cur
 is
 begin
 	  return get_connects_by_user(uname);
 end get_connects;
 
END pwservice;

/
--------------------------------------------------------
--  DDL for Function CHECK_DBILOG
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "TOAKDBI"."CHECK_DBILOG" 
(

  logid IN NUMBER
, dir varchar2 default ''
) RETURN NUMBER AS

log_exist boolean;
loglen number;
lobh BFILE;
lobh2 BFILE;
pfad varchar2(255);
filename varchar2(255);
dirname varchar2(32);


begin
dirname:=dir;
if dir='' then
	dirname:='DBITOOL_DIR';
end if;
 begin
  select path,name into pfad,filename from dbi_logs where log_id=logid;
  lobh:=bfilename(dirname,pfad || '/' ||filename);
  log_exist:=dbms_lob.fileexists(lobh)=1;
  if log_exist then
    loglen:=dbms_lob.getlength(lobh);
    begin
    select bfileloc into lobh2 from dbi_logs_text where log_id=logid;
    log_exist:=dbms_lob.fileexists(lobh2)=1;
    if not log_exist then
      update dbi_logs_text set bfileloc=lobh2 where log_id=logid;
      dbms_output.put_line('Update LOB for ' || to_char(logid));
    end if;
    exception
    when no_data_found then
     dbms_output.put_line('No DBI_LOGS_TEXT for ' || to_char(logid));
    end;
  else
    loglen:=-1;
  end if;
  exception
    when no_data_found then
     dbms_output.put_line('No DBI_LOGS Entry for ' || to_char(logid));
    end;
  dbms_output.put_line('len for ' ||to_char(logid)||'=' || to_char(loglen));
  RETURN loglen;
END CHECK_DBILOG;

/
--------------------------------------------------------
--  DDL for Function F1
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "TOAKDBI"."F1" (c1 pwservice.conn_cur) RETURN t_pwconnect PIPELINED IS
  in_rec t_role;
  out_rec t_role;
begin
  --c1:=pwservice.get_connects_by_role('KIAS ONLINE RW');
  -- Cursor c1 is now open
  -- Fetching data
  loop
    fetch c1 into in_rec;
    exit when c1%NOTFOUND;
    dbms_output.put_line(in_rec.pwc_name||';'||in_rec.pwc_user);
    out_rec.pwc_name:=in_rec.pwc_name;
    out_rec.pwc_user:=in_rec.pwc_user;
    PIPE ROW(out_rec);
  end loop;
  close c1;
  return;
end;

/
--------------------------------------------------------
--  DDL for Function GETCONTACTSTRING
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "TOAKDBI"."GETCONTACTSTRING" (v_contact_id IN number) return varchar2 IS
  v_ret varchar2(200);
begin
  select c.contact_last_name || ', '||
         c.contact_first_name|| ' ('||
		 nvl(u.tel,c.contact_phone)||')<br>'||
     nvl(u.team_group,c.contact_dept) ||
		 nvl2(u.team_name,': '||u.team_name,'')
		    into v_ret from  user_org_details u,dbi_contacts c 
        where c.contact_id=v_contact_id 
        and c.username=u.ldap_uid(+)
        and ((u.vcds_delete is null) or (u.vcds_delete>sysdate))
        and rownum=1;
  return v_ret;
end;

/
--------------------------------------------------------
--  DDL for Function GETTEAMID
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "TOAKDBI"."GETTEAMID" (v_contact_id IN number) return varchar2 IS
  v_ret varchar2(200);
begin
  	select	 u.team_id
		    into v_ret from  user_org_details u,dbi_contacts c 
        where c.contact_id=v_contact_id and c.username=u.ldap_uid;
  return v_ret;
end;

/
--------------------------------------------------------
--  DDL for Function GETTEAMNAME
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "TOAKDBI"."GETTEAMNAME" (v_contact_id IN number) return varchar2 IS
  v_ret varchar2(200);
begin
  	select	 u.team_name
		    into v_ret from  user_org_details u,dbi_contacts c 
        where c.contact_id=v_contact_id and c.username=u.ldap_uid;
  return v_ret;
end;

/
--------------------------------------------------------
--  DDL for Synonymn DA_CRONTAB
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "TOAKDBI"."DA_CRONTAB" FOR "TOAKADM"."DA_CRONTAB";
--------------------------------------------------------
--  DDL for Synonymn DA_CRONTAB_1SQ
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "TOAKDBI"."DA_CRONTAB_1SQ" FOR "TOAKADM"."DA_CRONTAB_1SQ";
--------------------------------------------------------
--  DDL for Synonymn DA_CRONTAB_LOG
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "TOAKDBI"."DA_CRONTAB_LOG" FOR "TOAKADM"."DA_CRONTAB_LOG";
--------------------------------------------------------
--  DDL for Synonymn DA_PROJECTS
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "TOAKDBI"."DA_PROJECTS" FOR "TOAKADM"."DA_PROJECTS";
--------------------------------------------------------
--  DDL for Synonymn DA_PROJECTS_1SQ
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "TOAKDBI"."DA_PROJECTS_1SQ" FOR "TOAKADM"."DA_PROJECTS_1SQ";
--------------------------------------------------------
--  DDL for Synonymn DBI_CSM_AUTOMATION
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "TOAKDBI"."DBI_CSM_AUTOMATION" FOR "ADBM"."DBI_CSM_AUTOMATION";
--------------------------------------------------------
--  DDL for Synonymn ORG_ORGANISATION
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "TOAKDBI"."ORG_ORGANISATION" FOR "CMTMNP"."AS_ORGANISATION"@"ADBM_DEPCSP";
--------------------------------------------------------
--  DDL for Synonymn ORG_STAFF
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "TOAKDBI"."ORG_STAFF" FOR "CMTMNP"."AS_STAFF"@"ADBM_DEPCSP";
--------------------------------------------------------
--  DDL for Synonymn ORG_TEAM
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "TOAKDBI"."ORG_TEAM" FOR "TICAMO"."TICAM_TEAMS"@"ADBM_DEPCSP";
--------------------------------------------------------
--  DDL for Synonymn ORG_TICAM_USER
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "TOAKDBI"."ORG_TICAM_USER" FOR "TICAMO"."TICAM_USER"@"ADBM_DEPCSP";
--------------------------------------------------------
--  DDL for Synonymn ORG_VCDS
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "TOAKDBI"."ORG_VCDS" FOR "TICAMO"."TICAM_VCDS"@"ADBM_DEPCSP";
--------------------------------------------------------
--  DDL for Synonymn SEQ_DBI_NUMBER
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "TOAKDBI"."SEQ_DBI_NUMBER" FOR "TOAKDBI"."DBI_REQUEST_1SQ";
--------------------------------------------------------
--  Constraints for Table DR$DBI_SCRIPTS_TEXT_CTX1$K
--------------------------------------------------------

  ALTER TABLE "TOAKDBI"."DR$DBI_SCRIPTS_TEXT_CTX1$K" ADD PRIMARY KEY ("TEXTKEY")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA"  ENABLE;
--------------------------------------------------------
--  Constraints for Table DBI_STATUSES
--------------------------------------------------------

  ALTER TABLE "TOAKDBI"."DBI_STATUSES" ADD CONSTRAINT "DBI_STATUSES_PK" PRIMARY KEY ("DBI_STATUS")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX"  ENABLE;
  ALTER TABLE "TOAKDBI"."DBI_STATUSES" MODIFY ("DBI_STATUS_DESC" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."DBI_STATUSES" MODIFY ("DBI_STATUS" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table SUB_MENU
--------------------------------------------------------

  ALTER TABLE "TOAKDBI"."SUB_MENU" ADD CONSTRAINT "SUB_MENU_PK" PRIMARY KEY ("SUB_MENU_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX"  ENABLE;
  ALTER TABLE "TOAKDBI"."SUB_MENU" MODIFY ("ENABLED" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."SUB_MENU" MODIFY ("URL" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."SUB_MENU" MODIFY ("SHORT_CUT" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."SUB_MENU" MODIFY ("SHORT_NAME" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."SUB_MENU" MODIFY ("MAIN_MENU_ID" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."SUB_MENU" MODIFY ("SUB_MENU_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table DBI_OPERATOR
--------------------------------------------------------

  ALTER TABLE "TOAKDBI"."DBI_OPERATOR" ADD CONSTRAINT "DBI_OPERATOR_PK" PRIMARY KEY ("DBI_OPER_SHORT")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX"  ENABLE;
  ALTER TABLE "TOAKDBI"."DBI_OPERATOR" MODIFY ("DBI_OPER_LONG" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."DBI_OPERATOR" MODIFY ("DBI_OPER_SHORT" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table PWDBLINKS
--------------------------------------------------------

  ALTER TABLE "TOAKDBI"."PWDBLINKS" ADD CONSTRAINT "PWDBLINKS_PK" PRIMARY KEY ("INSTANCE", "OWNER", "DB_LINK")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX"  ENABLE;
--------------------------------------------------------
--  Constraints for Table PWROLES
--------------------------------------------------------

  ALTER TABLE "TOAKDBI"."PWROLES" ADD CONSTRAINT "PWROLES_PK" PRIMARY KEY ("PWR_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX"  ENABLE;
--------------------------------------------------------
--  Constraints for Table DBI_CLEANUP_INSTANCES
--------------------------------------------------------

  ALTER TABLE "TOAKDBI"."DBI_CLEANUP_INSTANCES" ADD CONSTRAINT "DBI_CLEANUP_INSTANCES_PK" PRIMARY KEY ("DB_INSTANCE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA"  ENABLE;
--------------------------------------------------------
--  Constraints for Table PWGROUPS
--------------------------------------------------------

  ALTER TABLE "TOAKDBI"."PWGROUPS" ADD CONSTRAINT "PWGROUPS_PK" PRIMARY KEY ("PWGROUP_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX"  ENABLE;
  ALTER TABLE "TOAKDBI"."PWGROUPS" MODIFY ("PWGROUP_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table DBCHECKLOG
--------------------------------------------------------

  ALTER TABLE "TOAKDBI"."DBCHECKLOG" ADD CONSTRAINT "DBCHECKLOG_PK" PRIMARY KEY ("LOGID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA"  ENABLE;
--------------------------------------------------------
--  Constraints for Table USER_ORG_DETAILS
--------------------------------------------------------

  ALTER TABLE "TOAKDBI"."USER_ORG_DETAILS" ADD CONSTRAINT "USER_ORG_DETAILS_PK" PRIMARY KEY ("USER_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA"  ENABLE;
  ALTER TABLE "TOAKDBI"."USER_ORG_DETAILS" MODIFY ("TEAM_ID" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."USER_ORG_DETAILS" MODIFY ("USER_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table DBI_LOGS
--------------------------------------------------------

  ALTER TABLE "TOAKDBI"."DBI_LOGS" ADD CONSTRAINT "DBI_LOGS_PK" PRIMARY KEY ("LOG_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX"  ENABLE;
--------------------------------------------------------
--  Constraints for Table SESSIONS
--------------------------------------------------------

  ALTER TABLE "TOAKDBI"."SESSIONS" ADD CONSTRAINT "SESSIONS_PK" PRIMARY KEY ("SID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX"  ENABLE;
--------------------------------------------------------
--  Constraints for Table DR$DBI_SCRIPTS_TEXT_CTX1$N
--------------------------------------------------------

  ALTER TABLE "TOAKDBI"."DR$DBI_SCRIPTS_TEXT_CTX1$N" ADD PRIMARY KEY ("NLT_DOCID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA"  ENABLE;
  ALTER TABLE "TOAKDBI"."DR$DBI_SCRIPTS_TEXT_CTX1$N" MODIFY ("NLT_MARK" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table DBI_REQUEST_HISTORY
--------------------------------------------------------

  ALTER TABLE "TOAKDBI"."DBI_REQUEST_HISTORY" MODIFY ("DBI_TYPE" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."DBI_REQUEST_HISTORY" MODIFY ("STATUS_DATE" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."DBI_REQUEST_HISTORY" MODIFY ("REQUEST_DATE" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."DBI_REQUEST_HISTORY" MODIFY ("PRIORITY_ID" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."DBI_REQUEST_HISTORY" MODIFY ("SW_VERSION" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."DBI_REQUEST_HISTORY" MODIFY ("REQUESTOR_ID" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."DBI_REQUEST_HISTORY" MODIFY ("DBI_STATUS" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."DBI_REQUEST_HISTORY" MODIFY ("EFFECTIVE_DATE" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."DBI_REQUEST_HISTORY" MODIFY ("REQUEST_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table DBI_AVAILABLE_TABLES
--------------------------------------------------------

  ALTER TABLE "TOAKDBI"."DBI_AVAILABLE_TABLES" ADD CONSTRAINT "DBI_AVAILABLE_TABLES_PK" PRIMARY KEY ("DB_INSTANCE", "TABLE_NAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX"  ENABLE;
  ALTER TABLE "TOAKDBI"."DBI_AVAILABLE_TABLES" MODIFY ("TABLE_NAME" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."DBI_AVAILABLE_TABLES" MODIFY ("DB_INSTANCE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table DR$DBI_LOGS_TEXT_CTX1$I
--------------------------------------------------------

  ALTER TABLE "TOAKDBI"."DR$DBI_LOGS_TEXT_CTX1$I" MODIFY ("TOKEN_COUNT" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."DR$DBI_LOGS_TEXT_CTX1$I" MODIFY ("TOKEN_LAST" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."DR$DBI_LOGS_TEXT_CTX1$I" MODIFY ("TOKEN_FIRST" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."DR$DBI_LOGS_TEXT_CTX1$I" MODIFY ("TOKEN_TYPE" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."DR$DBI_LOGS_TEXT_CTX1$I" MODIFY ("TOKEN_TEXT" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table DBI_EXECUTION
--------------------------------------------------------

  ALTER TABLE "TOAKDBI"."DBI_EXECUTION" ADD CONSTRAINT "DBI_EXECUTION_PK" PRIMARY KEY ("REQUEST_ID", "EXECUTION_STAGE", "DB_INSTANCE", "EXECUTION_ID", "DB_USER")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX"  ENABLE;
  ALTER TABLE "TOAKDBI"."DBI_EXECUTION" MODIFY ("OPERATOR_ID" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."DBI_EXECUTION" MODIFY ("EXECUTION_ID" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."DBI_EXECUTION" MODIFY ("DB_INSTANCE" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."DBI_EXECUTION" MODIFY ("EXECUTION_STAGE" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."DBI_EXECUTION" MODIFY ("REQUEST_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table JOB_EXEC_DML
--------------------------------------------------------

  ALTER TABLE "TOAKDBI"."JOB_EXEC_DML" MODIFY ("TABLE_NAME" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."JOB_EXEC_DML" MODIFY ("DML_MODE" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."JOB_EXEC_DML" MODIFY ("EXECUTABLE_NAME" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table DR$DBI_LOGS_TEXT_CTX1$N
--------------------------------------------------------

  ALTER TABLE "TOAKDBI"."DR$DBI_LOGS_TEXT_CTX1$N" ADD PRIMARY KEY ("NLT_DOCID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA"  ENABLE;
  ALTER TABLE "TOAKDBI"."DR$DBI_LOGS_TEXT_CTX1$N" MODIFY ("NLT_MARK" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table DBI_SW_VERSIONS
--------------------------------------------------------

  ALTER TABLE "TOAKDBI"."DBI_SW_VERSIONS" ADD CONSTRAINT "DBI_SW_VERSIONS_PK" PRIMARY KEY ("SW_VERSION")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX"  ENABLE;
  ALTER TABLE "TOAKDBI"."DBI_SW_VERSIONS" MODIFY ("MARKET" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."DBI_SW_VERSIONS" MODIFY ("SW_VERSION" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table DR$DBI_SCRIPTS_TEXT_CTX1$R
--------------------------------------------------------

  ALTER TABLE "TOAKDBI"."DR$DBI_SCRIPTS_TEXT_CTX1$R" ADD CONSTRAINT "DRC$DBI_SCRIPTS_TEXT_CTX1$R" PRIMARY KEY ("ROW_NO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA"  ENABLE;
--------------------------------------------------------
--  Constraints for Table DBI_MV_OVERVIEW
--------------------------------------------------------

  ALTER TABLE "TOAKDBI"."DBI_MV_OVERVIEW" ADD CONSTRAINT "DBI_MV_OVERVIEW_PK" PRIMARY KEY ("REQUEST_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX"  ENABLE;
  ALTER TABLE "TOAKDBI"."DBI_MV_OVERVIEW" MODIFY ("MARKET" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."DBI_MV_OVERVIEW" MODIFY ("PRIORITY" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."DBI_MV_OVERVIEW" MODIFY ("DBI_STATUS_DESC" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."DBI_MV_OVERVIEW" MODIFY ("REQUEST_DATE" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."DBI_MV_OVERVIEW" MODIFY ("PRIORITY_ID" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."DBI_MV_OVERVIEW" MODIFY ("SW_VERSION" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."DBI_MV_OVERVIEW" MODIFY ("REQUESTOR_ID" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."DBI_MV_OVERVIEW" MODIFY ("DBI_STATUS" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."DBI_MV_OVERVIEW" MODIFY ("REQUEST_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table GENERAL_PROPERTIES
--------------------------------------------------------

  ALTER TABLE "TOAKDBI"."GENERAL_PROPERTIES" ADD CONSTRAINT "GENERAL_PROPERTIES_PK" PRIMARY KEY ("GEN_PROP_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX"  ENABLE;
  ALTER TABLE "TOAKDBI"."GENERAL_PROPERTIES" MODIFY ("PROPERTY" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."GENERAL_PROPERTIES" MODIFY ("PROPERTY_ID" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."GENERAL_PROPERTIES" MODIFY ("GEN_PROP_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table DBI_AVAILABLE_TABLES_20160927
--------------------------------------------------------

  ALTER TABLE "TOAKDBI"."DBI_AVAILABLE_TABLES_20160927" MODIFY ("TABLE_NAME" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."DBI_AVAILABLE_TABLES_20160927" MODIFY ("DB_INSTANCE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table MAIN_MENU
--------------------------------------------------------

  ALTER TABLE "TOAKDBI"."MAIN_MENU" ADD CONSTRAINT "MAIN_MENU_PK" PRIMARY KEY ("MAIN_MENU_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX"  ENABLE;
  ALTER TABLE "TOAKDBI"."MAIN_MENU" MODIFY ("ENABLED" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."MAIN_MENU" MODIFY ("MAIN_MENU_SEQ_ID" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."MAIN_MENU" MODIFY ("URL" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."MAIN_MENU" MODIFY ("SHORT_CUT" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."MAIN_MENU" MODIFY ("SHORT_NAME" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."MAIN_MENU" MODIFY ("MAIN_MENU_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table DBI_INSTANCES
--------------------------------------------------------

  ALTER TABLE "TOAKDBI"."DBI_INSTANCES" ADD CONSTRAINT "DBI_INSTANCES_1UQ" UNIQUE ("PROD_INSTANCE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX"  ENABLE;
  ALTER TABLE "TOAKDBI"."DBI_INSTANCES" ADD CONSTRAINT "DBI_INSTANCES_PK" PRIMARY KEY ("PROD_INSTANCE", "MARKET")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX"  ENABLE;
--------------------------------------------------------
--  Constraints for Table DBI_NEXT_STATUS
--------------------------------------------------------

  ALTER TABLE "TOAKDBI"."DBI_NEXT_STATUS" ADD CONSTRAINT "DBI_NEXT_STATUS_PK" PRIMARY KEY ("DBI_CURR_STATUS", "DBI_NEXT_STATUS", "DBI_OPERATOR_ALLOWED", "DBI_TYPE", "DBI_FLAG")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX"  ENABLE;
  ALTER TABLE "TOAKDBI"."DBI_NEXT_STATUS" MODIFY ("DBI_OPERATOR_ALLOWED" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."DBI_NEXT_STATUS" MODIFY ("DBI_NEXT_STATUS" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."DBI_NEXT_STATUS" MODIFY ("DBI_CURR_STATUS" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table PWC_SYSTEM_GRP
--------------------------------------------------------

  ALTER TABLE "TOAKDBI"."PWC_SYSTEM_GRP" ADD CONSTRAINT "PWC_SYSTEM_GRP_PK" PRIMARY KEY ("PWC_NAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX"  ENABLE;
  ALTER TABLE "TOAKDBI"."PWC_SYSTEM_GRP" MODIFY ("UPDATE_DATE" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."PWC_SYSTEM_GRP" MODIFY ("PWC_NAME" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table DBI_LOV_CONTROL
--------------------------------------------------------

  ALTER TABLE "TOAKDBI"."DBI_LOV_CONTROL" ADD CONSTRAINT "DBI_LOV_CONTROL_1UQ" UNIQUE ("DBI_TYPE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX"  ENABLE;
--------------------------------------------------------
--  Constraints for Table DBI_NOTIFICATIONS
--------------------------------------------------------

  ALTER TABLE "TOAKDBI"."DBI_NOTIFICATIONS" ADD CONSTRAINT "NOTIFY_CHECK_Y_N_CK1" CHECK (notify in ('Y','N')) ENABLE;
  ALTER TABLE "TOAKDBI"."DBI_NOTIFICATIONS" MODIFY ("NOTIFY" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table DBI_SCRIPTS
--------------------------------------------------------

  ALTER TABLE "TOAKDBI"."DBI_SCRIPTS" ADD CONSTRAINT "DBI_SCRIPTS_PK" PRIMARY KEY ("SCRIPT_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX"  ENABLE;
--------------------------------------------------------
--  Constraints for Table PWREQUESTS
--------------------------------------------------------

  ALTER TABLE "TOAKDBI"."PWREQUESTS" ADD CONSTRAINT "PWREQUESTS_PK" PRIMARY KEY ("PWREQ_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX"  ENABLE;
  ALTER TABLE "TOAKDBI"."PWREQUESTS" MODIFY ("STATUS" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."PWREQUESTS" MODIFY ("PWC_ID" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."PWREQUESTS" MODIFY ("REQUEST_DATE" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."PWREQUESTS" MODIFY ("PWREQ_ID" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."PWREQUESTS" MODIFY ("OLD_PASSWORD" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."PWREQUESTS" MODIFY ("NEW_PASSWORD" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table DBI_DWH_TABLES
--------------------------------------------------------

  ALTER TABLE "TOAKDBI"."DBI_DWH_TABLES" ADD CONSTRAINT "DBI_DWH_TABLES_PK" PRIMARY KEY ("DB_INSTANCE", "DWH_TABLE_NAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX"  ENABLE;
--------------------------------------------------------
--  Constraints for Table DR$DBI_LOGS_TEXT_CTX1$K
--------------------------------------------------------

  ALTER TABLE "TOAKDBI"."DR$DBI_LOGS_TEXT_CTX1$K" ADD PRIMARY KEY ("TEXTKEY")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA"  ENABLE;
--------------------------------------------------------
--  Constraints for Table DBI_TEMP_TABLES
--------------------------------------------------------

  ALTER TABLE "TOAKDBI"."DBI_TEMP_TABLES" ADD CONSTRAINT "DBI_TEMP_TABLES_PK" PRIMARY KEY ("REQUEST_ID", "DB_INSTANCE", "TEMP_TABLE_NAME", "DB_USER")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX"  ENABLE;
  ALTER TABLE "TOAKDBI"."DBI_TEMP_TABLES" MODIFY ("TEMP_TYPE" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."DBI_TEMP_TABLES" MODIFY ("DB_USER" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."DBI_TEMP_TABLES" MODIFY ("TEMP_TABLE_NAME" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."DBI_TEMP_TABLES" MODIFY ("DB_INSTANCE" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."DBI_TEMP_TABLES" MODIFY ("REQUEST_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table DBI_K2K_OWNERSHIP
--------------------------------------------------------

  ALTER TABLE "TOAKDBI"."DBI_K2K_OWNERSHIP" ADD CONSTRAINT "DBI_K2K_OWNERSHIP_PK1" PRIMARY KEY ("SW_VERSION", "OBJ_NAME_PRD", "NEW_OWNER")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX"  ENABLE;
--------------------------------------------------------
--  Constraints for Table PWGRANTS
--------------------------------------------------------

  ALTER TABLE "TOAKDBI"."PWGRANTS" ADD CONSTRAINT "PWGRANTS_PK" PRIMARY KEY ("PWG_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX"  ENABLE;
--------------------------------------------------------
--  Constraints for Table PWC_DBINFO
--------------------------------------------------------

  ALTER TABLE "TOAKDBI"."PWC_DBINFO" ADD CONSTRAINT "PWC_DBINFO_PK" PRIMARY KEY ("PWC_NAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX"  ENABLE;
  ALTER TABLE "TOAKDBI"."PWC_DBINFO" MODIFY ("ENABLED" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."PWC_DBINFO" MODIFY ("LAST_STATUS" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."PWC_DBINFO" MODIFY ("UPDATE_DATE" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."PWC_DBINFO" MODIFY ("PWC_NAME" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table PWCONNECTS
--------------------------------------------------------

  ALTER TABLE "TOAKDBI"."PWCONNECTS" ADD CONSTRAINT "PWCONNECTS_PK" PRIMARY KEY ("PWC_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX"  ENABLE;
--------------------------------------------------------
--  Constraints for Table DBI_CONTACTS_20121128
--------------------------------------------------------

  ALTER TABLE "TOAKDBI"."DBI_CONTACTS_20121128" MODIFY ("PASSWORD" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."DBI_CONTACTS_20121128" MODIFY ("USERNAME" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."DBI_CONTACTS_20121128" MODIFY ("LEVEL_IND" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."DBI_CONTACTS_20121128" MODIFY ("CONTACT_COMPANY" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."DBI_CONTACTS_20121128" MODIFY ("CONTACT_EMAIL" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."DBI_CONTACTS_20121128" MODIFY ("CONTACT_PHONE" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."DBI_CONTACTS_20121128" MODIFY ("CONTACT_POSITION" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."DBI_CONTACTS_20121128" MODIFY ("CONTACT_DEPT" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."DBI_CONTACTS_20121128" MODIFY ("CONTACT_FIRST_NAME" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."DBI_CONTACTS_20121128" MODIFY ("CONTACT_LAST_NAME" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."DBI_CONTACTS_20121128" MODIFY ("CONTACT_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table DBI_REQUEST
--------------------------------------------------------

  ALTER TABLE "TOAKDBI"."DBI_REQUEST" ADD CONSTRAINT "DBI_REQUEST_PK" PRIMARY KEY ("REQUEST_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX"  ENABLE;
  ALTER TABLE "TOAKDBI"."DBI_REQUEST" MODIFY ("DBI_TYPE" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."DBI_REQUEST" MODIFY ("STATUS_DATE" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."DBI_REQUEST" MODIFY ("REQUEST_DATE" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."DBI_REQUEST" MODIFY ("PRIORITY_ID" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."DBI_REQUEST" MODIFY ("SW_VERSION" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."DBI_REQUEST" MODIFY ("REQUESTOR_ID" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."DBI_REQUEST" MODIFY ("DBI_STATUS" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."DBI_REQUEST" MODIFY ("REQUEST_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table DBI_LOGS_TEXT
--------------------------------------------------------

  ALTER TABLE "TOAKDBI"."DBI_LOGS_TEXT" ADD CONSTRAINT "DBI_LOGS_TEXT_PK" PRIMARY KEY ("LOG_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX"  ENABLE;
--------------------------------------------------------
--  Constraints for Table PWCERTS
--------------------------------------------------------

  ALTER TABLE "TOAKDBI"."PWCERTS" ADD CONSTRAINT "PWCERTS_PK" PRIMARY KEY ("PWCE_UID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA"  ENABLE;
--------------------------------------------------------
--  Constraints for Table DBI_MIG_EXCEPTION
--------------------------------------------------------

  ALTER TABLE "TOAKDBI"."DBI_MIG_EXCEPTION" ADD CONSTRAINT "DBI_MIG_EXCEPTION_PK" PRIMARY KEY ("REQUEST_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX"  ENABLE;
--------------------------------------------------------
--  Constraints for Table DBI_LOCKS
--------------------------------------------------------

  ALTER TABLE "TOAKDBI"."DBI_LOCKS" MODIFY ("LAST_CONTACT" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."DBI_LOCKS" MODIFY ("REQUEST_ID" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."DBI_LOCKS" MODIFY ("CONTACT_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table DBI_DOCUMENTATION
--------------------------------------------------------

  ALTER TABLE "TOAKDBI"."DBI_DOCUMENTATION" ADD CONSTRAINT "DBI_DOCUMENTATION_PK" PRIMARY KEY ("REQUEST_ID", "DOC_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX"  ENABLE;
  ALTER TABLE "TOAKDBI"."DBI_DOCUMENTATION" MODIFY ("DOC_NAME" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."DBI_DOCUMENTATION" MODIFY ("DOC_LINK" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."DBI_DOCUMENTATION" MODIFY ("DOC_ID" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."DBI_DOCUMENTATION" MODIFY ("REQUEST_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table DBI_TEMPLATE
--------------------------------------------------------

  ALTER TABLE "TOAKDBI"."DBI_TEMPLATE" ADD CONSTRAINT "DBI_TEMPLATE_1UQ" UNIQUE ("REQUEST_ID", "TABLE_NAME", "ALIAS_NAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX"  ENABLE;
  ALTER TABLE "TOAKDBI"."DBI_TEMPLATE" ADD CONSTRAINT "DBI_TEMPLATE_PK" PRIMARY KEY ("REQUEST_ID", "TABLE_NAME", "POSITION_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX"  ENABLE;
  ALTER TABLE "TOAKDBI"."DBI_TEMPLATE" MODIFY ("TEMP_TABLE_DRIVEN" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."DBI_TEMPLATE" MODIFY ("OPERATOR_ID" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."DBI_TEMPLATE" MODIFY ("CREATION_DATE" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."DBI_TEMPLATE" MODIFY ("POSITION_ID" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."DBI_TEMPLATE" MODIFY ("TABLE_NAME" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."DBI_TEMPLATE" MODIFY ("REQUEST_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table DBI_PRIORITY
--------------------------------------------------------

  ALTER TABLE "TOAKDBI"."DBI_PRIORITY" ADD CONSTRAINT "DBI_PRIORITY_1UQ" UNIQUE ("PRIORITY")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX"  ENABLE;
  ALTER TABLE "TOAKDBI"."DBI_PRIORITY" ADD CONSTRAINT "DBI_PRIORITY_PK" PRIMARY KEY ("PRIORITY_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX"  ENABLE;
  ALTER TABLE "TOAKDBI"."DBI_PRIORITY" MODIFY ("DEF_DUE_DAYS" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."DBI_PRIORITY" MODIFY ("PRIORITY" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."DBI_PRIORITY" MODIFY ("PRIORITY_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table DBI_EXECUTION_SELECTS
--------------------------------------------------------

  ALTER TABLE "TOAKDBI"."DBI_EXECUTION_SELECTS" ADD CONSTRAINT "PK_DBI_EXECUTION_SELECTS" PRIMARY KEY ("REQUEST_ID", "TABLE_NAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX"  ENABLE;
  ALTER TABLE "TOAKDBI"."DBI_EXECUTION_SELECTS" MODIFY ("TABLE_NAME" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."DBI_EXECUTION_SELECTS" MODIFY ("REQUEST_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table DBI_EXECUTION_RESULTS
--------------------------------------------------------

  ALTER TABLE "TOAKDBI"."DBI_EXECUTION_RESULTS" ADD CONSTRAINT "DBI_EXECUTION_RESULTS_PK" PRIMARY KEY ("REQUEST_ID", "DB_INSTANCE", "EXECUTION_STAGE", "EXECUTION_ID", "TABLE_NAME", "SQL_ACTION")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX"  ENABLE;
  ALTER TABLE "TOAKDBI"."DBI_EXECUTION_RESULTS" MODIFY ("DB_USER" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."DBI_EXECUTION_RESULTS" MODIFY ("SQL_ACTION" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."DBI_EXECUTION_RESULTS" MODIFY ("TABLE_NAME" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."DBI_EXECUTION_RESULTS" MODIFY ("EXECUTION_ID" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."DBI_EXECUTION_RESULTS" MODIFY ("DB_INSTANCE" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."DBI_EXECUTION_RESULTS" MODIFY ("EXECUTION_STAGE" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."DBI_EXECUTION_RESULTS" MODIFY ("REQUEST_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table PWUSERS
--------------------------------------------------------

  ALTER TABLE "TOAKDBI"."PWUSERS" ADD CONSTRAINT "PWUSERS_PK" PRIMARY KEY ("PWU_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX"  ENABLE;
  ALTER TABLE "TOAKDBI"."PWUSERS" ADD CONSTRAINT "PWUSERS_NAME_UNIQ" UNIQUE ("PWU_NAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX"  ENABLE;
--------------------------------------------------------
--  Constraints for Table DR$DBI_LOGS_TEXT_CTX1$R
--------------------------------------------------------

  ALTER TABLE "TOAKDBI"."DR$DBI_LOGS_TEXT_CTX1$R" ADD CONSTRAINT "DRC$DBI_LOGS_TEXT_CTX1$R" PRIMARY KEY ("ROW_NO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA"  ENABLE;
--------------------------------------------------------
--  Constraints for Table DBI_CONTACTS
--------------------------------------------------------

  ALTER TABLE "TOAKDBI"."DBI_CONTACTS" ADD CONSTRAINT "DBI_CONTACTS_1UQ" UNIQUE ("CONTACT_LAST_NAME", "CONTACT_FIRST_NAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX"  ENABLE;
  ALTER TABLE "TOAKDBI"."DBI_CONTACTS" ADD CONSTRAINT "DBI_CONTACTS_2UQ" UNIQUE ("USERNAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX"  ENABLE;
  ALTER TABLE "TOAKDBI"."DBI_CONTACTS" ADD CONSTRAINT "DBI_CONTACTS_PK" PRIMARY KEY ("CONTACT_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX"  ENABLE;
  ALTER TABLE "TOAKDBI"."DBI_CONTACTS" MODIFY ("PASSWORD" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."DBI_CONTACTS" MODIFY ("USERNAME" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."DBI_CONTACTS" MODIFY ("LEVEL_IND" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."DBI_CONTACTS" MODIFY ("CONTACT_COMPANY" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."DBI_CONTACTS" MODIFY ("CONTACT_EMAIL" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."DBI_CONTACTS" MODIFY ("CONTACT_POSITION" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."DBI_CONTACTS" MODIFY ("CONTACT_DEPT" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."DBI_CONTACTS" MODIFY ("CONTACT_FIRST_NAME" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."DBI_CONTACTS" MODIFY ("CONTACT_LAST_NAME" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."DBI_CONTACTS" MODIFY ("CONTACT_ID" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."DBI_CONTACTS" MODIFY ("CONTACT_PHONE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table DBI_SCRIPTS_TEXT
--------------------------------------------------------

  ALTER TABLE "TOAKDBI"."DBI_SCRIPTS_TEXT" ADD CONSTRAINT "DBI_SCRIPTS_TEXT_PK" PRIMARY KEY ("SCRIPT_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_IX"  ENABLE;
--------------------------------------------------------
--  Constraints for Table DBI_TEAMS
--------------------------------------------------------

  ALTER TABLE "TOAKDBI"."DBI_TEAMS" ADD CONSTRAINT "DBI_TEAMS_PK" PRIMARY KEY ("TEAM_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA"  ENABLE;
  ALTER TABLE "TOAKDBI"."DBI_TEAMS" MODIFY ("TEAM_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table DR$DBI_SCRIPTS_TEXT_CTX1$I
--------------------------------------------------------

  ALTER TABLE "TOAKDBI"."DR$DBI_SCRIPTS_TEXT_CTX1$I" MODIFY ("TOKEN_COUNT" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."DR$DBI_SCRIPTS_TEXT_CTX1$I" MODIFY ("TOKEN_LAST" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."DR$DBI_SCRIPTS_TEXT_CTX1$I" MODIFY ("TOKEN_FIRST" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."DR$DBI_SCRIPTS_TEXT_CTX1$I" MODIFY ("TOKEN_TYPE" NOT NULL ENABLE);
  ALTER TABLE "TOAKDBI"."DR$DBI_SCRIPTS_TEXT_CTX1$I" MODIFY ("TOKEN_TEXT" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table PWCAT
--------------------------------------------------------

  ALTER TABLE "TOAKDBI"."PWCAT" ADD CONSTRAINT "PWCAT_PK" PRIMARY KEY ("CAT")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA"  ENABLE;
--------------------------------------------------------
--  Constraints for Table DBI_EXCEPTION
--------------------------------------------------------

  ALTER TABLE "TOAKDBI"."DBI_EXCEPTION" ADD CONSTRAINT "DBI_EXCEPTION_PK" PRIMARY KEY ("REQUEST_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 1048576 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBS_DATA"  ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table DBI_AVAILABLE_TABLES
--------------------------------------------------------

  ALTER TABLE "TOAKDBI"."DBI_AVAILABLE_TABLES" ADD CONSTRAINT "DBI_AVAILABLE_TABLES_1FK" FOREIGN KEY ("DB_INSTANCE")
	  REFERENCES "TOAKDBI"."DBI_INSTANCES" ("PROD_INSTANCE") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table DBI_CONTACTS
--------------------------------------------------------

  ALTER TABLE "TOAKDBI"."DBI_CONTACTS" ADD CONSTRAINT "DBI_CONTACTS_1FK" FOREIGN KEY ("LEVEL_IND")
	  REFERENCES "TOAKDBI"."DBI_OPERATOR" ("DBI_OPER_SHORT") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table DBI_DOCUMENTATION
--------------------------------------------------------

  ALTER TABLE "TOAKDBI"."DBI_DOCUMENTATION" ADD CONSTRAINT "DBI_DOCUMENTATION_1FK" FOREIGN KEY ("REQUEST_ID")
	  REFERENCES "TOAKDBI"."DBI_REQUEST" ("REQUEST_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table DBI_DWH_TABLES
--------------------------------------------------------

  ALTER TABLE "TOAKDBI"."DBI_DWH_TABLES" ADD CONSTRAINT "DBI_DWH_TABLES_1FK" FOREIGN KEY ("DB_INSTANCE")
	  REFERENCES "TOAKDBI"."DBI_INSTANCES" ("PROD_INSTANCE") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table DBI_EXCEPTION
--------------------------------------------------------

  ALTER TABLE "TOAKDBI"."DBI_EXCEPTION" ADD CONSTRAINT "DBI_EXCEPTION_OP_FK" FOREIGN KEY ("OPERATOR_ID")
	  REFERENCES "TOAKDBI"."DBI_CONTACTS" ("CONTACT_ID") ENABLE;
  ALTER TABLE "TOAKDBI"."DBI_EXCEPTION" ADD CONSTRAINT "DBI_EXCEPTION_REQ_FK" FOREIGN KEY ("REQUEST_ID")
	  REFERENCES "TOAKDBI"."DBI_REQUEST" ("REQUEST_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table DBI_EXECUTION
--------------------------------------------------------

  ALTER TABLE "TOAKDBI"."DBI_EXECUTION" ADD CONSTRAINT "DBI_EXECUTION_1FK" FOREIGN KEY ("REQUEST_ID")
	  REFERENCES "TOAKDBI"."DBI_REQUEST" ("REQUEST_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table DBI_LOGS
--------------------------------------------------------

  ALTER TABLE "TOAKDBI"."DBI_LOGS" ADD CONSTRAINT "DBI_LOGS_FK1" FOREIGN KEY ("REQUEST_ID")
	  REFERENCES "TOAKDBI"."DBI_REQUEST" ("REQUEST_ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table DBI_LOGS_TEXT
--------------------------------------------------------

  ALTER TABLE "TOAKDBI"."DBI_LOGS_TEXT" ADD CONSTRAINT "DBI_LOGS_TEXT_FK1" FOREIGN KEY ("LOG_ID")
	  REFERENCES "TOAKDBI"."DBI_LOGS" ("LOG_ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table DBI_NEXT_STATUS
--------------------------------------------------------

  ALTER TABLE "TOAKDBI"."DBI_NEXT_STATUS" ADD CONSTRAINT "DBI_NEXT_STATUS_1FK" FOREIGN KEY ("DBI_CURR_STATUS")
	  REFERENCES "TOAKDBI"."DBI_STATUSES" ("DBI_STATUS") ENABLE;
  ALTER TABLE "TOAKDBI"."DBI_NEXT_STATUS" ADD CONSTRAINT "DBI_NEXT_STATUS_2FK" FOREIGN KEY ("DBI_OPERATOR_ALLOWED")
	  REFERENCES "TOAKDBI"."DBI_OPERATOR" ("DBI_OPER_SHORT") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table DBI_NOTIFICATIONS
--------------------------------------------------------

  ALTER TABLE "TOAKDBI"."DBI_NOTIFICATIONS" ADD CONSTRAINT "NOTIFY_CONTACT_FK1" FOREIGN KEY ("OPERATOR_ID")
	  REFERENCES "TOAKDBI"."DBI_CONTACTS" ("CONTACT_ID") ENABLE NOVALIDATE;
  ALTER TABLE "TOAKDBI"."DBI_NOTIFICATIONS" ADD CONSTRAINT "NOTIFY_REQUEST_FK1" FOREIGN KEY ("REQUEST_ID")
	  REFERENCES "TOAKDBI"."DBI_REQUEST" ("REQUEST_ID") ENABLE NOVALIDATE;
--------------------------------------------------------
--  Ref Constraints for Table DBI_REQUEST
--------------------------------------------------------

  ALTER TABLE "TOAKDBI"."DBI_REQUEST" ADD CONSTRAINT "DBI_REQUEST_1FK" FOREIGN KEY ("REQUESTOR_ID")
	  REFERENCES "TOAKDBI"."DBI_CONTACTS" ("CONTACT_ID") ENABLE;
  ALTER TABLE "TOAKDBI"."DBI_REQUEST" ADD CONSTRAINT "DBI_REQUEST_2FK" FOREIGN KEY ("SDE_ID")
	  REFERENCES "TOAKDBI"."DBI_CONTACTS" ("CONTACT_ID") ENABLE;
  ALTER TABLE "TOAKDBI"."DBI_REQUEST" ADD CONSTRAINT "DBI_REQUEST_3FK" FOREIGN KEY ("ADBA_ID")
	  REFERENCES "TOAKDBI"."DBI_CONTACTS" ("CONTACT_ID") ENABLE;
  ALTER TABLE "TOAKDBI"."DBI_REQUEST" ADD CONSTRAINT "DBI_REQUEST_4FK" FOREIGN KEY ("DBI_STATUS")
	  REFERENCES "TOAKDBI"."DBI_STATUSES" ("DBI_STATUS") ENABLE;
  ALTER TABLE "TOAKDBI"."DBI_REQUEST" ADD CONSTRAINT "DBI_REQUEST_5FK" FOREIGN KEY ("PRIORITY_ID")
	  REFERENCES "TOAKDBI"."DBI_PRIORITY" ("PRIORITY_ID") ENABLE;
  ALTER TABLE "TOAKDBI"."DBI_REQUEST" ADD CONSTRAINT "DBI_REQUEST_6FK" FOREIGN KEY ("DBI_TYPE")
	  REFERENCES "TOAKDBI"."DBI_LOV_CONTROL" ("DBI_TYPE") ENABLE;
  ALTER TABLE "TOAKDBI"."DBI_REQUEST" ADD CONSTRAINT "DBI_REQUEST_7FK" FOREIGN KEY ("SW_VERSION")
	  REFERENCES "TOAKDBI"."DBI_SW_VERSIONS" ("SW_VERSION") ENABLE;
  ALTER TABLE "TOAKDBI"."DBI_REQUEST" ADD CONSTRAINT "DBI_REQUEST_8FK" FOREIGN KEY ("APPROVED_OPERATOR")
	  REFERENCES "TOAKDBI"."DBI_OPERATOR" ("DBI_OPER_SHORT") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table DBI_REQUEST_HISTORY
--------------------------------------------------------

  ALTER TABLE "TOAKDBI"."DBI_REQUEST_HISTORY" ADD CONSTRAINT "DBI_REQUEST_HISTORY_1FK" FOREIGN KEY ("REQUEST_ID")
	  REFERENCES "TOAKDBI"."DBI_REQUEST" ("REQUEST_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table DBI_SCRIPTS
--------------------------------------------------------

  ALTER TABLE "TOAKDBI"."DBI_SCRIPTS" ADD CONSTRAINT "DBI_SCRIPTS_FK1" FOREIGN KEY ("REQUEST_ID")
	  REFERENCES "TOAKDBI"."DBI_REQUEST" ("REQUEST_ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table DBI_SCRIPTS_TEXT
--------------------------------------------------------

  ALTER TABLE "TOAKDBI"."DBI_SCRIPTS_TEXT" ADD CONSTRAINT "DBI_SCRIPTS_TEXT_FK1" FOREIGN KEY ("SCRIPT_ID")
	  REFERENCES "TOAKDBI"."DBI_SCRIPTS" ("SCRIPT_ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table DBI_TEMPLATE
--------------------------------------------------------

  ALTER TABLE "TOAKDBI"."DBI_TEMPLATE" ADD CONSTRAINT "DBI_TEMPLATE_1FK" FOREIGN KEY ("REQUEST_ID")
	  REFERENCES "TOAKDBI"."DBI_REQUEST" ("REQUEST_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table DBI_TEMP_TABLES
--------------------------------------------------------

  ALTER TABLE "TOAKDBI"."DBI_TEMP_TABLES" ADD CONSTRAINT "DBI_TEMP_TABLES_1FK" FOREIGN KEY ("REQUEST_ID")
	  REFERENCES "TOAKDBI"."DBI_REQUEST" ("REQUEST_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table GENERAL_PROPERTIES
--------------------------------------------------------

  ALTER TABLE "TOAKDBI"."GENERAL_PROPERTIES" ADD CONSTRAINT "GENERAL_PROPERIES_PARENT_FK" FOREIGN KEY ("PARENT_ID")
	  REFERENCES "TOAKDBI"."GENERAL_PROPERTIES" ("GEN_PROP_ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table PWCERTS
--------------------------------------------------------

  ALTER TABLE "TOAKDBI"."PWCERTS" ADD CONSTRAINT "PWCERTS_PWUID_FK" FOREIGN KEY ("PWCE_UID")
	  REFERENCES "TOAKDBI"."PWUSERS" ("PWU_NAME") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table PWGRANTS
--------------------------------------------------------

  ALTER TABLE "TOAKDBI"."PWGRANTS" ADD CONSTRAINT "PWGRANTS_CONNECTS_FK" FOREIGN KEY ("PWC_ID")
	  REFERENCES "TOAKDBI"."PWCONNECTS" ("PWC_ID") ON DELETE CASCADE ENABLE;
  ALTER TABLE "TOAKDBI"."PWGRANTS" ADD CONSTRAINT "PWGRANTS_ROLES_FK" FOREIGN KEY ("PWR_ID")
	  REFERENCES "TOAKDBI"."PWROLES" ("PWR_ID") ON DELETE CASCADE ENABLE;
  ALTER TABLE "TOAKDBI"."PWGRANTS" ADD CONSTRAINT "PWGRANTS_USERS_FK" FOREIGN KEY ("PWU_ID")
	  REFERENCES "TOAKDBI"."PWUSERS" ("PWU_ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table PWUSERS
--------------------------------------------------------

  ALTER TABLE "TOAKDBI"."PWUSERS" ADD CONSTRAINT "PWUSERS_CONTACTID_FK" FOREIGN KEY ("PWU_CONTACTID")
	  REFERENCES "TOAKDBI"."DBI_CONTACTS" ("CONTACT_ID") ON DELETE SET NULL ENABLE NOVALIDATE;
--------------------------------------------------------
--  Ref Constraints for Table SUB_MENU
--------------------------------------------------------

  ALTER TABLE "TOAKDBI"."SUB_MENU" ADD CONSTRAINT "SUBMENU_MAINMENU_FK" FOREIGN KEY ("MAIN_MENU_ID")
	  REFERENCES "TOAKDBI"."MAIN_MENU" ("MAIN_MENU_ID") ENABLE;
  ALTER TABLE "TOAKDBI"."SUB_MENU" ADD CONSTRAINT "SUBMENU_SUBMENU_FK" FOREIGN KEY ("PARENT_SUB_MENU_ID")
	  REFERENCES "TOAKDBI"."SUB_MENU" ("SUB_MENU_ID") ENABLE;
